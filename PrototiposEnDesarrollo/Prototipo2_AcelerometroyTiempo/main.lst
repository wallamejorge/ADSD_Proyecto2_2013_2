GAS LISTING /tmp/ccDlPBYj.s 			page 1


   1               		.file	"main.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.stabs	"/home/juanfe/Desktop/ADSD_Proyecto2_2013_2/PrototiposEnDesarrollo/Prototipo2_Acelerometroy
   9               		.stabs	"main.c",100,0,2,.Ltext0
  10               		.text
  11               	.Ltext0:
  12               		.stabs	"gcc2_compiled.",60,0,0,0
  13               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,0,0
  14               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,0,0
  15               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,0,0
  16               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,0,0
  17               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,0,0
  18               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,0,
  19               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,0,0
  20               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,0,0
  21               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,0,0
  22               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,0,0
  23               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
  24               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,0,0
  25               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,0,0
  26               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,0,0
  27               		.stabs	"void:t(0,15)=(0,15)",128,0,0,0
  28               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/io.h",130,0,0,0
  29               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/sfr_defs.h",130,0,0,0
  30               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/inttypes.h",130,0,0,0
  31               		.stabs	"/usr/lib/gcc/avr/4.5.3/include/stdint.h",130,0,0,0
  32               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/stdint.h",130,0,0,0
  33               		.stabs	"int8_t:t(5,1)=(0,10)",128,0,121,0
  34               		.stabs	"uint8_t:t(5,2)=(0,11)",128,0,122,0
  35               		.stabs	"int16_t:t(5,3)=(0,1)",128,0,123,0
  36               		.stabs	"uint16_t:t(5,4)=(0,4)",128,0,124,0
  37               		.stabs	"int32_t:t(5,5)=(0,3)",128,0,125,0
  38               		.stabs	"uint32_t:t(5,6)=(0,5)",128,0,126,0
  39               		.stabs	"int64_t:t(5,7)=(0,6)",128,0,128,0
  40               		.stabs	"uint64_t:t(5,8)=(0,7)",128,0,129,0
  41               		.stabs	"intptr_t:t(5,9)=(5,3)",128,0,142,0
  42               		.stabs	"uintptr_t:t(5,10)=(5,4)",128,0,147,0
  43               		.stabs	"int_least8_t:t(5,11)=(5,1)",128,0,159,0
  44               		.stabs	"uint_least8_t:t(5,12)=(5,2)",128,0,164,0
  45               		.stabs	"int_least16_t:t(5,13)=(5,3)",128,0,169,0
  46               		.stabs	"uint_least16_t:t(5,14)=(5,4)",128,0,174,0
  47               		.stabs	"int_least32_t:t(5,15)=(5,5)",128,0,179,0
  48               		.stabs	"uint_least32_t:t(5,16)=(5,6)",128,0,184,0
  49               		.stabs	"int_least64_t:t(5,17)=(5,7)",128,0,192,0
  50               		.stabs	"uint_least64_t:t(5,18)=(5,8)",128,0,199,0
  51               		.stabs	"int_fast8_t:t(5,19)=(5,1)",128,0,213,0
  52               		.stabs	"uint_fast8_t:t(5,20)=(5,2)",128,0,218,0
  53               		.stabs	"int_fast16_t:t(5,21)=(5,3)",128,0,223,0
  54               		.stabs	"uint_fast16_t:t(5,22)=(5,4)",128,0,228,0
  55               		.stabs	"int_fast32_t:t(5,23)=(5,5)",128,0,233,0
  56               		.stabs	"uint_fast32_t:t(5,24)=(5,6)",128,0,238,0
  57               		.stabs	"int_fast64_t:t(5,25)=(5,7)",128,0,246,0
GAS LISTING /tmp/ccDlPBYj.s 			page 2


  58               		.stabs	"uint_fast64_t:t(5,26)=(5,8)",128,0,253,0
  59               		.stabs	"intmax_t:t(5,27)=(5,7)",128,0,273,0
  60               		.stabs	"uintmax_t:t(5,28)=(5,8)",128,0,278,0
  61               		.stabn	162,0,0,0
  62               		.stabn	162,0,0,0
  63               		.stabs	"int_farptr_t:t(3,1)=(5,5)",128,0,77,0
  64               		.stabs	"uint_farptr_t:t(3,2)=(5,6)",128,0,81,0
  65               		.stabn	162,0,0,0
  66               		.stabn	162,0,0,0
  67               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/fuse.h",130,0,0,0
  68               		.stabs	"__fuse_t:t(6,1)=(6,2)=s2low:(0,11),0,8;high:(0,11),8,8;;",128,0,252,0
  69               		.stabn	162,0,0,0
  70               		.stabn	162,0,0,0
  71               		.stabs	"init_ports:F(0,15)",36,0,107,init_ports
  72               	.global	init_ports
  73               		.type	init_ports, @function
  74               	init_ports:
  75               		.stabd	46,0,0
   1:main.c        **** //-------------------------------------------------------------------------------------------------
   2:main.c        **** //Prototipo NO.2 Proyecto 2 Cohete Agua. Codigo que lee 3 señales analogas de 0-5v y calcula los a
   3:main.c        **** // es capaz de predecir la distancia maxima
   4:main.c        **** // Autores: Juan Felipe Martinez, Monica Tuta Fajardo, Jorge Luis Mayorga
   5:main.c        **** // Universidad de los Andes
   6:main.c        **** //-------------------------------------------------------------------------------------------------
   7:main.c        **** 
   8:main.c        **** //-------------------------------------------------//
   9:main.c        **** //-----------------LIBRERIAS-----------------------//
  10:main.c        **** //------------------------------------------------//
  11:main.c        **** //#include<mega16.h>
  12:main.c        **** #include<avr/io.h>
  13:main.c        **** #include<math.h>
  14:main.c        **** #include<util/delay.h>
  15:main.c        **** #include<stdbool.h>
  16:main.c        **** //------------------------------------------------//
  17:main.c        **** 
  18:main.c        **** 
  19:main.c        **** //------------------------------------------------//
  20:main.c        **** //---------------DEFINIR FUNCIONES----------------//
  21:main.c        **** //------------------------------------------------//
  22:main.c        **** #define sbi(x,y) x |= _BV(y) //Hace set al yth bit del puerto X
  23:main.c        **** #define cbi(x,y) x &= ~(_BV(y)) //Hace reset al yth bit del puerto X
  24:main.c        **** #define tbi(x,y) x ^= _BV(y) //Cambia el estado logico del yth bit del puerto X
  25:main.c        **** #define is_high(x,y) ((x & _BV(y)) == _BV(y))
  26:main.c        **** #define is_low(x,y) ((x & (_BV(y))) == 0) //check if the input pin is low
  27:main.c        **** double initial_anglexz(double ax, double ay, double az); // Calcula el angulo xz inicial de lanzami
  28:main.c        **** double final_distance(double angle0xz,double tf); // Calcula la distancia del cohete en mts usando 
  29:main.c        **** int time_counter(int Reset,int count,int count0); // Contador mientras que este activo count
  30:main.c        **** void init_ports(void); //Inicializa los puertos
  31:main.c        **** void select_ADC_port(int i);// Seleccion cual puerto de ADC leer
  32:main.c        **** void print_Angle_Binary(int NoPortCD,double angle);// Imprime en PORTD el angulo medido en binario
  33:main.c        **** void print_Decimes(float num_in);// Imprime en PORTD el angulo medido en binario
  34:main.c        **** void print_Time_Binary(int time);// Imprime en PORTC el tiempo medido en binario
  35:main.c        **** 
  36:main.c        **** //------------------------------------------------------//
  37:main.c        **** 
  38:main.c        **** 
  39:main.c        **** //------------------------------------------------------//
GAS LISTING /tmp/ccDlPBYj.s 			page 3


  40:main.c        **** //---------------------Main.c---------------------------//
  41:main.c        **** //------------------------------------------------------//
  42:main.c        **** void main(void)
  43:main.c        **** {
  44:main.c        **** 	init_ports(); // Inicializa puertos A=>ADC, B=Inputs ,C=Outputs , D=Outputs
  45:main.c        **** 	int i=0;
  46:main.c        **** 	double angle0xz=0.0;
  47:main.c        **** 	double x_total=0.0;
  48:main.c        **** 	double a[5];
  49:main.c        **** 	int time=0;
  50:main.c        **** 	double ms_time=0.0;
  51:main.c        **** 	int count=0;
  52:main.c        **** 	int aterrizo=0;
  53:main.c        **** 
  54:main.c        **** 	while (1)
  55:main.c        **** 	{  for(i=0;i<6;i++){select_ADC_port(i); /*Seleccionar puerto de entrada ADC*/ a[i]=ADCH-81;} // Ca
  56:main.c        **** 	a[3]=a[3]+81;
  57:main.c        **** 	a[4]=a[4]+81;
  58:main.c        **** 			
  59:main.c        **** 		// Conversión de entrada análoga
  60:main.c        **** 		
  61:main.c        **** 		if(a[3]>132){count=1;}
  62:main.c        **** 		else{count=0;}
  63:main.c        **** 
  64:main.c        **** 		if(a[4]>132){aterrizo=1;}
  65:main.c        **** 		else{aterrizo=0;}
  66:main.c        **** 
  67:main.c        **** 		// Si reset (análogo) todas la señales a 0, sino los contadores de milisegundos y segundos func
  68:main.c        **** 								    	
  69:main.c        **** 	    if ((count==1) && (aterrizo==0)) {
  70:main.c        **** 			        ms_time=ms_time;time=time;
  71:main.c        **** 				angle0xz=initial_anglexz(a[0],a[1],a[2]); // Genero angulo entre x y z en grados
  72:main.c        **** 				
  73:main.c        **** 				print_Angle_Binary(1,angle0xz);// Imprime el angulo en binario en el puerto PORTD  */
  74:main.c        **** 				
  75:main.c        **** 				x_total=final_distance(angle0xz,(time+(ms_time/10))); // Calcula la distancia final.
  76:main.c        **** 				print_Decimes(x_total);
  77:main.c        **** 			        }			
  78:main.c        **** 	    else if ((count==0) && (aterrizo==0))     {
  79:main.c        **** 
  80:main.c        **** 				if(ms_time==8){time=time+1;ms_time=0;}else{time=time+0;}
  81:main.c        **** 				_delay_ms(99);
  82:main.c        **** 				ms_time=ms_time+1;	
  83:main.c        **** 				print_Time_Binary(time);
  84:main.c        **** 				angle0xz=angle0xz;
  85:main.c        **** 				print_Angle_Binary(1,angle0xz); // Imprime el angulo en binario en el puerto PORTD */
  86:main.c        **** 
  87:main.c        **** 				x_total=final_distance(angle0xz,(time+(ms_time/10))); // Calcula la distancia final.
  88:main.c        **** 				print_Decimes(x_total);
  89:main.c        **** 				
  90:main.c        **** 				}
  91:main.c        **** 	    else {
  92:main.c        **** 				ms_time=ms_time;
  93:main.c        **** 				time=time;
  94:main.c        **** 				print_Time_Binary(time);				
  95:main.c        **** 				angle0xz=angle0xz; 
  96:main.c        **** 				print_Angle_Binary(1,angle0xz);
GAS LISTING /tmp/ccDlPBYj.s 			page 4


  97:main.c        **** 				x_total=final_distance(angle0xz,(time+(ms_time/10))); // Calcula la distancia final.
  98:main.c        **** 				print_Decimes(x_total);
  99:main.c        **** 	 		
 100:main.c        **** 	}
 101:main.c        **** }
 102:main.c        **** }
 103:main.c        **** //------------------------------------------------------//
 104:main.c        **** //------------------------------------------------------//
 105:main.c        **** //-------------------Init_Ports-------------------------//
 106:main.c        **** //------------------------------------------------------//
 107:main.c        **** void init_ports(void){
  76               		.stabn	68,0,107,.LM0-.LFBB1
  77               	.LM0:
  78               	.LFBB1:
  79               	/* prologue: function */
  80               	/* frame size = 0 */
  81               	/* stack size = 0 */
  82               	.L__stack_usage = 0
 108:main.c        **** 
 109:main.c        **** 	MCUCSR|=(1<<JTD);
  83               		.stabn	68,0,109,.LM1-.LFBB1
  84               	.LM1:
  85 0000 84B7      		in r24,84-32
  86 0002 8068      		ori r24,lo8(-128)
  87 0004 84BF      		out 84-32,r24
 110:main.c        **** 	MCUCSR|=(1<<JTD);
  88               		.stabn	68,0,110,.LM2-.LFBB1
  89               	.LM2:
  90 0006 84B7      		in r24,84-32
  91 0008 8068      		ori r24,lo8(-128)
  92 000a 84BF      		out 84-32,r24
 111:main.c        **** 	DDRA=0x00;	//Defino Puerto A como Inputs
  93               		.stabn	68,0,111,.LM3-.LFBB1
  94               	.LM3:
  95 000c 1ABA      		out 58-32,__zero_reg__
 112:main.c        **** 	PORTA=0x00;     //Habilito los puertos de A
  96               		.stabn	68,0,112,.LM4-.LFBB1
  97               	.LM4:
  98 000e 1BBA      		out 59-32,__zero_reg__
 113:main.c        **** 	DDRB = 0x1f;    //Defino Puerto B como Inputs
  99               		.stabn	68,0,113,.LM5-.LFBB1
 100               	.LM5:
 101 0010 8FE1      		ldi r24,lo8(31)
 102 0012 87BB      		out 55-32,r24
 114:main.c        **** 	PORTB=0x00;     //Habilito los puertos de B
 103               		.stabn	68,0,114,.LM6-.LFBB1
 104               	.LM6:
 105 0014 18BA      		out 56-32,__zero_reg__
 115:main.c        **** 
 116:main.c        **** 	DDRC=0xff;		//Defino Puerto C como Outputs
 106               		.stabn	68,0,116,.LM7-.LFBB1
 107               	.LM7:
 108 0016 8FEF      		ldi r24,lo8(-1)
 109 0018 84BB      		out 52-32,r24
 117:main.c        **** 	PORTC=0x00;     //Habilito los puertos de C
 110               		.stabn	68,0,117,.LM8-.LFBB1
 111               	.LM8:
GAS LISTING /tmp/ccDlPBYj.s 			page 5


 112 001a 15BA      		out 53-32,__zero_reg__
 118:main.c        **** 	DDRD = 0xff;    //Defino Puerto D como Outputs
 113               		.stabn	68,0,118,.LM9-.LFBB1
 114               	.LM9:
 115 001c 81BB      		out 49-32,r24
 119:main.c        **** 	PORTD=0x00;     //Habilito los puertos de D
 116               		.stabn	68,0,119,.LM10-.LFBB1
 117               	.LM10:
 118 001e 12BA      		out 50-32,__zero_reg__
 120:main.c        **** 
 121:main.c        **** 	ADCSRA = _BV(ADEN) | _BV(ADPS2) | _BV(ADPS1) | _BV(ADPS0); // Habilito preescaler para tener una b
 119               		.stabn	68,0,121,.LM11-.LFBB1
 120               	.LM11:
 121 0020 87E8      		ldi r24,lo8(-121)
 122 0022 86B9      		out 38-32,r24
 123               	/* epilogue start */
 122:main.c        **** 
 123:main.c        **** }
 124               		.stabn	68,0,123,.LM12-.LFBB1
 125               	.LM12:
 126 0024 0895      		ret
 127               		.size	init_ports, .-init_ports
 128               	.Lscope1:
 129               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 130               		.stabd	78,0,0
 131               		.stabs	"select_ADC_port:F(0,15)",36,0,130,select_ADC_port
 132               	.global	select_ADC_port
 133               		.type	select_ADC_port, @function
 134               	select_ADC_port:
 135               		.stabd	46,0,0
 124:main.c        **** //------------------------------------------------------//
 125:main.c        **** 
 126:main.c        **** 
 127:main.c        **** //------------------------------------------------------//
 128:main.c        **** //----------------Select_ADC_port-----------------------//
 129:main.c        **** //------------------------------------------------------//
 130:main.c        **** void select_ADC_port(int i){
 136               		.stabn	68,0,130,.LM13-.LFBB2
 137               	.LM13:
 138               	.LFBB2:
 139               	/* prologue: function */
 140               	/* frame size = 0 */
 141               	/* stack size = 0 */
 142               	.L__stack_usage = 0
 131:main.c        **** 	ADMUX = _BV(ADLAR) + i; // Selecciona un pin de las entradas analogas ADC[i]
 143               		.stabn	68,0,131,.LM14-.LFBB2
 144               	.LM14:
 145 0026 805E      		subi r24,lo8(-(32))
 146 0028 87B9      		out 39-32,r24
 132:main.c        **** 	ADCSRA |= _BV(ADSC); //Comienza conversion
 147               		.stabn	68,0,132,.LM15-.LFBB2
 148               	.LM15:
 149 002a 369A      		sbi 38-32,6
 150               	.L3:
 133:main.c        **** 	while (ADCSRA & _BV(ADSC) ) {}  // Esperar la conversion
 151               		.stabn	68,0,133,.LM16-.LFBB2
 152               	.LM16:
GAS LISTING /tmp/ccDlPBYj.s 			page 6


 153 002c 3699      		sbic 38-32,6
 154 002e 00C0      		rjmp .L3
 155               	/* epilogue start */
 134:main.c        **** 
 135:main.c        **** }
 156               		.stabn	68,0,135,.LM17-.LFBB2
 157               	.LM17:
 158 0030 0895      		ret
 159               		.size	select_ADC_port, .-select_ADC_port
 160               	.Lscope2:
 161               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 162               		.stabd	78,0,0
 163               		.stabs	"initial_anglexz:F(0,13)",36,0,141,initial_anglexz
 164               		.stabs	"ax:P(0,13)",64,0,141,18
 165               		.stabs	"ay:P(0,13)",64,0,141,18
 166               		.stabs	"az:P(0,13)",64,0,141,22
 167               	.global	initial_anglexz
 168               		.type	initial_anglexz, @function
 169               	initial_anglexz:
 170               		.stabd	46,0,0
 136:main.c        **** //------------------------------------------------------//
 137:main.c        **** 
 138:main.c        **** //------------------------------------------------------//
 139:main.c        **** //----------------Initial_Angle_XZ----------------------//
 140:main.c        **** //------------------------------------------------------//
 141:main.c        **** double initial_anglexz(double ax, double ay, double az){
 171               		.stabn	68,0,141,.LM18-.LFBB3
 172               	.LM18:
 173               	.LFBB3:
 174 0032 EF92      		push r14
 175 0034 FF92      		push r15
 176 0036 0F93      		push r16
 177 0038 1F93      		push r17
 178               	/* prologue: function */
 179               	/* frame size = 0 */
 180               	/* stack size = 4 */
 181               	.L__stack_usage = 4
 182 003a 9B01      		movw r18,r22
 183 003c AC01      		movw r20,r24
 184 003e C801      		movw r24,r16
 185 0040 B701      		movw r22,r14
 142:main.c        **** 	return atan(az/ax)*(57.2958);
 186               		.stabn	68,0,142,.LM19-.LFBB3
 187               	.LM19:
 188 0042 0E94 0000 		call __divsf3
 189 0046 0E94 0000 		call atan
 190 004a 26EE      		ldi r18,lo8(0x42652ee6)
 191 004c 3EE2      		ldi r19,hi8(0x42652ee6)
 192 004e 45E6      		ldi r20,hlo8(0x42652ee6)
 193 0050 52E4      		ldi r21,hhi8(0x42652ee6)
 194 0052 0E94 0000 		call __mulsf3
 195               	/* epilogue start */
 143:main.c        **** }
 196               		.stabn	68,0,143,.LM20-.LFBB3
 197               	.LM20:
 198 0056 1F91      		pop r17
 199 0058 0F91      		pop r16
GAS LISTING /tmp/ccDlPBYj.s 			page 7


 200 005a FF90      		pop r15
 201 005c EF90      		pop r14
 202 005e 0895      		ret
 203               		.size	initial_anglexz, .-initial_anglexz
 204               	.Lscope3:
 205               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 206               		.stabd	78,0,0
 207               		.stabs	"print_Angle_Binary:F(0,15)",36,0,149,print_Angle_Binary
 208               		.stabs	"NoPortCD:P(0,1)",64,0,149,24
 209               		.stabs	"angle:P(0,13)",64,0,149,14
 210               	.global	print_Angle_Binary
 211               		.type	print_Angle_Binary, @function
 212               	print_Angle_Binary:
 213               		.stabd	46,0,0
 144:main.c        **** //------------------------------------------------------//
 145:main.c        **** 
 146:main.c        **** //------------------------------------------------------//
 147:main.c        **** //----------------------Print Angle---------------------//
 148:main.c        **** //------------------------------------------------------//
 149:main.c        **** void print_Angle_Binary(int NoPortCD,double angle){
 214               		.stabn	68,0,149,.LM21-.LFBB4
 215               	.LM21:
 216               	.LFBB4:
 217 0060 EF92      		push r14
 218 0062 FF92      		push r15
 219 0064 0F93      		push r16
 220 0066 1F93      		push r17
 221               	/* prologue: function */
 222               	/* frame size = 0 */
 223               	/* stack size = 4 */
 224               	.L__stack_usage = 4
 225 0068 7A01      		movw r14,r20
 226 006a 8B01      		movw r16,r22
 150:main.c        **** 
 151:main.c        **** 	double angle_segment_0=5;
 152:main.c        **** 	double angle_segment_1=10;
 153:main.c        **** 	double angle_segment_2=15;
 154:main.c        **** 	double angle_segment_3=20;
 155:main.c        **** 	double angle_segment_4=25;
 156:main.c        **** 	double angle_segment_5=30;
 157:main.c        **** 	double angle_segment_6=35;
 158:main.c        **** 	double angle_segment_7=40;
 159:main.c        **** 	double angle_segment_8=45;
 160:main.c        **** 	double angle_segment_9=50;
 161:main.c        **** 	double angle_segment_10=55;
 162:main.c        **** 	double angle_segment_11=60;
 163:main.c        **** 	double angle_segment_12=65;
 164:main.c        **** 	double angle_segment_13=70;
 165:main.c        **** 	double angle_segment_14=75;
 166:main.c        **** 	double angle_segment_15=80;
 167:main.c        **** 	double angle_segment_16=85;
 168:main.c        **** 	double angle_segment_17=90;
 169:main.c        **** 
 170:main.c        **** 
 171:main.c        **** 	if(angle>angle_segment_17){PORTD=0x05;}        //0000//-----//0000// = 00
 227               		.stabn	68,0,171,.LM22-.LFBB4
 228               	.LM22:
GAS LISTING /tmp/ccDlPBYj.s 			page 8


 229 006c CB01      		movw r24,r22
 230 006e BA01      		movw r22,r20
 231 0070 20E0      		ldi r18,lo8(0x42b40000)
 232 0072 30E0      		ldi r19,hi8(0x42b40000)
 233 0074 44EB      		ldi r20,hlo8(0x42b40000)
 234 0076 52E4      		ldi r21,hhi8(0x42b40000)
 235 0078 0E94 0000 		call __gtsf2
 236 007c 1816      		cp __zero_reg__,r24
 237 007e 04F4      		brge .L62
 238               		.stabn	68,0,171,.LM23-.LFBB4
 239               	.LM23:
 240 0080 85E0      		ldi r24,lo8(5)
 241 0082 00C0      		rjmp .L80
 242               	.L62:
 172:main.c        **** 	else if(angle>angle_segment_16){PORTD=0x10;}   //0000//-----//0101// = 05
 243               		.stabn	68,0,172,.LM24-.LFBB4
 244               	.LM24:
 245 0084 C801      		movw r24,r16
 246 0086 B701      		movw r22,r14
 247 0088 20E0      		ldi r18,lo8(0x42aa0000)
 248 008a 30E0      		ldi r19,hi8(0x42aa0000)
 249 008c 4AEA      		ldi r20,hlo8(0x42aa0000)
 250 008e 52E4      		ldi r21,hhi8(0x42aa0000)
 251 0090 0E94 0000 		call __gtsf2
 252 0094 1816      		cp __zero_reg__,r24
 253 0096 04F4      		brge .L63
 254               		.stabn	68,0,172,.LM25-.LFBB4
 255               	.LM25:
 256 0098 80E1      		ldi r24,lo8(16)
 257 009a 00C0      		rjmp .L80
 258               	.L63:
 173:main.c        **** 	else if(angle>angle_segment_15){PORTD=0x15;}   //0001//-----//0000// = 10  
 259               		.stabn	68,0,173,.LM26-.LFBB4
 260               	.LM26:
 261 009c C801      		movw r24,r16
 262 009e B701      		movw r22,r14
 263 00a0 20E0      		ldi r18,lo8(0x42a00000)
 264 00a2 30E0      		ldi r19,hi8(0x42a00000)
 265 00a4 40EA      		ldi r20,hlo8(0x42a00000)
 266 00a6 52E4      		ldi r21,hhi8(0x42a00000)
 267 00a8 0E94 0000 		call __gtsf2
 268 00ac 1816      		cp __zero_reg__,r24
 269 00ae 04F4      		brge .L64
 270               		.stabn	68,0,173,.LM27-.LFBB4
 271               	.LM27:
 272 00b0 85E1      		ldi r24,lo8(21)
 273 00b2 00C0      		rjmp .L80
 274               	.L64:
 174:main.c        **** 	else if(angle>angle_segment_14){PORTD=0x20;}   //0001//-----//0101// = 15 
 275               		.stabn	68,0,174,.LM28-.LFBB4
 276               	.LM28:
 277 00b4 C801      		movw r24,r16
 278 00b6 B701      		movw r22,r14
 279 00b8 20E0      		ldi r18,lo8(0x42960000)
 280 00ba 30E0      		ldi r19,hi8(0x42960000)
 281 00bc 46E9      		ldi r20,hlo8(0x42960000)
 282 00be 52E4      		ldi r21,hhi8(0x42960000)
GAS LISTING /tmp/ccDlPBYj.s 			page 9


 283 00c0 0E94 0000 		call __gtsf2
 284 00c4 1816      		cp __zero_reg__,r24
 285 00c6 04F4      		brge .L65
 286               		.stabn	68,0,174,.LM29-.LFBB4
 287               	.LM29:
 288 00c8 80E2      		ldi r24,lo8(32)
 289 00ca 00C0      		rjmp .L80
 290               	.L65:
 175:main.c        **** 	else if(angle>angle_segment_13){PORTD=0x25;}   //0010//-----//0000// = 10  
 291               		.stabn	68,0,175,.LM30-.LFBB4
 292               	.LM30:
 293 00cc C801      		movw r24,r16
 294 00ce B701      		movw r22,r14
 295 00d0 20E0      		ldi r18,lo8(0x428c0000)
 296 00d2 30E0      		ldi r19,hi8(0x428c0000)
 297 00d4 4CE8      		ldi r20,hlo8(0x428c0000)
 298 00d6 52E4      		ldi r21,hhi8(0x428c0000)
 299 00d8 0E94 0000 		call __gtsf2
 300 00dc 1816      		cp __zero_reg__,r24
 301 00de 04F4      		brge .L66
 302               		.stabn	68,0,175,.LM31-.LFBB4
 303               	.LM31:
 304 00e0 85E2      		ldi r24,lo8(37)
 305 00e2 00C0      		rjmp .L80
 306               	.L66:
 176:main.c        **** 	else if(angle>angle_segment_12){PORTD=0x30;}   //0010//-----//0101// = 25  
 307               		.stabn	68,0,176,.LM32-.LFBB4
 308               	.LM32:
 309 00e4 C801      		movw r24,r16
 310 00e6 B701      		movw r22,r14
 311 00e8 20E0      		ldi r18,lo8(0x42820000)
 312 00ea 30E0      		ldi r19,hi8(0x42820000)
 313 00ec 42E8      		ldi r20,hlo8(0x42820000)
 314 00ee 52E4      		ldi r21,hhi8(0x42820000)
 315 00f0 0E94 0000 		call __gtsf2
 316 00f4 1816      		cp __zero_reg__,r24
 317 00f6 04F4      		brge .L67
 318               		.stabn	68,0,176,.LM33-.LFBB4
 319               	.LM33:
 320 00f8 80E3      		ldi r24,lo8(48)
 321 00fa 00C0      		rjmp .L80
 322               	.L67:
 177:main.c        **** 	else if(angle>angle_segment_11){PORTD=0x35;}   //0011//-----//0000// = 30  
 323               		.stabn	68,0,177,.LM34-.LFBB4
 324               	.LM34:
 325 00fc C801      		movw r24,r16
 326 00fe B701      		movw r22,r14
 327 0100 20E0      		ldi r18,lo8(0x42700000)
 328 0102 30E0      		ldi r19,hi8(0x42700000)
 329 0104 40E7      		ldi r20,hlo8(0x42700000)
 330 0106 52E4      		ldi r21,hhi8(0x42700000)
 331 0108 0E94 0000 		call __gtsf2
 332 010c 1816      		cp __zero_reg__,r24
 333 010e 04F4      		brge .L68
 334               		.stabn	68,0,177,.LM35-.LFBB4
 335               	.LM35:
 336 0110 85E3      		ldi r24,lo8(53)
GAS LISTING /tmp/ccDlPBYj.s 			page 10


 337 0112 00C0      		rjmp .L80
 338               	.L68:
 178:main.c        **** 	else if(angle>angle_segment_10){PORTD=0x40;}   //0011//-----//0101// = 35 
 339               		.stabn	68,0,178,.LM36-.LFBB4
 340               	.LM36:
 341 0114 C801      		movw r24,r16
 342 0116 B701      		movw r22,r14
 343 0118 20E0      		ldi r18,lo8(0x425c0000)
 344 011a 30E0      		ldi r19,hi8(0x425c0000)
 345 011c 4CE5      		ldi r20,hlo8(0x425c0000)
 346 011e 52E4      		ldi r21,hhi8(0x425c0000)
 347 0120 0E94 0000 		call __gtsf2
 348 0124 1816      		cp __zero_reg__,r24
 349 0126 04F4      		brge .L69
 350               		.stabn	68,0,178,.LM37-.LFBB4
 351               	.LM37:
 352 0128 80E4      		ldi r24,lo8(64)
 353 012a 00C0      		rjmp .L80
 354               	.L69:
 179:main.c        **** 	else if(angle>angle_segment_9){PORTD=0x45;}    //0100//-----//0000// = 40  
 355               		.stabn	68,0,179,.LM38-.LFBB4
 356               	.LM38:
 357 012c C801      		movw r24,r16
 358 012e B701      		movw r22,r14
 359 0130 20E0      		ldi r18,lo8(0x42480000)
 360 0132 30E0      		ldi r19,hi8(0x42480000)
 361 0134 48E4      		ldi r20,hlo8(0x42480000)
 362 0136 52E4      		ldi r21,hhi8(0x42480000)
 363 0138 0E94 0000 		call __gtsf2
 364 013c 1816      		cp __zero_reg__,r24
 365 013e 04F4      		brge .L70
 366               		.stabn	68,0,179,.LM39-.LFBB4
 367               	.LM39:
 368 0140 85E4      		ldi r24,lo8(69)
 369 0142 00C0      		rjmp .L80
 370               	.L70:
 180:main.c        **** 	else if(angle>angle_segment_8){PORTD=0x50;}    //0100//-----//0101// = 45  
 371               		.stabn	68,0,180,.LM40-.LFBB4
 372               	.LM40:
 373 0144 C801      		movw r24,r16
 374 0146 B701      		movw r22,r14
 375 0148 20E0      		ldi r18,lo8(0x42340000)
 376 014a 30E0      		ldi r19,hi8(0x42340000)
 377 014c 44E3      		ldi r20,hlo8(0x42340000)
 378 014e 52E4      		ldi r21,hhi8(0x42340000)
 379 0150 0E94 0000 		call __gtsf2
 380 0154 1816      		cp __zero_reg__,r24
 381 0156 04F4      		brge .L71
 382               		.stabn	68,0,180,.LM41-.LFBB4
 383               	.LM41:
 384 0158 80E5      		ldi r24,lo8(80)
 385 015a 00C0      		rjmp .L80
 386               	.L71:
 181:main.c        **** 	else if(angle>angle_segment_7){PORTD=0x55;}    //0101//-----//0000// = 50   
 387               		.stabn	68,0,181,.LM42-.LFBB4
 388               	.LM42:
 389 015c C801      		movw r24,r16
GAS LISTING /tmp/ccDlPBYj.s 			page 11


 390 015e B701      		movw r22,r14
 391 0160 20E0      		ldi r18,lo8(0x42200000)
 392 0162 30E0      		ldi r19,hi8(0x42200000)
 393 0164 40E2      		ldi r20,hlo8(0x42200000)
 394 0166 52E4      		ldi r21,hhi8(0x42200000)
 395 0168 0E94 0000 		call __gtsf2
 396 016c 1816      		cp __zero_reg__,r24
 397 016e 04F4      		brge .L72
 398               		.stabn	68,0,181,.LM43-.LFBB4
 399               	.LM43:
 400 0170 85E5      		ldi r24,lo8(85)
 401 0172 00C0      		rjmp .L80
 402               	.L72:
 182:main.c        **** 	else if(angle>angle_segment_6){PORTD=0x60;}    //0101//-----//0101// = 55  
 403               		.stabn	68,0,182,.LM44-.LFBB4
 404               	.LM44:
 405 0174 C801      		movw r24,r16
 406 0176 B701      		movw r22,r14
 407 0178 20E0      		ldi r18,lo8(0x420c0000)
 408 017a 30E0      		ldi r19,hi8(0x420c0000)
 409 017c 4CE0      		ldi r20,hlo8(0x420c0000)
 410 017e 52E4      		ldi r21,hhi8(0x420c0000)
 411 0180 0E94 0000 		call __gtsf2
 412 0184 1816      		cp __zero_reg__,r24
 413 0186 04F4      		brge .L73
 414               		.stabn	68,0,182,.LM45-.LFBB4
 415               	.LM45:
 416 0188 80E6      		ldi r24,lo8(96)
 417 018a 00C0      		rjmp .L80
 418               	.L73:
 183:main.c        **** 	else if(angle>angle_segment_5){PORTD=0x65;}    //0110//-----//0000// = 60   
 419               		.stabn	68,0,183,.LM46-.LFBB4
 420               	.LM46:
 421 018c C801      		movw r24,r16
 422 018e B701      		movw r22,r14
 423 0190 20E0      		ldi r18,lo8(0x41f00000)
 424 0192 30E0      		ldi r19,hi8(0x41f00000)
 425 0194 40EF      		ldi r20,hlo8(0x41f00000)
 426 0196 51E4      		ldi r21,hhi8(0x41f00000)
 427 0198 0E94 0000 		call __gtsf2
 428 019c 1816      		cp __zero_reg__,r24
 429 019e 04F4      		brge .L74
 430               		.stabn	68,0,183,.LM47-.LFBB4
 431               	.LM47:
 432 01a0 85E6      		ldi r24,lo8(101)
 433 01a2 00C0      		rjmp .L80
 434               	.L74:
 184:main.c        **** 	else if(angle>angle_segment_4){PORTD=0x70;}    //0110//-----//0101// = 65 
 435               		.stabn	68,0,184,.LM48-.LFBB4
 436               	.LM48:
 437 01a4 C801      		movw r24,r16
 438 01a6 B701      		movw r22,r14
 439 01a8 20E0      		ldi r18,lo8(0x41c80000)
 440 01aa 30E0      		ldi r19,hi8(0x41c80000)
 441 01ac 48EC      		ldi r20,hlo8(0x41c80000)
 442 01ae 51E4      		ldi r21,hhi8(0x41c80000)
 443 01b0 0E94 0000 		call __gtsf2
GAS LISTING /tmp/ccDlPBYj.s 			page 12


 444 01b4 1816      		cp __zero_reg__,r24
 445 01b6 04F4      		brge .L75
 446               		.stabn	68,0,184,.LM49-.LFBB4
 447               	.LM49:
 448 01b8 80E7      		ldi r24,lo8(112)
 449 01ba 00C0      		rjmp .L80
 450               	.L75:
 185:main.c        **** 	else if(angle>angle_segment_3){PORTD=0x75;}    //0111//-----//0000// = 70 
 451               		.stabn	68,0,185,.LM50-.LFBB4
 452               	.LM50:
 453 01bc C801      		movw r24,r16
 454 01be B701      		movw r22,r14
 455 01c0 20E0      		ldi r18,lo8(0x41a00000)
 456 01c2 30E0      		ldi r19,hi8(0x41a00000)
 457 01c4 40EA      		ldi r20,hlo8(0x41a00000)
 458 01c6 51E4      		ldi r21,hhi8(0x41a00000)
 459 01c8 0E94 0000 		call __gtsf2
 460 01cc 1816      		cp __zero_reg__,r24
 461 01ce 04F4      		brge .L76
 462               		.stabn	68,0,185,.LM51-.LFBB4
 463               	.LM51:
 464 01d0 85E7      		ldi r24,lo8(117)
 465 01d2 00C0      		rjmp .L80
 466               	.L76:
 186:main.c        **** 	else if(angle>angle_segment_2){PORTD=0x80;}    //0111//-----//0101// = 75
 467               		.stabn	68,0,186,.LM52-.LFBB4
 468               	.LM52:
 469 01d4 C801      		movw r24,r16
 470 01d6 B701      		movw r22,r14
 471 01d8 20E0      		ldi r18,lo8(0x41700000)
 472 01da 30E0      		ldi r19,hi8(0x41700000)
 473 01dc 40E7      		ldi r20,hlo8(0x41700000)
 474 01de 51E4      		ldi r21,hhi8(0x41700000)
 475 01e0 0E94 0000 		call __gtsf2
 476 01e4 1816      		cp __zero_reg__,r24
 477 01e6 04F4      		brge .L77
 478               		.stabn	68,0,186,.LM53-.LFBB4
 479               	.LM53:
 480 01e8 80E8      		ldi r24,lo8(-128)
 481 01ea 00C0      		rjmp .L80
 482               	.L77:
 187:main.c        **** 	else if(angle>angle_segment_1){PORTD=0x85;}    //1000//-----//0000// = 80 
 483               		.stabn	68,0,187,.LM54-.LFBB4
 484               	.LM54:
 485 01ec C801      		movw r24,r16
 486 01ee B701      		movw r22,r14
 487 01f0 20E0      		ldi r18,lo8(0x41200000)
 488 01f2 30E0      		ldi r19,hi8(0x41200000)
 489 01f4 40E2      		ldi r20,hlo8(0x41200000)
 490 01f6 51E4      		ldi r21,hhi8(0x41200000)
 491 01f8 0E94 0000 		call __gtsf2
 492 01fc 1816      		cp __zero_reg__,r24
 493 01fe 04F4      		brge .L78
 494               		.stabn	68,0,187,.LM55-.LFBB4
 495               	.LM55:
 496 0200 85E8      		ldi r24,lo8(-123)
 497 0202 00C0      		rjmp .L80
GAS LISTING /tmp/ccDlPBYj.s 			page 13


 498               	.L78:
 188:main.c        **** 	else if(angle>angle_segment_0){PORTD=0x90;}    //1000//-----//0101// = 85  
 499               		.stabn	68,0,188,.LM56-.LFBB4
 500               	.LM56:
 501 0204 C801      		movw r24,r16
 502 0206 B701      		movw r22,r14
 503 0208 20E0      		ldi r18,lo8(0x40a00000)
 504 020a 30E0      		ldi r19,hi8(0x40a00000)
 505 020c 40EA      		ldi r20,hlo8(0x40a00000)
 506 020e 50E4      		ldi r21,hhi8(0x40a00000)
 507 0210 0E94 0000 		call __gtsf2
 508 0214 1816      		cp __zero_reg__,r24
 509 0216 04F4      		brge .L79
 510               		.stabn	68,0,188,.LM57-.LFBB4
 511               	.LM57:
 512 0218 80E9      		ldi r24,lo8(-112)
 513               	.L80:
 514 021a 82BB      		out 50-32,r24
 515 021c 00C0      		rjmp .L6
 516               	.L79:
 189:main.c        **** 	else {PORTD=0x00;}  
 517               		.stabn	68,0,189,.LM58-.LFBB4
 518               	.LM58:
 519 021e 12BA      		out 50-32,__zero_reg__
 520               	.L6:
 521               	/* epilogue start */
 190:main.c        **** }
 522               		.stabn	68,0,190,.LM59-.LFBB4
 523               	.LM59:
 524 0220 1F91      		pop r17
 525 0222 0F91      		pop r16
 526 0224 FF90      		pop r15
 527 0226 EF90      		pop r14
 528 0228 0895      		ret
 529               		.size	print_Angle_Binary, .-print_Angle_Binary
 530               	.Lscope4:
 531               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 532               		.stabd	78,0,0
 533               		.stabs	"print_Decimes:F(0,15)",36,0,195,print_Decimes
 534               	.global	print_Decimes
 535               		.type	print_Decimes, @function
 536               	print_Decimes:
 537               		.stabd	46,0,0
 191:main.c        **** //------------------------------------------------------//
 192:main.c        **** 
 193:main.c        **** //-------------------Print Distance---------------------//
 194:main.c        **** 
 195:main.c        **** void print_Decimes(float num_in){
 538               		.stabn	68,0,195,.LM60-.LFBB5
 539               	.LM60:
 540               	.LFBB5:
 541 022a DF92      		push r13
 542 022c EF92      		push r14
 543 022e FF92      		push r15
 544 0230 0F93      		push r16
 545 0232 1F93      		push r17
 546               	/* prologue: function */
GAS LISTING /tmp/ccDlPBYj.s 			page 14


 547               	/* frame size = 0 */
 548               	/* stack size = 5 */
 549               	.L__stack_usage = 5
 550 0234 7B01      		movw r14,r22
 551 0236 8C01      		movw r16,r24
 196:main.c        **** 
 197:main.c        **** double num0=0.0;
 198:main.c        **** 
 199:main.c        **** double num=0.0;
 200:main.c        **** 
 201:main.c        **** 	num=num_in;
 202:main.c        **** 
 203:main.c        **** char decimas=0x00;
 204:main.c        **** 
 205:main.c        **** 	if(num>=90){decimas=0x90;num0=num-90;}
 552               		.stabn	68,0,205,.LM61-.LFBB5
 553               	.LM61:
 554 0238 7F2D      		mov r23,r15
 555 023a 912F      		mov r25,r17
 556 023c 20E0      		ldi r18,lo8(0x42b40000)
 557 023e 30E0      		ldi r19,hi8(0x42b40000)
 558 0240 44EB      		ldi r20,hlo8(0x42b40000)
 559 0242 52E4      		ldi r21,hhi8(0x42b40000)
 560 0244 0E94 0000 		call __gesf2
 561 0248 87FD      		sbrc r24,7
 562 024a 00C0      		rjmp .L141
 563               		.stabn	68,0,205,.LM62-.LFBB5
 564               	.LM62:
 565 024c 6E2D      		mov r22,r14
 566 024e 7F2D      		mov r23,r15
 567 0250 802F      		mov r24,r16
 568 0252 912F      		mov r25,r17
 569 0254 20E0      		ldi r18,lo8(0x42b40000)
 570 0256 30E0      		ldi r19,hi8(0x42b40000)
 571 0258 44EB      		ldi r20,hlo8(0x42b40000)
 572 025a 52E4      		ldi r21,hhi8(0x42b40000)
 573 025c 0E94 0000 		call __subsf3
 574 0260 7B01      		movw r14,r22
 575 0262 8C01      		movw r16,r24
 576 0264 E0E9      		ldi r30,lo8(-112)
 577 0266 DE2E      		mov r13,r30
 578 0268 00C0      		rjmp .L84
 579               	.L141:
 206:main.c        **** 	else if(num>=80){decimas=0x80;num0=num-80;}
 580               		.stabn	68,0,206,.LM63-.LFBB5
 581               	.LM63:
 582 026a 6E2D      		mov r22,r14
 583 026c 7F2D      		mov r23,r15
 584 026e 802F      		mov r24,r16
 585 0270 912F      		mov r25,r17
 586 0272 20E0      		ldi r18,lo8(0x42a00000)
 587 0274 30E0      		ldi r19,hi8(0x42a00000)
 588 0276 40EA      		ldi r20,hlo8(0x42a00000)
 589 0278 52E4      		ldi r21,hhi8(0x42a00000)
 590 027a 0E94 0000 		call __gesf2
 591 027e 87FD      		sbrc r24,7
 592 0280 00C0      		rjmp .L142
GAS LISTING /tmp/ccDlPBYj.s 			page 15


 593               		.stabn	68,0,206,.LM64-.LFBB5
 594               	.LM64:
 595 0282 6E2D      		mov r22,r14
 596 0284 7F2D      		mov r23,r15
 597 0286 802F      		mov r24,r16
 598 0288 912F      		mov r25,r17
 599 028a 20E0      		ldi r18,lo8(0x42a00000)
 600 028c 30E0      		ldi r19,hi8(0x42a00000)
 601 028e 40EA      		ldi r20,hlo8(0x42a00000)
 602 0290 52E4      		ldi r21,hhi8(0x42a00000)
 603 0292 0E94 0000 		call __subsf3
 604 0296 7B01      		movw r14,r22
 605 0298 8C01      		movw r16,r24
 606 029a 70E8      		ldi r23,lo8(-128)
 607 029c D72E      		mov r13,r23
 608 029e 00C0      		rjmp .L84
 609               	.L142:
 207:main.c        **** 	else if(num>=70){decimas=0x70;num0=num-70;}
 610               		.stabn	68,0,207,.LM65-.LFBB5
 611               	.LM65:
 612 02a0 6E2D      		mov r22,r14
 613 02a2 7F2D      		mov r23,r15
 614 02a4 802F      		mov r24,r16
 615 02a6 912F      		mov r25,r17
 616 02a8 20E0      		ldi r18,lo8(0x428c0000)
 617 02aa 30E0      		ldi r19,hi8(0x428c0000)
 618 02ac 4CE8      		ldi r20,hlo8(0x428c0000)
 619 02ae 52E4      		ldi r21,hhi8(0x428c0000)
 620 02b0 0E94 0000 		call __gesf2
 621 02b4 87FD      		sbrc r24,7
 622 02b6 00C0      		rjmp .L143
 623               		.stabn	68,0,207,.LM66-.LFBB5
 624               	.LM66:
 625 02b8 6E2D      		mov r22,r14
 626 02ba 7F2D      		mov r23,r15
 627 02bc 802F      		mov r24,r16
 628 02be 912F      		mov r25,r17
 629 02c0 20E0      		ldi r18,lo8(0x428c0000)
 630 02c2 30E0      		ldi r19,hi8(0x428c0000)
 631 02c4 4CE8      		ldi r20,hlo8(0x428c0000)
 632 02c6 52E4      		ldi r21,hhi8(0x428c0000)
 633 02c8 0E94 0000 		call __subsf3
 634 02cc 7B01      		movw r14,r22
 635 02ce 8C01      		movw r16,r24
 636 02d0 60E7      		ldi r22,lo8(112)
 637 02d2 D62E      		mov r13,r22
 638 02d4 00C0      		rjmp .L84
 639               	.L143:
 208:main.c        **** 	else if(num>=60){decimas=0x60;num0=num-60;}
 640               		.stabn	68,0,208,.LM67-.LFBB5
 641               	.LM67:
 642 02d6 6E2D      		mov r22,r14
 643 02d8 7F2D      		mov r23,r15
 644 02da 802F      		mov r24,r16
 645 02dc 912F      		mov r25,r17
 646 02de 20E0      		ldi r18,lo8(0x42700000)
 647 02e0 30E0      		ldi r19,hi8(0x42700000)
GAS LISTING /tmp/ccDlPBYj.s 			page 16


 648 02e2 40E7      		ldi r20,hlo8(0x42700000)
 649 02e4 52E4      		ldi r21,hhi8(0x42700000)
 650 02e6 0E94 0000 		call __gesf2
 651 02ea 87FD      		sbrc r24,7
 652 02ec 00C0      		rjmp .L144
 653               		.stabn	68,0,208,.LM68-.LFBB5
 654               	.LM68:
 655 02ee 6E2D      		mov r22,r14
 656 02f0 7F2D      		mov r23,r15
 657 02f2 802F      		mov r24,r16
 658 02f4 912F      		mov r25,r17
 659 02f6 20E0      		ldi r18,lo8(0x42700000)
 660 02f8 30E0      		ldi r19,hi8(0x42700000)
 661 02fa 40E7      		ldi r20,hlo8(0x42700000)
 662 02fc 52E4      		ldi r21,hhi8(0x42700000)
 663 02fe 0E94 0000 		call __subsf3
 664 0302 7B01      		movw r14,r22
 665 0304 8C01      		movw r16,r24
 666 0306 50E6      		ldi r21,lo8(96)
 667 0308 D52E      		mov r13,r21
 668 030a 00C0      		rjmp .L84
 669               	.L144:
 209:main.c        **** 	else if(num>=50){decimas=0x50;num0=num-50;}
 670               		.stabn	68,0,209,.LM69-.LFBB5
 671               	.LM69:
 672 030c 6E2D      		mov r22,r14
 673 030e 7F2D      		mov r23,r15
 674 0310 802F      		mov r24,r16
 675 0312 912F      		mov r25,r17
 676 0314 20E0      		ldi r18,lo8(0x42480000)
 677 0316 30E0      		ldi r19,hi8(0x42480000)
 678 0318 48E4      		ldi r20,hlo8(0x42480000)
 679 031a 52E4      		ldi r21,hhi8(0x42480000)
 680 031c 0E94 0000 		call __gesf2
 681 0320 87FD      		sbrc r24,7
 682 0322 00C0      		rjmp .L145
 683               		.stabn	68,0,209,.LM70-.LFBB5
 684               	.LM70:
 685 0324 6E2D      		mov r22,r14
 686 0326 7F2D      		mov r23,r15
 687 0328 802F      		mov r24,r16
 688 032a 912F      		mov r25,r17
 689 032c 20E0      		ldi r18,lo8(0x42480000)
 690 032e 30E0      		ldi r19,hi8(0x42480000)
 691 0330 48E4      		ldi r20,hlo8(0x42480000)
 692 0332 52E4      		ldi r21,hhi8(0x42480000)
 693 0334 0E94 0000 		call __subsf3
 694 0338 7B01      		movw r14,r22
 695 033a 8C01      		movw r16,r24
 696 033c 40E5      		ldi r20,lo8(80)
 697 033e D42E      		mov r13,r20
 698 0340 00C0      		rjmp .L84
 699               	.L145:
 210:main.c        **** 	else if(num>=40){decimas=0x40;num0=num-40;}
 700               		.stabn	68,0,210,.LM71-.LFBB5
 701               	.LM71:
 702 0342 6E2D      		mov r22,r14
GAS LISTING /tmp/ccDlPBYj.s 			page 17


 703 0344 7F2D      		mov r23,r15
 704 0346 802F      		mov r24,r16
 705 0348 912F      		mov r25,r17
 706 034a 20E0      		ldi r18,lo8(0x42200000)
 707 034c 30E0      		ldi r19,hi8(0x42200000)
 708 034e 40E2      		ldi r20,hlo8(0x42200000)
 709 0350 52E4      		ldi r21,hhi8(0x42200000)
 710 0352 0E94 0000 		call __gesf2
 711 0356 87FD      		sbrc r24,7
 712 0358 00C0      		rjmp .L146
 713               		.stabn	68,0,210,.LM72-.LFBB5
 714               	.LM72:
 715 035a 6E2D      		mov r22,r14
 716 035c 7F2D      		mov r23,r15
 717 035e 802F      		mov r24,r16
 718 0360 912F      		mov r25,r17
 719 0362 20E0      		ldi r18,lo8(0x42200000)
 720 0364 30E0      		ldi r19,hi8(0x42200000)
 721 0366 40E2      		ldi r20,hlo8(0x42200000)
 722 0368 52E4      		ldi r21,hhi8(0x42200000)
 723 036a 0E94 0000 		call __subsf3
 724 036e 7B01      		movw r14,r22
 725 0370 8C01      		movw r16,r24
 726 0372 30E4      		ldi r19,lo8(64)
 727 0374 D32E      		mov r13,r19
 728 0376 00C0      		rjmp .L84
 729               	.L146:
 211:main.c        **** 	else if(num>=30){decimas=0x30;num0=num-30;}
 730               		.stabn	68,0,211,.LM73-.LFBB5
 731               	.LM73:
 732 0378 6E2D      		mov r22,r14
 733 037a 7F2D      		mov r23,r15
 734 037c 802F      		mov r24,r16
 735 037e 912F      		mov r25,r17
 736 0380 20E0      		ldi r18,lo8(0x41f00000)
 737 0382 30E0      		ldi r19,hi8(0x41f00000)
 738 0384 40EF      		ldi r20,hlo8(0x41f00000)
 739 0386 51E4      		ldi r21,hhi8(0x41f00000)
 740 0388 0E94 0000 		call __gesf2
 741 038c 87FD      		sbrc r24,7
 742 038e 00C0      		rjmp .L147
 743               		.stabn	68,0,211,.LM74-.LFBB5
 744               	.LM74:
 745 0390 6E2D      		mov r22,r14
 746 0392 7F2D      		mov r23,r15
 747 0394 802F      		mov r24,r16
 748 0396 912F      		mov r25,r17
 749 0398 20E0      		ldi r18,lo8(0x41f00000)
 750 039a 30E0      		ldi r19,hi8(0x41f00000)
 751 039c 40EF      		ldi r20,hlo8(0x41f00000)
 752 039e 51E4      		ldi r21,hhi8(0x41f00000)
 753 03a0 0E94 0000 		call __subsf3
 754 03a4 7B01      		movw r14,r22
 755 03a6 8C01      		movw r16,r24
 756 03a8 20E3      		ldi r18,lo8(48)
 757 03aa D22E      		mov r13,r18
 758 03ac 00C0      		rjmp .L84
GAS LISTING /tmp/ccDlPBYj.s 			page 18


 759               	.L147:
 212:main.c        **** 	else if(num>=20){decimas=0x20;num0=num-20;}
 760               		.stabn	68,0,212,.LM75-.LFBB5
 761               	.LM75:
 762 03ae 6E2D      		mov r22,r14
 763 03b0 7F2D      		mov r23,r15
 764 03b2 802F      		mov r24,r16
 765 03b4 912F      		mov r25,r17
 766 03b6 20E0      		ldi r18,lo8(0x41a00000)
 767 03b8 30E0      		ldi r19,hi8(0x41a00000)
 768 03ba 40EA      		ldi r20,hlo8(0x41a00000)
 769 03bc 51E4      		ldi r21,hhi8(0x41a00000)
 770 03be 0E94 0000 		call __gesf2
 771 03c2 87FD      		sbrc r24,7
 772 03c4 00C0      		rjmp .L148
 773               		.stabn	68,0,212,.LM76-.LFBB5
 774               	.LM76:
 775 03c6 6E2D      		mov r22,r14
 776 03c8 7F2D      		mov r23,r15
 777 03ca 802F      		mov r24,r16
 778 03cc 912F      		mov r25,r17
 779 03ce 20E0      		ldi r18,lo8(0x41a00000)
 780 03d0 30E0      		ldi r19,hi8(0x41a00000)
 781 03d2 40EA      		ldi r20,hlo8(0x41a00000)
 782 03d4 51E4      		ldi r21,hhi8(0x41a00000)
 783 03d6 0E94 0000 		call __subsf3
 784 03da 7B01      		movw r14,r22
 785 03dc 8C01      		movw r16,r24
 786 03de 90E2      		ldi r25,lo8(32)
 787 03e0 D92E      		mov r13,r25
 788 03e2 00C0      		rjmp .L84
 789               	.L148:
 213:main.c        **** 	else if(num>=10){decimas=0x10;num0=num-10;}
 790               		.stabn	68,0,213,.LM77-.LFBB5
 791               	.LM77:
 792 03e4 6E2D      		mov r22,r14
 793 03e6 7F2D      		mov r23,r15
 794 03e8 802F      		mov r24,r16
 795 03ea 912F      		mov r25,r17
 796 03ec 20E0      		ldi r18,lo8(0x41200000)
 797 03ee 30E0      		ldi r19,hi8(0x41200000)
 798 03f0 40E2      		ldi r20,hlo8(0x41200000)
 799 03f2 51E4      		ldi r21,hhi8(0x41200000)
 800 03f4 0E94 0000 		call __gesf2
 801 03f8 87FD      		sbrc r24,7
 802 03fa 00C0      		rjmp .L149
 803               		.stabn	68,0,213,.LM78-.LFBB5
 804               	.LM78:
 805 03fc 6E2D      		mov r22,r14
 806 03fe 7F2D      		mov r23,r15
 807 0400 802F      		mov r24,r16
 808 0402 912F      		mov r25,r17
 809 0404 20E0      		ldi r18,lo8(0x41200000)
 810 0406 30E0      		ldi r19,hi8(0x41200000)
 811 0408 40E2      		ldi r20,hlo8(0x41200000)
 812 040a 51E4      		ldi r21,hhi8(0x41200000)
 813 040c 0E94 0000 		call __subsf3
GAS LISTING /tmp/ccDlPBYj.s 			page 19


 814 0410 7B01      		movw r14,r22
 815 0412 8C01      		movw r16,r24
 816 0414 80E1      		ldi r24,lo8(16)
 817 0416 D82E      		mov r13,r24
 818 0418 00C0      		rjmp .L84
 819               	.L149:
 214:main.c        **** 	else {decimas=0x00; num0=num;}
 820               		.stabn	68,0,214,.LM79-.LFBB5
 821               	.LM79:
 822 041a DD24      		clr r13
 823               	.L84:
 215:main.c        **** 
 216:main.c        **** 
 217:main.c        **** 	if(num0>=9){PORTC=decimas+0x09;}
 824               		.stabn	68,0,217,.LM80-.LFBB5
 825               	.LM80:
 826 041c 6E2D      		mov r22,r14
 827 041e 7F2D      		mov r23,r15
 828 0420 802F      		mov r24,r16
 829 0422 912F      		mov r25,r17
 830 0424 20E0      		ldi r18,lo8(0x41100000)
 831 0426 30E0      		ldi r19,hi8(0x41100000)
 832 0428 40E1      		ldi r20,hlo8(0x41100000)
 833 042a 51E4      		ldi r21,hhi8(0x41100000)
 834 042c 0E94 0000 		call __gesf2
 835 0430 87FD      		sbrc r24,7
 836 0432 00C0      		rjmp .L150
 837               		.stabn	68,0,217,.LM81-.LFBB5
 838               	.LM81:
 839 0434 8D2D      		mov r24,r13
 840 0436 875F      		subi r24,lo8(-(9))
 841 0438 00C0      		rjmp .L161
 842               	.L150:
 218:main.c        **** 	else if(num0>=8){PORTC=decimas+0x08;}
 843               		.stabn	68,0,218,.LM82-.LFBB5
 844               	.LM82:
 845 043a 6E2D      		mov r22,r14
 846 043c 7F2D      		mov r23,r15
 847 043e 802F      		mov r24,r16
 848 0440 912F      		mov r25,r17
 849 0442 20E0      		ldi r18,lo8(0x41000000)
 850 0444 30E0      		ldi r19,hi8(0x41000000)
 851 0446 40E0      		ldi r20,hlo8(0x41000000)
 852 0448 51E4      		ldi r21,hhi8(0x41000000)
 853 044a 0E94 0000 		call __gesf2
 854 044e 87FD      		sbrc r24,7
 855 0450 00C0      		rjmp .L151
 856               		.stabn	68,0,218,.LM83-.LFBB5
 857               	.LM83:
 858 0452 8D2D      		mov r24,r13
 859 0454 885F      		subi r24,lo8(-(8))
 860 0456 00C0      		rjmp .L161
 861               	.L151:
 219:main.c        **** 	else if(num0>=7){PORTC=decimas+0x07;}
 862               		.stabn	68,0,219,.LM84-.LFBB5
 863               	.LM84:
 864 0458 6E2D      		mov r22,r14
GAS LISTING /tmp/ccDlPBYj.s 			page 20


 865 045a 7F2D      		mov r23,r15
 866 045c 802F      		mov r24,r16
 867 045e 912F      		mov r25,r17
 868 0460 20E0      		ldi r18,lo8(0x40e00000)
 869 0462 30E0      		ldi r19,hi8(0x40e00000)
 870 0464 40EE      		ldi r20,hlo8(0x40e00000)
 871 0466 50E4      		ldi r21,hhi8(0x40e00000)
 872 0468 0E94 0000 		call __gesf2
 873 046c 87FD      		sbrc r24,7
 874 046e 00C0      		rjmp .L152
 875               		.stabn	68,0,219,.LM85-.LFBB5
 876               	.LM85:
 877 0470 8D2D      		mov r24,r13
 878 0472 895F      		subi r24,lo8(-(7))
 879 0474 00C0      		rjmp .L161
 880               	.L152:
 220:main.c        **** 	else if(num0>=6){PORTC=decimas+0x06;}
 881               		.stabn	68,0,220,.LM86-.LFBB5
 882               	.LM86:
 883 0476 6E2D      		mov r22,r14
 884 0478 7F2D      		mov r23,r15
 885 047a 802F      		mov r24,r16
 886 047c 912F      		mov r25,r17
 887 047e 20E0      		ldi r18,lo8(0x40c00000)
 888 0480 30E0      		ldi r19,hi8(0x40c00000)
 889 0482 40EC      		ldi r20,hlo8(0x40c00000)
 890 0484 50E4      		ldi r21,hhi8(0x40c00000)
 891 0486 0E94 0000 		call __gesf2
 892 048a 87FD      		sbrc r24,7
 893 048c 00C0      		rjmp .L153
 894               		.stabn	68,0,220,.LM87-.LFBB5
 895               	.LM87:
 896 048e 8D2D      		mov r24,r13
 897 0490 8A5F      		subi r24,lo8(-(6))
 898 0492 00C0      		rjmp .L161
 899               	.L153:
 221:main.c        **** 	else if(num0>=5){PORTC=decimas+0x05;}
 900               		.stabn	68,0,221,.LM88-.LFBB5
 901               	.LM88:
 902 0494 6E2D      		mov r22,r14
 903 0496 7F2D      		mov r23,r15
 904 0498 802F      		mov r24,r16
 905 049a 912F      		mov r25,r17
 906 049c 20E0      		ldi r18,lo8(0x40a00000)
 907 049e 30E0      		ldi r19,hi8(0x40a00000)
 908 04a0 40EA      		ldi r20,hlo8(0x40a00000)
 909 04a2 50E4      		ldi r21,hhi8(0x40a00000)
 910 04a4 0E94 0000 		call __gesf2
 911 04a8 87FD      		sbrc r24,7
 912 04aa 00C0      		rjmp .L154
 913               		.stabn	68,0,221,.LM89-.LFBB5
 914               	.LM89:
 915 04ac 8D2D      		mov r24,r13
 916 04ae 8B5F      		subi r24,lo8(-(5))
 917 04b0 00C0      		rjmp .L161
 918               	.L154:
 222:main.c        **** 	else if(num0>=4){PORTC=decimas+0x04;}
GAS LISTING /tmp/ccDlPBYj.s 			page 21


 919               		.stabn	68,0,222,.LM90-.LFBB5
 920               	.LM90:
 921 04b2 6E2D      		mov r22,r14
 922 04b4 7F2D      		mov r23,r15
 923 04b6 802F      		mov r24,r16
 924 04b8 912F      		mov r25,r17
 925 04ba 20E0      		ldi r18,lo8(0x40800000)
 926 04bc 30E0      		ldi r19,hi8(0x40800000)
 927 04be 40E8      		ldi r20,hlo8(0x40800000)
 928 04c0 50E4      		ldi r21,hhi8(0x40800000)
 929 04c2 0E94 0000 		call __gesf2
 930 04c6 87FD      		sbrc r24,7
 931 04c8 00C0      		rjmp .L155
 932               		.stabn	68,0,222,.LM91-.LFBB5
 933               	.LM91:
 934 04ca 8D2D      		mov r24,r13
 935 04cc 8C5F      		subi r24,lo8(-(4))
 936 04ce 00C0      		rjmp .L161
 937               	.L155:
 223:main.c        **** 	else if(num0>=3){PORTC=decimas+0x03;}
 938               		.stabn	68,0,223,.LM92-.LFBB5
 939               	.LM92:
 940 04d0 6E2D      		mov r22,r14
 941 04d2 7F2D      		mov r23,r15
 942 04d4 802F      		mov r24,r16
 943 04d6 912F      		mov r25,r17
 944 04d8 20E0      		ldi r18,lo8(0x40400000)
 945 04da 30E0      		ldi r19,hi8(0x40400000)
 946 04dc 40E4      		ldi r20,hlo8(0x40400000)
 947 04de 50E4      		ldi r21,hhi8(0x40400000)
 948 04e0 0E94 0000 		call __gesf2
 949 04e4 87FD      		sbrc r24,7
 950 04e6 00C0      		rjmp .L156
 951               		.stabn	68,0,223,.LM93-.LFBB5
 952               	.LM93:
 953 04e8 8D2D      		mov r24,r13
 954 04ea 8D5F      		subi r24,lo8(-(3))
 955 04ec 00C0      		rjmp .L161
 956               	.L156:
 224:main.c        **** 	else if(num0>=2){PORTC=decimas+0x02;}
 957               		.stabn	68,0,224,.LM94-.LFBB5
 958               	.LM94:
 959 04ee 6E2D      		mov r22,r14
 960 04f0 7F2D      		mov r23,r15
 961 04f2 802F      		mov r24,r16
 962 04f4 912F      		mov r25,r17
 963 04f6 20E0      		ldi r18,lo8(0x40000000)
 964 04f8 30E0      		ldi r19,hi8(0x40000000)
 965 04fa 40E0      		ldi r20,hlo8(0x40000000)
 966 04fc 50E4      		ldi r21,hhi8(0x40000000)
 967 04fe 0E94 0000 		call __gesf2
 968 0502 87FD      		sbrc r24,7
 969 0504 00C0      		rjmp .L157
 970               		.stabn	68,0,224,.LM95-.LFBB5
 971               	.LM95:
 972 0506 8D2D      		mov r24,r13
 973 0508 8E5F      		subi r24,lo8(-(2))
GAS LISTING /tmp/ccDlPBYj.s 			page 22


 974 050a 00C0      		rjmp .L161
 975               	.L157:
 225:main.c        **** 	else if(num0>=1){PORTC=decimas+0x01;}
 976               		.stabn	68,0,225,.LM96-.LFBB5
 977               	.LM96:
 978 050c 6E2D      		mov r22,r14
 979 050e 7F2D      		mov r23,r15
 980 0510 802F      		mov r24,r16
 981 0512 912F      		mov r25,r17
 982 0514 20E0      		ldi r18,lo8(0x3f800000)
 983 0516 30E0      		ldi r19,hi8(0x3f800000)
 984 0518 40E8      		ldi r20,hlo8(0x3f800000)
 985 051a 5FE3      		ldi r21,hhi8(0x3f800000)
 986 051c 0E94 0000 		call __gesf2
 987 0520 87FD      		sbrc r24,7
 988 0522 00C0      		rjmp .L158
 989               		.stabn	68,0,225,.LM97-.LFBB5
 990               	.LM97:
 991 0524 D394      		inc r13
 992 0526 00C0      		rjmp .L160
 993               	.L158:
 226:main.c        **** 	else if(num0>=0){PORTC=decimas+0x00;}
 994               		.stabn	68,0,226,.LM98-.LFBB5
 995               	.LM98:
 996 0528 6E2D      		mov r22,r14
 997 052a 7F2D      		mov r23,r15
 998 052c 802F      		mov r24,r16
 999 052e 912F      		mov r25,r17
 1000 0530 20E0      		ldi r18,lo8(0x0)
 1001 0532 30E0      		ldi r19,hi8(0x0)
 1002 0534 A901      		movw r20,r18
 1003 0536 0E94 0000 		call __gesf2
 1004 053a 87FD      		sbrc r24,7
 1005 053c 00C0      		rjmp .L159
 1006               	.L160:
 1007               		.stabn	68,0,226,.LM99-.LFBB5
 1008               	.LM99:
 1009 053e D5BA      		out 53-32,r13
 1010 0540 00C0      		rjmp .L81
 1011               	.L159:
 227:main.c        **** 	else {PORTC=0xAA;}
 1012               		.stabn	68,0,227,.LM100-.LFBB5
 1013               	.LM100:
 1014 0542 8AEA      		ldi r24,lo8(-86)
 1015               	.L161:
 1016 0544 85BB      		out 53-32,r24
 1017               	.L81:
 1018               	/* epilogue start */
 228:main.c        **** 
 229:main.c        **** }
 1019               		.stabn	68,0,229,.LM101-.LFBB5
 1020               	.LM101:
 1021 0546 1F91      		pop r17
 1022 0548 0F91      		pop r16
 1023 054a FF90      		pop r15
 1024 054c EF90      		pop r14
 1025 054e DF90      		pop r13
GAS LISTING /tmp/ccDlPBYj.s 			page 23


 1026 0550 0895      		ret
 1027               		.size	print_Decimes, .-print_Decimes
 1028               		.stabs	"decimas:r(0,2)",64,0,203,13
 1029               		.stabn	192,0,0,.LFBB5-.LFBB5
 1030               		.stabn	224,0,0,.Lscope5-.LFBB5
 1031               	.Lscope5:
 1032               		.stabs	"",36,0,0,.Lscope5-.LFBB5
 1033               		.stabd	78,0,0
 1034               		.stabs	"print_Time_Binary:F(0,15)",36,0,235,print_Time_Binary
 1035               		.stabs	"time:P(0,1)",64,0,235,24
 1036               	.global	print_Time_Binary
 1037               		.type	print_Time_Binary, @function
 1038               	print_Time_Binary:
 1039               		.stabd	46,0,0
 230:main.c        **** 
 231:main.c        **** //------------------------------------------------------//
 232:main.c        **** //----------------------Print time---------------------//
 233:main.c        **** //------------------------------------------------------//
 234:main.c        **** 
 235:main.c        **** void print_Time_Binary(int time){
 1040               		.stabn	68,0,235,.LM102-.LFBB6
 1041               	.LM102:
 1042               	.LFBB6:
 1043               	/* prologue: function */
 1044               	/* frame size = 0 */
 1045               	/* stack size = 0 */
 1046               	.L__stack_usage = 0
 236:main.c        **** int time_segment_1=1;
 237:main.c        **** int time_segment_2=2;
 238:main.c        **** int time_segment_3=3;
 239:main.c        **** int time_segment_4=4;
 240:main.c        **** int time_segment_5=5;
 241:main.c        **** int time_segment_6=6;
 242:main.c        **** int time_segment_7=7;
 243:main.c        **** int times=time;
 244:main.c        **** 
 245:main.c        **** if(times>time_segment_7){	sbi(PORTB,PB2);sbi(PORTB,PB1);sbi(PORTB,PB0);} //PORC=111//
 1047               		.stabn	68,0,245,.LM103-.LFBB6
 1048               	.LM103:
 1049 0552 8830      		cpi r24,8
 1050 0554 9105      		cpc r25,__zero_reg__
 1051 0556 04F0      		brlt .L163
 1052               		.stabn	68,0,245,.LM104-.LFBB6
 1053               	.LM104:
 1054 0558 C29A      		sbi 56-32,2
 1055 055a 00C0      		rjmp .L173
 1056               	.L163:
 246:main.c        **** else if(times>time_segment_6){  sbi(PORTB,PB2);sbi(PORTB,PB1);cbi(PORTB,PB0);} //PORD=110//
 1057               		.stabn	68,0,246,.LM105-.LFBB6
 1058               	.LM105:
 1059 055c 8730      		cpi r24,7
 1060 055e 9105      		cpc r25,__zero_reg__
 1061 0560 01F4      		brne .L165
 1062               		.stabn	68,0,246,.LM106-.LFBB6
 1063               	.LM106:
 1064 0562 C29A      		sbi 56-32,2
 1065 0564 00C0      		rjmp .L175
GAS LISTING /tmp/ccDlPBYj.s 			page 24


 1066               	.L165:
 247:main.c        **** else if(times>time_segment_5){  sbi(PORTB,PB2);cbi(PORTB,PB1);sbi(PORTB,PB0);} //PORD=101//
 1067               		.stabn	68,0,247,.LM107-.LFBB6
 1068               	.LM107:
 1069 0566 8630      		cpi r24,6
 1070 0568 9105      		cpc r25,__zero_reg__
 1071 056a 01F4      		brne .L166
 1072               		.stabn	68,0,247,.LM108-.LFBB6
 1073               	.LM108:
 1074 056c C29A      		sbi 56-32,2
 1075 056e 00C0      		rjmp .L174
 1076               	.L166:
 248:main.c        **** else if(times>time_segment_4){  sbi(PORTB,PB2);cbi(PORTB,PB1);cbi(PORTB,PB0);} //PORD=100//
 1077               		.stabn	68,0,248,.LM109-.LFBB6
 1078               	.LM109:
 1079 0570 8530      		cpi r24,5
 1080 0572 9105      		cpc r25,__zero_reg__
 1081 0574 01F4      		brne .L167
 1082               		.stabn	68,0,248,.LM110-.LFBB6
 1083               	.LM110:
 1084 0576 C29A      		sbi 56-32,2
 1085 0578 00C0      		rjmp .L176
 1086               	.L167:
 249:main.c        **** else if(times>time_segment_3){  cbi(PORTB,PB2);sbi(PORTB,PB1);sbi(PORTB,PB0);} //PORD=011//
 1087               		.stabn	68,0,249,.LM111-.LFBB6
 1088               	.LM111:
 1089 057a 8430      		cpi r24,4
 1090 057c 9105      		cpc r25,__zero_reg__
 1091 057e 01F4      		brne .L168
 1092               		.stabn	68,0,249,.LM112-.LFBB6
 1093               	.LM112:
 1094 0580 C298      		cbi 56-32,2
 1095               	.L173:
 1096 0582 C19A      		sbi 56-32,1
 1097 0584 00C0      		rjmp .L172
 1098               	.L168:
 250:main.c        **** else if(times>time_segment_2){  cbi(PORTB,PB2);sbi(PORTB,PB1);cbi(PORTB,PB0);} //PORD=010//
 1099               		.stabn	68,0,250,.LM113-.LFBB6
 1100               	.LM113:
 1101 0586 8330      		cpi r24,3
 1102 0588 9105      		cpc r25,__zero_reg__
 1103 058a 01F4      		brne .L169
 1104               		.stabn	68,0,250,.LM114-.LFBB6
 1105               	.LM114:
 1106 058c C298      		cbi 56-32,2
 1107               	.L175:
 1108 058e C19A      		sbi 56-32,1
 1109 0590 00C0      		rjmp .L171
 1110               	.L169:
 251:main.c        **** else if(times>time_segment_1){  cbi(PORTB,PB2);cbi(PORTB,PB1);sbi(PORTB,PB0);} //PORD=001//
 1111               		.stabn	68,0,251,.LM115-.LFBB6
 1112               	.LM115:
 1113 0592 8230      		cpi r24,2
 1114 0594 9105      		cpc r25,__zero_reg__
 1115 0596 01F4      		brne .L170
 1116               		.stabn	68,0,251,.LM116-.LFBB6
 1117               	.LM116:
GAS LISTING /tmp/ccDlPBYj.s 			page 25


 1118 0598 C298      		cbi 56-32,2
 1119               	.L174:
 1120 059a C198      		cbi 56-32,1
 1121               	.L172:
 1122 059c C09A      		sbi 56-32,0
 1123 059e 0895      		ret
 1124               	.L170:
 252:main.c        **** else {			        cbi(PORTB,PB2);cbi(PORTB,PB1);cbi(PORTB,PB0);} //PORD=000//
 1125               		.stabn	68,0,252,.LM117-.LFBB6
 1126               	.LM117:
 1127 05a0 C298      		cbi 56-32,2
 1128               	.L176:
 1129 05a2 C198      		cbi 56-32,1
 1130               	.L171:
 1131 05a4 C098      		cbi 56-32,0
 1132 05a6 0895      		ret
 1133               		.size	print_Time_Binary, .-print_Time_Binary
 1134               	.Lscope6:
 1135               		.stabs	"",36,0,0,.Lscope6-.LFBB6
 1136               		.stabd	78,0,0
 1137               		.stabs	"final_distance:F(0,13)",36,0,262,final_distance
 1138               		.stabs	"angle0xz:P(0,13)",64,0,262,14
 1139               		.stabs	"tf:P(0,13)",64,0,262,18
 1140               	.global	final_distance
 1141               		.type	final_distance, @function
 1142               	final_distance:
 1143               		.stabd	46,0,0
 253:main.c        **** 
 254:main.c        **** 
 255:main.c        **** }
 256:main.c        **** //------------------------------------------------------//
 257:main.c        **** 
 258:main.c        **** //------------------------------------------------------//
 259:main.c        **** //--------------------Final_Distance--------------------//
 260:main.c        **** //------------------------------------------------------//
 261:main.c        **** 
 262:main.c        **** double final_distance(double angle0xz,double tf){
 1144               		.stabn	68,0,262,.LM118-.LFBB7
 1145               	.LM118:
 1146               	.LFBB7:
 1147 05a8 2F92      		push r2
 1148 05aa 3F92      		push r3
 1149 05ac 4F92      		push r4
 1150 05ae 5F92      		push r5
 1151 05b0 6F92      		push r6
 1152 05b2 7F92      		push r7
 1153 05b4 8F92      		push r8
 1154 05b6 9F92      		push r9
 1155 05b8 AF92      		push r10
 1156 05ba BF92      		push r11
 1157 05bc CF92      		push r12
 1158 05be DF92      		push r13
 1159 05c0 EF92      		push r14
 1160 05c2 FF92      		push r15
 1161 05c4 0F93      		push r16
 1162 05c6 1F93      		push r17
 1163               	/* prologue: function */
GAS LISTING /tmp/ccDlPBYj.s 			page 26


 1164               	/* frame size = 0 */
 1165               	/* stack size = 16 */
 1166               	.L__stack_usage = 16
 1167 05c8 7B01      		movw r14,r22
 1168 05ca 8C01      		movw r16,r24
 263:main.c        **** 	float theta=(90-angle0xz)*0.017453;
 264:main.c        **** 	//float t=2.75;
 265:main.c        **** 	float t=tf;
 266:main.c        **** 	float t2=t*t;
 1169               		.stabn	68,0,266,.LM119-.LFBB7
 1170               	.LM119:
 1171 05cc CA01      		movw r24,r20
 1172 05ce B901      		movw r22,r18
 1173 05d0 0E94 0000 		call __mulsf3
 1174 05d4 962E      		mov r9,r22
 1175 05d6 872E      		mov r8,r23
 1176 05d8 782E      		mov r7,r24
 1177 05da 692E      		mov r6,r25
 263:main.c        **** 	float theta=(90-angle0xz)*0.017453;
 1178               		.stabn	68,0,263,.LM120-.LFBB7
 1179               	.LM120:
 1180 05dc 60E0      		ldi r22,lo8(0x42b40000)
 1181 05de 70E0      		ldi r23,hi8(0x42b40000)
 1182 05e0 84EB      		ldi r24,hlo8(0x42b40000)
 1183 05e2 92E4      		ldi r25,hhi8(0x42b40000)
 1184 05e4 A801      		movw r20,r16
 1185 05e6 9701      		movw r18,r14
 1186 05e8 0E94 0000 		call __subsf3
 1187 05ec 28E9      		ldi r18,lo8(0x3c8ef998)
 1188 05ee 39EF      		ldi r19,hi8(0x3c8ef998)
 1189 05f0 4EE8      		ldi r20,hlo8(0x3c8ef998)
 1190 05f2 5CE3      		ldi r21,hhi8(0x3c8ef998)
 1191 05f4 0E94 0000 		call __mulsf3
 1192 05f8 9B01      		movw r18,r22
 1193 05fa AC01      		movw r20,r24
 267:main.c        **** 	float g=9.8;
 268:main.c        **** 	float a=-sin(2.0*theta)/(t2); 
 1194               		.stabn	68,0,268,.LM121-.LFBB7
 1195               	.LM121:
 1196 05fc 0E94 0000 		call __addsf3
 1197 0600 0E94 0000 		call sin
 1198 0604 5B01      		movw r10,r22
 1199 0606 6C01      		movw r12,r24
 1200 0608 9058      		subi r25,0x80
 1201 060a D401      		movw r26,r8
 1202 060c F301      		movw r30,r6
 1203 060e 2B2F      		mov r18,r27
 1204 0610 3A2F      		mov r19,r26
 1205 0612 4F2F      		mov r20,r31
 1206 0614 5E2F      		mov r21,r30
 1207 0616 0E94 0000 		call __divsf3
 1208 061a F62E      		mov r15,r22
 1209 061c 072F      		mov r16,r23
 1210 061e 182F      		mov r17,r24
 1211 0620 E92E      		mov r14,r25
 269:main.c        **** 	float b=g;
 270:main.c        **** 	float g2=g*g;
GAS LISTING /tmp/ccDlPBYj.s 			page 27


 271:main.c        **** 	
 272:main.c        **** 	float c=(0.25)*(g2)*(t2)*(sin(2.0*theta));
 273:main.c        **** 	float r=(1.0/(2.0*a))*(-b+sqrt(b*b+4.0*a*c));
 1212               		.stabn	68,0,273,.LM122-.LFBB7
 1213               	.LM122:
 1214 0622 20E0      		ldi r18,lo8(0x40800000)
 1215 0624 30E0      		ldi r19,hi8(0x40800000)
 1216 0626 40E8      		ldi r20,hlo8(0x40800000)
 1217 0628 50E4      		ldi r21,hhi8(0x40800000)
 1218 062a 0E94 0000 		call __mulsf3
 1219 062e 1B01      		movw r2,r22
 1220 0630 2C01      		movw r4,r24
 272:main.c        **** 	float c=(0.25)*(g2)*(t2)*(sin(2.0*theta));
 1221               		.stabn	68,0,272,.LM123-.LFBB7
 1222               	.LM123:
 1223 0632 A401      		movw r20,r8
 1224 0634 9301      		movw r18,r6
 1225 0636 652F      		mov r22,r21
 1226 0638 742F      		mov r23,r20
 1227 063a 832F      		mov r24,r19
 1228 063c 922F      		mov r25,r18
 1229 063e 2BE7      		ldi r18,lo8(0x41c0147b)
 1230 0640 34E1      		ldi r19,hi8(0x41c0147b)
 1231 0642 40EC      		ldi r20,hlo8(0x41c0147b)
 1232 0644 51E4      		ldi r21,hhi8(0x41c0147b)
 1233 0646 0E94 0000 		call __mulsf3
 1234 064a A601      		movw r20,r12
 1235 064c 9501      		movw r18,r10
 1236 064e 0E94 0000 		call __mulsf3
 1237 0652 9B01      		movw r18,r22
 1238 0654 AC01      		movw r20,r24
 1239               		.stabn	68,0,273,.LM124-.LFBB7
 1240               	.LM124:
 1241 0656 C201      		movw r24,r4
 1242 0658 B101      		movw r22,r2
 1243 065a 0E94 0000 		call __mulsf3
 1244 065e 2BE7      		ldi r18,lo8(0x42c0147b)
 1245 0660 34E1      		ldi r19,hi8(0x42c0147b)
 1246 0662 40EC      		ldi r20,hlo8(0x42c0147b)
 1247 0664 52E4      		ldi r21,hhi8(0x42c0147b)
 1248 0666 0E94 0000 		call __addsf3
 1249 066a 0E94 0000 		call sqrt
 1250 066e 5B01      		movw r10,r22
 1251 0670 6C01      		movw r12,r24
 1252 0672 6F2D      		mov r22,r15
 1253 0674 702F      		mov r23,r16
 1254 0676 812F      		mov r24,r17
 1255 0678 9E2D      		mov r25,r14
 1256 067a 2F2D      		mov r18,r15
 1257 067c 302F      		mov r19,r16
 1258 067e 412F      		mov r20,r17
 1259 0680 5E2D      		mov r21,r14
 1260 0682 0E94 0000 		call __addsf3
 1261 0686 9B01      		movw r18,r22
 1262 0688 AC01      		movw r20,r24
 1263 068a 60E0      		ldi r22,lo8(0x3f800000)
 1264 068c 70E0      		ldi r23,hi8(0x3f800000)
GAS LISTING /tmp/ccDlPBYj.s 			page 28


 1265 068e 80E8      		ldi r24,hlo8(0x3f800000)
 1266 0690 9FE3      		ldi r25,hhi8(0x3f800000)
 1267 0692 0E94 0000 		call __divsf3
 1268 0696 7B01      		movw r14,r22
 1269 0698 8C01      		movw r16,r24
 1270 069a C601      		movw r24,r12
 1271 069c B501      		movw r22,r10
 1272 069e 2DEC      		ldi r18,lo8(0x411ccccd)
 1273 06a0 3CEC      		ldi r19,hi8(0x411ccccd)
 1274 06a2 4CE1      		ldi r20,hlo8(0x411ccccd)
 1275 06a4 51E4      		ldi r21,hhi8(0x411ccccd)
 1276 06a6 0E94 0000 		call __subsf3
 1277 06aa 9B01      		movw r18,r22
 1278 06ac AC01      		movw r20,r24
 1279 06ae C801      		movw r24,r16
 1280 06b0 B701      		movw r22,r14
 1281 06b2 0E94 0000 		call __mulsf3
 1282               	/* epilogue start */
 274:main.c        **** 
 275:main.c        **** 	return r;
 276:main.c        **** }
 1283               		.stabn	68,0,276,.LM125-.LFBB7
 1284               	.LM125:
 1285 06b6 1F91      		pop r17
 1286 06b8 0F91      		pop r16
 1287 06ba FF90      		pop r15
 1288 06bc EF90      		pop r14
 1289 06be DF90      		pop r13
 1290 06c0 CF90      		pop r12
 1291 06c2 BF90      		pop r11
 1292 06c4 AF90      		pop r10
 1293 06c6 9F90      		pop r9
 1294 06c8 8F90      		pop r8
 1295 06ca 7F90      		pop r7
 1296 06cc 6F90      		pop r6
 1297 06ce 5F90      		pop r5
 1298 06d0 4F90      		pop r4
 1299 06d2 3F90      		pop r3
 1300 06d4 2F90      		pop r2
 1301 06d6 0895      		ret
 1302               		.size	final_distance, .-final_distance
 1303               	.Lscope7:
 1304               		.stabs	"",36,0,0,.Lscope7-.LFBB7
 1305               		.stabd	78,0,0
 1306               		.stabs	"main:F(0,15)",36,0,42,main
 1307               	.global	main
 1308               		.type	main, @function
 1309               	main:
 1310               		.stabd	46,0,0
  43:main.c        **** {
 1311               		.stabn	68,0,43,.LM126-.LFBB8
 1312               	.LM126:
 1313               	.LFBB8:
 1314 06d8 2F92      		push r2
 1315 06da 3F92      		push r3
 1316 06dc 4F92      		push r4
 1317 06de 5F92      		push r5
GAS LISTING /tmp/ccDlPBYj.s 			page 29


 1318 06e0 6F92      		push r6
 1319 06e2 7F92      		push r7
 1320 06e4 8F92      		push r8
 1321 06e6 9F92      		push r9
 1322 06e8 AF92      		push r10
 1323 06ea BF92      		push r11
 1324 06ec CF92      		push r12
 1325 06ee DF92      		push r13
 1326 06f0 EF92      		push r14
 1327 06f2 FF92      		push r15
 1328 06f4 0F93      		push r16
 1329 06f6 1F93      		push r17
 1330 06f8 DF93      		push r29
 1331 06fa CF93      		push r28
 1332 06fc CDB7      		in r28,__SP_L__
 1333 06fe DEB7      		in r29,__SP_H__
 1334 0700 6697      		sbiw r28,22
 1335 0702 0FB6      		in __tmp_reg__,__SREG__
 1336 0704 F894      		cli
 1337 0706 DEBF      		out __SP_H__,r29
 1338 0708 0FBE      		out __SREG__,__tmp_reg__
 1339 070a CDBF      		out __SP_L__,r28
 1340               	/* prologue: function */
 1341               	/* frame size = 22 */
 1342               	/* stack size = 40 */
 1343               	.L__stack_usage = 40
  44:main.c        **** 	init_ports(); // Inicializa puertos A=>ADC, B=Inputs ,C=Outputs , D=Outputs
 1344               		.stabn	68,0,44,.LM127-.LFBB8
 1345               	.LM127:
 1346 070c 0E94 0000 		call init_ports
  50:main.c        **** 	double ms_time=0.0;
 1347               		.stabn	68,0,50,.LM128-.LFBB8
 1348               	.LM128:
 1349 0710 FF24      		clr r15
 1350 0712 EE24      		clr r14
 1351 0714 9924      		clr r9
 1352 0716 4424      		clr r4
  49:main.c        **** 	int time=0;
 1353               		.stabn	68,0,49,.LM129-.LFBB8
 1354               	.LM129:
 1355 0718 00E0      		ldi r16,lo8(0)
 1356 071a 10E0      		ldi r17,hi8(0)
  46:main.c        **** 	double angle0xz=0.0;
 1357               		.stabn	68,0,46,.LM130-.LFBB8
 1358               	.LM130:
 1359 071c 3324      		clr r3
 1360 071e 2224      		clr r2
 1361 0720 1D8A      		std Y+21,__zero_reg__
 1362 0722 1E8A      		std Y+22,__zero_reg__
 1363               	.L190:
  44:main.c        **** 	init_ports(); // Inicializa puertos A=>ADC, B=Inputs ,C=Outputs , D=Outputs
 1364               		.stabn	68,0,44,.LM131-.LFBB8
 1365               	.LM131:
 1366 0724 5E01      		movw r10,r28
 1367 0726 0894      		sec
 1368 0728 A11C      		adc r10,__zero_reg__
 1369 072a B11C      		adc r11,__zero_reg__
GAS LISTING /tmp/ccDlPBYj.s 			page 30


  55:main.c        **** 	{  for(i=0;i<6;i++){select_ADC_port(i); /*Seleccionar puerto de entrada ADC*/ a[i]=ADCH-81;} // Ca
 1370               		.stabn	68,0,55,.LM132-.LFBB8
 1371               	.LM132:
 1372 072c CC24      		clr r12
 1373 072e DD24      		clr r13
 1374               	.L180:
  55:main.c        **** 	{  for(i=0;i<6;i++){select_ADC_port(i); /*Seleccionar puerto de entrada ADC*/ a[i]=ADCH-81;} // Ca
 1375               		.stabn	68,0,55,.LM133-.LFBB8
 1376               	.LM133:
 1377 0730 C601      		movw r24,r12
 1378 0732 0E94 0000 		call select_ADC_port
 1379 0736 65B1      		in r22,37-32
 1380 0738 70E0      		ldi r23,lo8(0)
 1381 073a 6155      		subi r22,lo8(-(-81))
 1382 073c 7040      		sbci r23,hi8(-(-81))
 1383 073e 8827      		clr r24
 1384 0740 77FD      		sbrc r23,7
 1385 0742 8095      		com r24
 1386 0744 982F      		mov r25,r24
 1387 0746 0E94 0000 		call __floatsisf
 1388 074a F501      		movw r30,r10
 1389 074c 6193      		st Z+,r22
 1390 074e 7193      		st Z+,r23
 1391 0750 8193      		st Z+,r24
 1392 0752 9193      		st Z+,r25
 1393 0754 5F01      		movw r10,r30
 1394 0756 0894      		sec
 1395 0758 C11C      		adc r12,__zero_reg__
 1396 075a D11C      		adc r13,__zero_reg__
 1397 075c F6E0      		ldi r31,lo8(6)
 1398 075e CF16      		cp r12,r31
 1399 0760 D104      		cpc r13,__zero_reg__
 1400 0762 01F4      		brne .L180
  56:main.c        **** 	a[3]=a[3]+81;
 1401               		.stabn	68,0,56,.LM134-.LFBB8
 1402               	.LM134:
 1403 0764 6D85      		ldd r22,Y+13
 1404 0766 7E85      		ldd r23,Y+14
 1405 0768 8F85      		ldd r24,Y+15
 1406 076a 9889      		ldd r25,Y+16
 1407 076c 20E0      		ldi r18,lo8(0x42a20000)
 1408 076e 30E0      		ldi r19,hi8(0x42a20000)
 1409 0770 42EA      		ldi r20,hlo8(0x42a20000)
 1410 0772 52E4      		ldi r21,hhi8(0x42a20000)
 1411 0774 0E94 0000 		call __addsf3
 1412 0778 862E      		mov r8,r22
 1413 077a 772E      		mov r7,r23
 1414 077c 682E      		mov r6,r24
 1415 077e 592E      		mov r5,r25
 1416 0780 862F      		mov r24,r22
 1417 0782 972D      		mov r25,r7
 1418 0784 A62D      		mov r26,r6
 1419 0786 B52D      		mov r27,r5
 1420 0788 8D87      		std Y+13,r24
 1421 078a 9E87      		std Y+14,r25
 1422 078c AF87      		std Y+15,r26
 1423 078e B88B      		std Y+16,r27
GAS LISTING /tmp/ccDlPBYj.s 			page 31


  57:main.c        **** 	a[4]=a[4]+81;
 1424               		.stabn	68,0,57,.LM135-.LFBB8
 1425               	.LM135:
 1426 0790 6989      		ldd r22,Y+17
 1427 0792 7A89      		ldd r23,Y+18
 1428 0794 8B89      		ldd r24,Y+19
 1429 0796 9C89      		ldd r25,Y+20
 1430 0798 20E0      		ldi r18,lo8(0x42a20000)
 1431 079a 30E0      		ldi r19,hi8(0x42a20000)
 1432 079c 42EA      		ldi r20,hlo8(0x42a20000)
 1433 079e 52E4      		ldi r21,hhi8(0x42a20000)
 1434 07a0 0E94 0000 		call __addsf3
 1435 07a4 262F      		mov r18,r22
 1436 07a6 372F      		mov r19,r23
 1437 07a8 482F      		mov r20,r24
 1438 07aa 592F      		mov r21,r25
 1439 07ac 298B      		std Y+17,r18
 1440 07ae 3A8B      		std Y+18,r19
 1441 07b0 4B8B      		std Y+19,r20
 1442 07b2 5C8B      		std Y+20,r21
  64:main.c        **** 		if(a[4]>132){aterrizo=1;}
 1443               		.stabn	68,0,64,.LM136-.LFBB8
 1444               	.LM136:
 1445 07b4 A1E0      		ldi r26,lo8(1)
 1446 07b6 CA2E      		mov r12,r26
 1447 07b8 D12C      		mov r13,__zero_reg__
 1448 07ba 20E0      		ldi r18,lo8(0x43040000)
 1449 07bc 30E0      		ldi r19,hi8(0x43040000)
 1450 07be 44E0      		ldi r20,hlo8(0x43040000)
 1451 07c0 53E4      		ldi r21,hhi8(0x43040000)
 1452 07c2 0E94 0000 		call __gtsf2
 1453 07c6 1816      		cp __zero_reg__,r24
 1454 07c8 04F0      		brlt .L181
 1455 07ca CC24      		clr r12
 1456 07cc DD24      		clr r13
 1457               	.L181:
  61:main.c        **** 		if(a[3]>132){count=1;}
 1458               		.stabn	68,0,61,.LM137-.LFBB8
 1459               	.LM137:
 1460 07ce F1E0      		ldi r31,lo8(1)
 1461 07d0 AF2E      		mov r10,r31
 1462 07d2 B12C      		mov r11,__zero_reg__
 1463 07d4 682D      		mov r22,r8
 1464 07d6 772D      		mov r23,r7
 1465 07d8 862D      		mov r24,r6
 1466 07da 952D      		mov r25,r5
 1467 07dc 20E0      		ldi r18,lo8(0x43040000)
 1468 07de 30E0      		ldi r19,hi8(0x43040000)
 1469 07e0 44E0      		ldi r20,hlo8(0x43040000)
 1470 07e2 53E4      		ldi r21,hhi8(0x43040000)
 1471 07e4 0E94 0000 		call __gtsf2
 1472 07e8 1816      		cp __zero_reg__,r24
 1473 07ea 04F0      		brlt .L183
 1474 07ec AA24      		clr r10
 1475 07ee BB24      		clr r11
 1476               	.L183:
  69:main.c        **** 	    if ((count==1) && (aterrizo==0)) {
GAS LISTING /tmp/ccDlPBYj.s 			page 32


 1477               		.stabn	68,0,69,.LM138-.LFBB8
 1478               	.LM138:
 1479 07f0 81E0      		ldi r24,lo8(1)
 1480 07f2 A816      		cp r10,r24
 1481 07f4 B104      		cpc r11,__zero_reg__
 1482 07f6 01F4      		brne .L182
  69:main.c        **** 	    if ((count==1) && (aterrizo==0)) {
 1483               		.stabn	68,0,69,.LM139-.LFBB8
 1484               	.LM139:
 1485 07f8 C114      		cp r12,__zero_reg__
 1486 07fa D104      		cpc r13,__zero_reg__
 1487 07fc 01F0      		breq .+2
 1488 07fe 00C0      		rjmp .L184
 1489               	.LBB6:
 1490               	.LBB7:
 142:main.c        **** 	return atan(az/ax)*(57.2958);
 1491               		.stabn	68,0,142,.LM140-.LFBB8
 1492               	.LM140:
 1493 0800 6985      		ldd r22,Y+9
 1494 0802 7A85      		ldd r23,Y+10
 1495 0804 8B85      		ldd r24,Y+11
 1496 0806 9C85      		ldd r25,Y+12
 1497 0808 2981      		ldd r18,Y+1
 1498 080a 3A81      		ldd r19,Y+2
 1499 080c 4B81      		ldd r20,Y+3
 1500 080e 5C81      		ldd r21,Y+4
 1501 0810 0E94 0000 		call __divsf3
 1502 0814 0E94 0000 		call atan
 1503 0818 26EE      		ldi r18,lo8(0x42652ee6)
 1504 081a 3EE2      		ldi r19,hi8(0x42652ee6)
 1505 081c 45E6      		ldi r20,hlo8(0x42652ee6)
 1506 081e 52E4      		ldi r21,hhi8(0x42652ee6)
 1507 0820 0E94 0000 		call __mulsf3
 1508 0824 362E      		mov r3,r22
 1509 0826 272E      		mov r2,r23
 1510 0828 8D8B      		std Y+21,r24
 1511 082a 9E8B      		std Y+22,r25
 1512 082c 00C0      		rjmp .L191
 1513               	.L182:
 1514               	.LBE7:
 1515               	.LBE6:
  78:main.c        **** 	    else if ((count==0) && (aterrizo==0))     {
 1516               		.stabn	68,0,78,.LM141-.LFBB8
 1517               	.LM141:
 1518 082e C114      		cp r12,__zero_reg__
 1519 0830 D104      		cpc r13,__zero_reg__
 1520 0832 01F4      		brne .L184
  80:main.c        **** 				if(ms_time==8){time=time+1;ms_time=0;}else{time=time+0;}
 1521               		.stabn	68,0,80,.LM142-.LFBB8
 1522               	.LM142:
 1523 0834 A701      		movw r20,r14
 1524 0836 652F      		mov r22,r21
 1525 0838 7E2D      		mov r23,r14
 1526 083a 892D      		mov r24,r9
 1527 083c 942D      		mov r25,r4
 1528 083e 20E0      		ldi r18,lo8(0x41000000)
 1529 0840 30E0      		ldi r19,hi8(0x41000000)
GAS LISTING /tmp/ccDlPBYj.s 			page 33


 1530 0842 40E0      		ldi r20,hlo8(0x41000000)
 1531 0844 51E4      		ldi r21,hhi8(0x41000000)
 1532 0846 0E94 0000 		call __eqsf2
 1533 084a 8823      		tst r24
 1534 084c 01F4      		brne .L186
  80:main.c        **** 				if(ms_time==8){time=time+1;ms_time=0;}else{time=time+0;}
 1535               		.stabn	68,0,80,.LM143-.LFBB8
 1536               	.LM143:
 1537 084e 0F5F      		subi r16,lo8(-(1))
 1538 0850 1F4F      		sbci r17,hi8(-(1))
 1539 0852 FF24      		clr r15
 1540 0854 EE24      		clr r14
 1541 0856 9924      		clr r9
 1542 0858 4424      		clr r4
 1543               	.L186:
 1544               	.LBB8:
 1545               	.LBB9:
 1546               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h",132,0,0,.Ltext1
 1547               	.Ltext1:
   1:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    All rights reserved.
   5:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
   6:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
   9:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  12:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****      distribution.
  16:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  17:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  21:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  33:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** /* $Id: delay.h.in 2189 2010-10-13 09:39:34Z aboyapati $ */
  34:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  35:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  38:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
GAS LISTING /tmp/ccDlPBYj.s 			page 34


  39:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #endif
  41:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  42:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #include <math.h>
  45:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  46:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** /** \file */
  47:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     \code
  49:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     \endcode
  53:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  54:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     used.
  58:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  59:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  68:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  77:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  81:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** */
  82:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  83:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #endif
  87:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  88:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #endif
  93:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  94:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
GAS LISTING /tmp/ccDlPBYj.s 			page 35


  96:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #endif
  97:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  98:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** /**
  99:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    \ingroup util_delay
 100:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 101:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 102:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 103:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 104:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 105:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 106:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 107:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 108:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 109:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 110:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 111:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 112:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 113:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 114:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 115:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 116:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 117:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    no delay i.e., 0ms.
 118:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 119:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 120:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 121:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 122:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 123:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 124:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    to round down and round to closest integer.
 125:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 126:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 127:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 128:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay
 129:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    although this will be deprecated in future.
 130:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 131:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****  */
 132:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** void
 133:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** _delay_ms(double __ms)
 134:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** {
 135:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	uint16_t __ticks;
 136:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	double __tmp ; 
 137:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && !defined(__DELAY_BACKWARD_COMPATIBLE__)
 138:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 139:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 140:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 141:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 142:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 143:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 144:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 145:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 146:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 147:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 148:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	#else
 149:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 		//round up by default
 150:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 151:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	#endif
 152:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
GAS LISTING /tmp/ccDlPBYj.s 			page 36


 153:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 1548               		.stabn	68,0,153,.LM144-.LFBB8
 1549               	.LM144:
 1550 085a EDEA      		 ldi r30,lo8(24749)
 1551 085c F0E6      	    ldi r31,hi8(24749)
 1552 085e 3197      	    1:sbiw r30,1
 1553 0860 01F4      	    brne 1b
 1554 0862 00C0      		rjmp .
 1555 0864 0000      		nop
 1556               	.LBE9:
 1557               	.LBE8:
 1558               		.stabs	"main.c",132,0,0,.Ltext2
 1559               	.Ltext2:
  82:main.c        **** 				ms_time=ms_time+1;	
 1560               		.stabn	68,0,82,.LM145-.LFBB8
 1561               	.LM145:
 1562 0866 A701      		movw r20,r14
 1563 0868 652F      		mov r22,r21
 1564 086a 7E2D      		mov r23,r14
 1565 086c 892D      		mov r24,r9
 1566 086e 942D      		mov r25,r4
 1567 0870 20E0      		ldi r18,lo8(0x3f800000)
 1568 0872 30E0      		ldi r19,hi8(0x3f800000)
 1569 0874 40E8      		ldi r20,hlo8(0x3f800000)
 1570 0876 5FE3      		ldi r21,hhi8(0x3f800000)
 1571 0878 0E94 0000 		call __addsf3
 1572 087c F62E      		mov r15,r22
 1573 087e E72E      		mov r14,r23
 1574 0880 982E      		mov r9,r24
 1575 0882 492E      		mov r4,r25
 1576               	.L184:
  94:main.c        **** 				print_Time_Binary(time);				
 1577               		.stabn	68,0,94,.LM146-.LFBB8
 1578               	.LM146:
 1579 0884 C801      		movw r24,r16
 1580 0886 0E94 0000 		call print_Time_Binary
 1581               	.L191:
  96:main.c        **** 				print_Angle_Binary(1,angle0xz);
 1582               		.stabn	68,0,96,.LM147-.LFBB8
 1583               	.LM147:
 1584 088a 81E0      		ldi r24,lo8(1)
 1585 088c 90E0      		ldi r25,hi8(1)
 1586 088e F101      		movw r30,r2
 1587 0890 3D89      		ldd r19,Y+21
 1588 0892 2E89      		ldd r18,Y+22
 1589 0894 4F2F      		mov r20,r31
 1590 0896 522D      		mov r21,r2
 1591 0898 632F      		mov r22,r19
 1592 089a 722F      		mov r23,r18
 1593 089c 0E94 0000 		call print_Angle_Binary
  97:main.c        **** 				x_total=final_distance(angle0xz,(time+(ms_time/10))); // Calcula la distancia final.
 1594               		.stabn	68,0,97,.LM148-.LFBB8
 1595               	.LM148:
 1596 08a0 B801      		movw r22,r16
 1597 08a2 8827      		clr r24
 1598 08a4 77FD      		sbrc r23,7
 1599 08a6 8095      		com r24
GAS LISTING /tmp/ccDlPBYj.s 			page 37


 1600 08a8 982F      		mov r25,r24
 1601 08aa 0E94 0000 		call __floatsisf
 1602 08ae 5B01      		movw r10,r22
 1603 08b0 6C01      		movw r12,r24
 1604 08b2 A701      		movw r20,r14
 1605 08b4 652F      		mov r22,r21
 1606 08b6 7E2D      		mov r23,r14
 1607 08b8 892D      		mov r24,r9
 1608 08ba 942D      		mov r25,r4
 1609 08bc 20E0      		ldi r18,lo8(0x41200000)
 1610 08be 30E0      		ldi r19,hi8(0x41200000)
 1611 08c0 40E2      		ldi r20,hlo8(0x41200000)
 1612 08c2 51E4      		ldi r21,hhi8(0x41200000)
 1613 08c4 0E94 0000 		call __divsf3
 1614 08c8 9B01      		movw r18,r22
 1615 08ca AC01      		movw r20,r24
 1616 08cc C601      		movw r24,r12
 1617 08ce B501      		movw r22,r10
 1618 08d0 0E94 0000 		call __addsf3
 1619 08d4 9B01      		movw r18,r22
 1620 08d6 AC01      		movw r20,r24
 1621 08d8 D101      		movw r26,r2
 1622 08da FD89      		ldd r31,Y+21
 1623 08dc EE89      		ldd r30,Y+22
 1624 08de 6B2F      		mov r22,r27
 1625 08e0 722D      		mov r23,r2
 1626 08e2 8F2F      		mov r24,r31
 1627 08e4 9E2F      		mov r25,r30
 1628 08e6 0E94 0000 		call final_distance
  98:main.c        **** 				print_Decimes(x_total);
 1629               		.stabn	68,0,98,.LM149-.LFBB8
 1630               	.LM149:
 1631 08ea 0E94 0000 		call print_Decimes
 1632 08ee 00C0      		rjmp .L190
 1633               		.size	main, .-main
 1634               		.stabs	"i:r(0,1)",64,0,45,12
 1635               		.stabs	"a:(0,16)=ar(0,17)=r(0,17);0;0177777;;0;4;(0,13)",128,0,48,1
 1636               		.stabs	"time:r(0,1)",64,0,49,16
 1637               		.stabn	192,0,0,.LFBB8-.LFBB8
 1638               		.stabn	224,0,0,.Lscope8-.LFBB8
 1639               	.Lscope8:
 1640               		.stabs	"",36,0,0,.Lscope8-.LFBB8
 1641               		.stabd	78,0,0
 1642               		.stabs	"",100,0,0,.Letext0
 1643               	.Letext0:
GAS LISTING /tmp/ccDlPBYj.s 			page 38


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccDlPBYj.s:2      *ABS*:0000003f __SREG__
     /tmp/ccDlPBYj.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccDlPBYj.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccDlPBYj.s:5      *ABS*:00000034 __CCP__
     /tmp/ccDlPBYj.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/ccDlPBYj.s:7      *ABS*:00000001 __zero_reg__
     /tmp/ccDlPBYj.s:74     .text:00000000 init_ports
     /tmp/ccDlPBYj.s:134    .text:00000026 select_ADC_port
     /tmp/ccDlPBYj.s:169    .text:00000032 initial_anglexz
     /tmp/ccDlPBYj.s:212    .text:00000060 print_Angle_Binary
     /tmp/ccDlPBYj.s:536    .text:0000022a print_Decimes
     /tmp/ccDlPBYj.s:1038   .text:00000552 print_Time_Binary
     /tmp/ccDlPBYj.s:1142   .text:000005a8 final_distance
     /tmp/ccDlPBYj.s:1309   .text:000006d8 main

UNDEFINED SYMBOLS
__divsf3
atan
__mulsf3
__gtsf2
__gesf2
__subsf3
__addsf3
sin
sqrt
__floatsisf
__eqsf2
