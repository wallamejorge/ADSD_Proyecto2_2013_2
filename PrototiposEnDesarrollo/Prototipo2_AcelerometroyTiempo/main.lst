GAS LISTING /tmp/ccIBfZSu.s 			page 1


   1               		.file	"main.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.stabs	"/home/juanfe/Desktop/Prototipo2_AcelerometroyTiempo_juanfe/",100,0,2,.Ltext0
   9               		.stabs	"main.c",100,0,2,.Ltext0
  10               		.text
  11               	.Ltext0:
  12               		.stabs	"gcc2_compiled.",60,0,0,0
  13               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,0,0
  14               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,0,0
  15               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,0,0
  16               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,0,0
  17               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,0,0
  18               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,0,
  19               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,0,0
  20               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,0,0
  21               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,0,0
  22               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,0,0
  23               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
  24               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,0,0
  25               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,0,0
  26               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,0,0
  27               		.stabs	"void:t(0,15)=(0,15)",128,0,0,0
  28               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/io.h",130,0,0,0
  29               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/sfr_defs.h",130,0,0,0
  30               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/inttypes.h",130,0,0,0
  31               		.stabs	"/usr/lib/gcc/avr/4.5.3/include/stdint.h",130,0,0,0
  32               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/stdint.h",130,0,0,0
  33               		.stabs	"int8_t:t(5,1)=(0,10)",128,0,121,0
  34               		.stabs	"uint8_t:t(5,2)=(0,11)",128,0,122,0
  35               		.stabs	"int16_t:t(5,3)=(0,1)",128,0,123,0
  36               		.stabs	"uint16_t:t(5,4)=(0,4)",128,0,124,0
  37               		.stabs	"int32_t:t(5,5)=(0,3)",128,0,125,0
  38               		.stabs	"uint32_t:t(5,6)=(0,5)",128,0,126,0
  39               		.stabs	"int64_t:t(5,7)=(0,6)",128,0,128,0
  40               		.stabs	"uint64_t:t(5,8)=(0,7)",128,0,129,0
  41               		.stabs	"intptr_t:t(5,9)=(5,3)",128,0,142,0
  42               		.stabs	"uintptr_t:t(5,10)=(5,4)",128,0,147,0
  43               		.stabs	"int_least8_t:t(5,11)=(5,1)",128,0,159,0
  44               		.stabs	"uint_least8_t:t(5,12)=(5,2)",128,0,164,0
  45               		.stabs	"int_least16_t:t(5,13)=(5,3)",128,0,169,0
  46               		.stabs	"uint_least16_t:t(5,14)=(5,4)",128,0,174,0
  47               		.stabs	"int_least32_t:t(5,15)=(5,5)",128,0,179,0
  48               		.stabs	"uint_least32_t:t(5,16)=(5,6)",128,0,184,0
  49               		.stabs	"int_least64_t:t(5,17)=(5,7)",128,0,192,0
  50               		.stabs	"uint_least64_t:t(5,18)=(5,8)",128,0,199,0
  51               		.stabs	"int_fast8_t:t(5,19)=(5,1)",128,0,213,0
  52               		.stabs	"uint_fast8_t:t(5,20)=(5,2)",128,0,218,0
  53               		.stabs	"int_fast16_t:t(5,21)=(5,3)",128,0,223,0
  54               		.stabs	"uint_fast16_t:t(5,22)=(5,4)",128,0,228,0
  55               		.stabs	"int_fast32_t:t(5,23)=(5,5)",128,0,233,0
  56               		.stabs	"uint_fast32_t:t(5,24)=(5,6)",128,0,238,0
  57               		.stabs	"int_fast64_t:t(5,25)=(5,7)",128,0,246,0
GAS LISTING /tmp/ccIBfZSu.s 			page 2


  58               		.stabs	"uint_fast64_t:t(5,26)=(5,8)",128,0,253,0
  59               		.stabs	"intmax_t:t(5,27)=(5,7)",128,0,273,0
  60               		.stabs	"uintmax_t:t(5,28)=(5,8)",128,0,278,0
  61               		.stabn	162,0,0,0
  62               		.stabn	162,0,0,0
  63               		.stabs	"int_farptr_t:t(3,1)=(5,5)",128,0,77,0
  64               		.stabs	"uint_farptr_t:t(3,2)=(5,6)",128,0,81,0
  65               		.stabn	162,0,0,0
  66               		.stabn	162,0,0,0
  67               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/fuse.h",130,0,0,0
  68               		.stabs	"__fuse_t:t(6,1)=(6,2)=s2low:(0,11),0,8;high:(0,11),8,8;;",128,0,252,0
  69               		.stabn	162,0,0,0
  70               		.stabn	162,0,0,0
  71               		.stabs	"init_ports:F(0,15)",36,0,116,init_ports
  72               	.global	init_ports
  73               		.type	init_ports, @function
  74               	init_ports:
  75               		.stabd	46,0,0
   1:main.c        **** //-------------------------------------------------------------------------------------------------
   2:main.c        **** //Prototipo NO.2 Proyecto 2 Cohete Agua. Codigo que lee 3 señales analogas de 0-5v y calcula los a
   3:main.c        **** // es capaz de predecir la distancia maxima
   4:main.c        **** // Autores: Juan Felipe Martinez, Monica Tuta Fajardo, Jorge Luis Mayorga
   5:main.c        **** // Universidad de los Andes
   6:main.c        **** //-------------------------------------------------------------------------------------------------
   7:main.c        **** 
   8:main.c        **** //-------------------------------------------------//
   9:main.c        **** //-----------------LIBRERIAS-----------------------//
  10:main.c        **** //------------------------------------------------//
  11:main.c        **** //#include<mega16.h>
  12:main.c        **** #include<avr/io.h>
  13:main.c        **** #include<math.h>
  14:main.c        **** #include<util/delay.h>
  15:main.c        **** #include<stdbool.h>
  16:main.c        **** //------------------------------------------------//
  17:main.c        **** 
  18:main.c        **** 
  19:main.c        **** //------------------------------------------------//
  20:main.c        **** //---------------DEFINIR FUNCIONES----------------//
  21:main.c        **** //------------------------------------------------//
  22:main.c        **** #define sbi(x,y) x |= _BV(y) //Hace set al yth bit del puerto X
  23:main.c        **** #define cbi(x,y) x &= ~(_BV(y)) //Hace reset al yth bit del puerto X
  24:main.c        **** #define tbi(x,y) x ^= _BV(y) //Cambia el estado logico del yth bit del puerto X
  25:main.c        **** #define is_high(x,y) ((x & _BV(y)) == _BV(y))
  26:main.c        **** #define is_low(x,y) ((x & (_BV(y))) == 0) //check if the input pin is low
  27:main.c        **** double initial_anglexz(double ax, double ay, double az); // Calcula el angulo xz inicial de lanzami
  28:main.c        **** double initial_anglexy(double ax, double ay, double az); // Calcula el angulo xy inicial de lanzami
  29:main.c        **** double initial_angleyz(double ax, double ay, double az); // Calcula el angulo yz inicial de lanzami
  30:main.c        **** double final_distance(double angle0xz,double tf); // Calcula la distancia del cohete en mts usando 
  31:main.c        **** int time_counter(int Reset,int count,int count0); // Contador mientras que este activo count
  32:main.c        **** void init_ports(void); //Inicializa los puertos
  33:main.c        **** void select_ADC_port(int i);// Seleccion cual puerto de ADC leer
  34:main.c        **** void print_Angle_Binary(int NoPortCD,double angle);// Imprime en PORTD el angulo medido en binario
  35:main.c        **** void print_Decimes(float num_in);// Imprime en PORTD el angulo medido en binario
  36:main.c        **** void print_Time_Binary(int time);// Imprime en PORTC el tiempo medido en binario
  37:main.c        **** //void print_Units(double num_in, char decimas);
  38:main.c        **** //------------------------------------------------------//
  39:main.c        **** 
GAS LISTING /tmp/ccIBfZSu.s 			page 3


  40:main.c        **** 
  41:main.c        **** //------------------------------------------------------//
  42:main.c        **** //---------------------Main.c---------------------------//
  43:main.c        **** //------------------------------------------------------//
  44:main.c        **** void main(void)
  45:main.c        **** {
  46:main.c        **** 	init_ports(); // Inicializa puertos A=>ADC, B=Inputs ,C=Outputs , D=Outputs
  47:main.c        **** 	int i=0;
  48:main.c        **** 	double angle0xy=0.0;
  49:main.c        **** 	double angle0yz=0.0;
  50:main.c        **** 	double angle0xz=0.0;
  51:main.c        **** 	double x_total=0.0;
  52:main.c        **** 	double y=0.0;
  53:main.c        **** 	double a[5];
  54:main.c        **** 	int time=0;
  55:main.c        **** 	double ms_time=0.0;
  56:main.c        **** 	int count=0;
  57:main.c        **** 	int print_distance=0;
  58:main.c        **** 
  59:main.c        **** 	while (1)
  60:main.c        **** 	{  for(i=0;i<6;i++){select_ADC_port(i); /*Seleccionar puerto de entrada ADC*/ a[i]=ADCH-81;} // Ca
  61:main.c        **** 	a[3]=a[3]+81;
  62:main.c        **** 	a[4]=a[4]+81;
  63:main.c        **** 				
  64:main.c        **** 	
  65:main.c        **** 		// Conversión de entrada análoga
  66:main.c        **** 
  67:main.c        **** 		
  68:main.c        **** 		if(a[3]>132){count=1;}
  69:main.c        **** 		else{count=0;}
  70:main.c        **** 
  71:main.c        **** 		if(a[4]>132){print_distance=1;}
  72:main.c        **** 		else{print_distance=0;}
  73:main.c        **** 
  74:main.c        **** 		// Si reset (análogo) todas la señales a 0, sino los contadores de milisegundos y segundos func
  75:main.c        **** 		
  76:main.c        **** 		
  77:main.c        **** 			if (count==0)	{
  78:main.c        **** 				if(ms_time==10){time=time+1;ms_time=0;}else{time=time+0;}
  79:main.c        **** 				_delay_ms(100);
  80:main.c        **** 				ms_time=ms_time+1;	
  81:main.c        **** 				print_Time_Binary(time);
  82:main.c        **** 				
  83:main.c        **** 				angle0xy=angle0xy; angle0xz=angle0xz; angle0yz=angle0yz; //los ángulos se mantienen con el úl
  84:main.c        **** 				//print_Angle_Binary(1,angle0xz); // Imprime el angulo en binario en el puerto PORTD */
  85:main.c        **** 
  86:main.c        **** 				x_total=final_distance(angle0xz,(time+(ms_time/10))); // Calcula la distancia final.
  87:main.c        **** 				print_Decimes(x_total);
  88:main.c        **** 				//print_Units(y,);
  89:main.c        **** 				}
  90:main.c        **** 				
  91:main.c        **** 
  92:main.c        **** 			else { ms_time=ms_time;time=time;
  93:main.c        **** 				angle0xy=initial_anglexy(a[0],a[1],a[2]); // Genero angulo entre x y y en grados
  94:main.c        **** 				angle0xz=initial_anglexz(a[0],a[1],a[2]); // Genero angulo entre x y z en grados
  95:main.c        **** 				angle0yz=initial_angleyz(a[0],a[1],a[2]); // Genero angulo entre y y z en grados
  96:main.c        **** 				//print_Angle_Binary(1,angle0xz); // Imprime el angulo en binario en el puerto PORTD  */
GAS LISTING /tmp/ccIBfZSu.s 			page 4


  97:main.c        **** 				
  98:main.c        **** 				x_total=final_distance(angle0xz,(time+(ms_time/10))); // Calcula la distancia final.
  99:main.c        **** 				print_Decimes(x_total);
 100:main.c        **** 				//_delay_ms(150);
 101:main.c        **** 				//print_Units(y);
 102:main.c        **** 				//_delay_ms(180);
 103:main.c        **** 			     }
 104:main.c        **** 			
 105:main.c        **** 		
 106:main.c        **** //		if(print_distance=1){print_Distance(x_total);}
 107:main.c        **** //		else{print_Angle_Binary(1,angle0xz);}
 108:main.c        **** 
 109:main.c        **** 		
 110:main.c        **** 	}
 111:main.c        **** }
 112:main.c        **** //------------------------------------------------------//
 113:main.c        **** //------------------------------------------------------//
 114:main.c        **** //-------------------Init_Ports-------------------------//
 115:main.c        **** //------------------------------------------------------//
 116:main.c        **** void init_ports(void){
  76               		.stabn	68,0,116,.LM0-.LFBB1
  77               	.LM0:
  78               	.LFBB1:
  79               	/* prologue: function */
  80               	/* frame size = 0 */
  81               	/* stack size = 0 */
  82               	.L__stack_usage = 0
 117:main.c        **** 
 118:main.c        **** 	DDRA=0x00;		//Defino Puerto A como Inputs
  83               		.stabn	68,0,118,.LM1-.LFBB1
  84               	.LM1:
  85 0000 1ABA      		out 58-32,__zero_reg__
 119:main.c        **** 	PORTA=0x00;     //Habilito los puertos de A
  86               		.stabn	68,0,119,.LM2-.LFBB1
  87               	.LM2:
  88 0002 1BBA      		out 59-32,__zero_reg__
 120:main.c        **** 	DDRB = 0x00;    //Defino Puerto B como Inputs
  89               		.stabn	68,0,120,.LM3-.LFBB1
  90               	.LM3:
  91 0004 17BA      		out 55-32,__zero_reg__
 121:main.c        **** 	PORTB=0x00;     //Habilito los puertos de B
  92               		.stabn	68,0,121,.LM4-.LFBB1
  93               	.LM4:
  94 0006 18BA      		out 56-32,__zero_reg__
 122:main.c        **** 
 123:main.c        **** 	DDRC=0xff;		//Defino Puerto C como Outputs
  95               		.stabn	68,0,123,.LM5-.LFBB1
  96               	.LM5:
  97 0008 8FEF      		ldi r24,lo8(-1)
  98 000a 84BB      		out 52-32,r24
 124:main.c        **** 	PORTC=0x00;     //Habilito los puertos de C
  99               		.stabn	68,0,124,.LM6-.LFBB1
 100               	.LM6:
 101 000c 15BA      		out 53-32,__zero_reg__
 125:main.c        **** 	DDRD = 0xff;    //Defino Puerto D como Outputs
 102               		.stabn	68,0,125,.LM7-.LFBB1
 103               	.LM7:
GAS LISTING /tmp/ccIBfZSu.s 			page 5


 104 000e 81BB      		out 49-32,r24
 126:main.c        **** 	PORTD=0x00;     //Habilito los puertos de D
 105               		.stabn	68,0,126,.LM8-.LFBB1
 106               	.LM8:
 107 0010 12BA      		out 50-32,__zero_reg__
 127:main.c        **** 
 128:main.c        **** 	ADCSRA = _BV(ADEN) | _BV(ADPS2) | _BV(ADPS1) | _BV(ADPS0); // Habilito preescaler para tener una b
 108               		.stabn	68,0,128,.LM9-.LFBB1
 109               	.LM9:
 110 0012 87E8      		ldi r24,lo8(-121)
 111 0014 86B9      		out 38-32,r24
 112               	/* epilogue start */
 129:main.c        **** 
 130:main.c        **** }
 113               		.stabn	68,0,130,.LM10-.LFBB1
 114               	.LM10:
 115 0016 0895      		ret
 116               		.size	init_ports, .-init_ports
 117               	.Lscope1:
 118               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 119               		.stabd	78,0,0
 120               		.stabs	"select_ADC_port:F(0,15)",36,0,137,select_ADC_port
 121               	.global	select_ADC_port
 122               		.type	select_ADC_port, @function
 123               	select_ADC_port:
 124               		.stabd	46,0,0
 131:main.c        **** //------------------------------------------------------//
 132:main.c        **** 
 133:main.c        **** 
 134:main.c        **** //------------------------------------------------------//
 135:main.c        **** //----------------Select_ADC_port-----------------------//
 136:main.c        **** //------------------------------------------------------//
 137:main.c        **** void select_ADC_port(int i){
 125               		.stabn	68,0,137,.LM11-.LFBB2
 126               	.LM11:
 127               	.LFBB2:
 128               	/* prologue: function */
 129               	/* frame size = 0 */
 130               	/* stack size = 0 */
 131               	.L__stack_usage = 0
 138:main.c        **** 	ADMUX = _BV(ADLAR) + i; // Selecciona un pin de las entradas analogas ADC[i]
 132               		.stabn	68,0,138,.LM12-.LFBB2
 133               	.LM12:
 134 0018 805E      		subi r24,lo8(-(32))
 135 001a 87B9      		out 39-32,r24
 139:main.c        **** 	ADCSRA |= _BV(ADSC); //Comienza conversion
 136               		.stabn	68,0,139,.LM13-.LFBB2
 137               	.LM13:
 138 001c 369A      		sbi 38-32,6
 139               	.L3:
 140:main.c        **** 	while (ADCSRA & _BV(ADSC) ) {}  // Esperar la conversion
 140               		.stabn	68,0,140,.LM14-.LFBB2
 141               	.LM14:
 142 001e 3699      		sbic 38-32,6
 143 0020 00C0      		rjmp .L3
 144               	/* epilogue start */
 141:main.c        **** 
GAS LISTING /tmp/ccIBfZSu.s 			page 6


 142:main.c        **** }
 145               		.stabn	68,0,142,.LM15-.LFBB2
 146               	.LM15:
 147 0022 0895      		ret
 148               		.size	select_ADC_port, .-select_ADC_port
 149               	.Lscope2:
 150               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 151               		.stabd	78,0,0
 152               		.stabs	"initial_anglexy:F(0,13)",36,0,149,initial_anglexy
 153               		.stabs	"ax:P(0,13)",64,0,149,22
 154               		.stabs	"ay:P(0,13)",64,0,149,18
 155               		.stabs	"az:P(0,13)",64,0,149,14
 156               	.global	initial_anglexy
 157               		.type	initial_anglexy, @function
 158               	initial_anglexy:
 159               		.stabd	46,0,0
 143:main.c        **** //------------------------------------------------------//
 144:main.c        **** 
 145:main.c        **** 
 146:main.c        **** //------------------------------------------------------//
 147:main.c        **** //----------------Initial_Angle_XY----------------------//
 148:main.c        **** //------------------------------------------------------//
 149:main.c        **** double initial_anglexy(double ax, double ay, double az){
 160               		.stabn	68,0,149,.LM16-.LFBB3
 161               	.LM16:
 162               	.LFBB3:
 163               	/* prologue: function */
 164               	/* frame size = 0 */
 165               	/* stack size = 0 */
 166               	.L__stack_usage = 0
 150:main.c        **** 	return atan(ax/ay)*(57.2958);
 167               		.stabn	68,0,150,.LM17-.LFBB3
 168               	.LM17:
 169 0024 0E94 0000 		call __divsf3
 170 0028 0E94 0000 		call atan
 171 002c 26EE      		ldi r18,lo8(0x42652ee6)
 172 002e 3EE2      		ldi r19,hi8(0x42652ee6)
 173 0030 45E6      		ldi r20,hlo8(0x42652ee6)
 174 0032 52E4      		ldi r21,hhi8(0x42652ee6)
 175 0034 0E94 0000 		call __mulsf3
 176               	/* epilogue start */
 151:main.c        **** }
 177               		.stabn	68,0,151,.LM18-.LFBB3
 178               	.LM18:
 179 0038 0895      		ret
 180               		.size	initial_anglexy, .-initial_anglexy
 181               	.Lscope3:
 182               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 183               		.stabd	78,0,0
 184               		.stabs	"initial_anglexz:F(0,13)",36,0,158,initial_anglexz
 185               		.stabs	"ax:P(0,13)",64,0,158,18
 186               		.stabs	"ay:P(0,13)",64,0,158,18
 187               		.stabs	"az:P(0,13)",64,0,158,22
 188               	.global	initial_anglexz
 189               		.type	initial_anglexz, @function
 190               	initial_anglexz:
 191               		.stabd	46,0,0
GAS LISTING /tmp/ccIBfZSu.s 			page 7


 152:main.c        **** //------------------------------------------------------//
 153:main.c        **** 
 154:main.c        **** 
 155:main.c        **** //------------------------------------------------------//
 156:main.c        **** //----------------Initial_Angle_XZ----------------------//
 157:main.c        **** //------------------------------------------------------//
 158:main.c        **** double initial_anglexz(double ax, double ay, double az){
 192               		.stabn	68,0,158,.LM19-.LFBB4
 193               	.LM19:
 194               	.LFBB4:
 195 003a EF92      		push r14
 196 003c FF92      		push r15
 197 003e 0F93      		push r16
 198 0040 1F93      		push r17
 199               	/* prologue: function */
 200               	/* frame size = 0 */
 201               	/* stack size = 4 */
 202               	.L__stack_usage = 4
 203 0042 9B01      		movw r18,r22
 204 0044 AC01      		movw r20,r24
 205 0046 C801      		movw r24,r16
 206 0048 B701      		movw r22,r14
 159:main.c        **** 	return atan(az/ax)*(57.2958);
 207               		.stabn	68,0,159,.LM20-.LFBB4
 208               	.LM20:
 209 004a 0E94 0000 		call __divsf3
 210 004e 0E94 0000 		call atan
 211 0052 26EE      		ldi r18,lo8(0x42652ee6)
 212 0054 3EE2      		ldi r19,hi8(0x42652ee6)
 213 0056 45E6      		ldi r20,hlo8(0x42652ee6)
 214 0058 52E4      		ldi r21,hhi8(0x42652ee6)
 215 005a 0E94 0000 		call __mulsf3
 216               	/* epilogue start */
 160:main.c        **** }
 217               		.stabn	68,0,160,.LM21-.LFBB4
 218               	.LM21:
 219 005e 1F91      		pop r17
 220 0060 0F91      		pop r16
 221 0062 FF90      		pop r15
 222 0064 EF90      		pop r14
 223 0066 0895      		ret
 224               		.size	initial_anglexz, .-initial_anglexz
 225               	.Lscope4:
 226               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 227               		.stabd	78,0,0
 228               		.stabs	"initial_angleyz:F(0,13)",36,0,167,initial_angleyz
 229               		.stabs	"ax:P(0,13)",64,0,167,22
 230               		.stabs	"ay:P(0,13)",64,0,167,22
 231               		.stabs	"az:P(0,13)",64,0,167,18
 232               	.global	initial_angleyz
 233               		.type	initial_angleyz, @function
 234               	initial_angleyz:
 235               		.stabd	46,0,0
 161:main.c        **** //------------------------------------------------------//
 162:main.c        **** 
 163:main.c        **** 
 164:main.c        **** //------------------------------------------------------//
GAS LISTING /tmp/ccIBfZSu.s 			page 8


 165:main.c        **** //----------------Initial_Angle_YZ----------------------//
 166:main.c        **** //------------------------------------------------------//
 167:main.c        **** double initial_angleyz(double ax, double ay, double az){
 236               		.stabn	68,0,167,.LM22-.LFBB5
 237               	.LM22:
 238               	.LFBB5:
 239 0068 EF92      		push r14
 240 006a FF92      		push r15
 241 006c 0F93      		push r16
 242 006e 1F93      		push r17
 243               	/* prologue: function */
 244               	/* frame size = 0 */
 245               	/* stack size = 4 */
 246               	.L__stack_usage = 4
 247 0070 CA01      		movw r24,r20
 248 0072 B901      		movw r22,r18
 249 0074 A801      		movw r20,r16
 250 0076 9701      		movw r18,r14
 168:main.c        **** 	return atan(ay/az)*(57.2958);
 251               		.stabn	68,0,168,.LM23-.LFBB5
 252               	.LM23:
 253 0078 0E94 0000 		call __divsf3
 254 007c 0E94 0000 		call atan
 255 0080 26EE      		ldi r18,lo8(0x42652ee6)
 256 0082 3EE2      		ldi r19,hi8(0x42652ee6)
 257 0084 45E6      		ldi r20,hlo8(0x42652ee6)
 258 0086 52E4      		ldi r21,hhi8(0x42652ee6)
 259 0088 0E94 0000 		call __mulsf3
 260               	/* epilogue start */
 169:main.c        **** }
 261               		.stabn	68,0,169,.LM24-.LFBB5
 262               	.LM24:
 263 008c 1F91      		pop r17
 264 008e 0F91      		pop r16
 265 0090 FF90      		pop r15
 266 0092 EF90      		pop r14
 267 0094 0895      		ret
 268               		.size	initial_angleyz, .-initial_angleyz
 269               	.Lscope5:
 270               		.stabs	"",36,0,0,.Lscope5-.LFBB5
 271               		.stabd	78,0,0
 272               		.stabs	"print_Angle_Binary:F(0,15)",36,0,175,print_Angle_Binary
 273               		.stabs	"NoPortCD:P(0,1)",64,0,175,24
 274               		.stabs	"angle:P(0,13)",64,0,175,14
 275               	.global	print_Angle_Binary
 276               		.type	print_Angle_Binary, @function
 277               	print_Angle_Binary:
 278               		.stabd	46,0,0
 170:main.c        **** //------------------------------------------------------//
 171:main.c        **** 
 172:main.c        **** //------------------------------------------------------//
 173:main.c        **** //----------------------Print Angle---------------------//
 174:main.c        **** //------------------------------------------------------//
 175:main.c        **** void print_Angle_Binary(int NoPortCD,double angle){
 279               		.stabn	68,0,175,.LM25-.LFBB6
 280               	.LM25:
 281               	.LFBB6:
GAS LISTING /tmp/ccIBfZSu.s 			page 9


 282 0096 EF92      		push r14
 283 0098 FF92      		push r15
 284 009a 0F93      		push r16
 285 009c 1F93      		push r17
 286               	/* prologue: function */
 287               	/* frame size = 0 */
 288               	/* stack size = 4 */
 289               	.L__stack_usage = 4
 290 009e 7A01      		movw r14,r20
 291 00a0 8B01      		movw r16,r22
 176:main.c        **** 
 177:main.c        **** 	double angle_segment_0=5;
 178:main.c        **** 	double angle_segment_1=10;
 179:main.c        **** 	double angle_segment_2=15;
 180:main.c        **** 	double angle_segment_3=20;
 181:main.c        **** 	double angle_segment_4=25;
 182:main.c        **** 	double angle_segment_5=30;
 183:main.c        **** 	double angle_segment_6=35;
 184:main.c        **** 	double angle_segment_7=40;
 185:main.c        **** 	double angle_segment_8=45;
 186:main.c        **** 	double angle_segment_9=50;
 187:main.c        **** 	double angle_segment_10=55;
 188:main.c        **** 	double angle_segment_11=60;
 189:main.c        **** 	double angle_segment_12=65;
 190:main.c        **** 	double angle_segment_13=70;
 191:main.c        **** 	double angle_segment_14=75;
 192:main.c        **** 	double angle_segment_15=80;
 193:main.c        **** 	double angle_segment_16=85;
 194:main.c        **** 	double angle_segment_17=90;
 195:main.c        **** 
 196:main.c        **** 
 197:main.c        **** 	if(angle>angle_segment_17){PORTD=0x05;}        //0000//-----//0000// = 00
 292               		.stabn	68,0,197,.LM26-.LFBB6
 293               	.LM26:
 294 00a2 CB01      		movw r24,r22
 295 00a4 BA01      		movw r22,r20
 296 00a6 20E0      		ldi r18,lo8(0x42b40000)
 297 00a8 30E0      		ldi r19,hi8(0x42b40000)
 298 00aa 44EB      		ldi r20,hlo8(0x42b40000)
 299 00ac 52E4      		ldi r21,hhi8(0x42b40000)
 300 00ae 0E94 0000 		call __gtsf2
 301 00b2 1816      		cp __zero_reg__,r24
 302 00b4 04F4      		brge .L64
 303               		.stabn	68,0,197,.LM27-.LFBB6
 304               	.LM27:
 305 00b6 85E0      		ldi r24,lo8(5)
 306 00b8 00C0      		rjmp .L82
 307               	.L64:
 198:main.c        **** 	else if(angle>angle_segment_16){PORTD=0x10;}   //0000//-----//0101// = 05
 308               		.stabn	68,0,198,.LM28-.LFBB6
 309               	.LM28:
 310 00ba C801      		movw r24,r16
 311 00bc B701      		movw r22,r14
 312 00be 20E0      		ldi r18,lo8(0x42aa0000)
 313 00c0 30E0      		ldi r19,hi8(0x42aa0000)
 314 00c2 4AEA      		ldi r20,hlo8(0x42aa0000)
 315 00c4 52E4      		ldi r21,hhi8(0x42aa0000)
GAS LISTING /tmp/ccIBfZSu.s 			page 10


 316 00c6 0E94 0000 		call __gtsf2
 317 00ca 1816      		cp __zero_reg__,r24
 318 00cc 04F4      		brge .L65
 319               		.stabn	68,0,198,.LM29-.LFBB6
 320               	.LM29:
 321 00ce 80E1      		ldi r24,lo8(16)
 322 00d0 00C0      		rjmp .L82
 323               	.L65:
 199:main.c        **** 	else if(angle>angle_segment_15){PORTD=0x15;}   //0001//-----//0000// = 10  
 324               		.stabn	68,0,199,.LM30-.LFBB6
 325               	.LM30:
 326 00d2 C801      		movw r24,r16
 327 00d4 B701      		movw r22,r14
 328 00d6 20E0      		ldi r18,lo8(0x42a00000)
 329 00d8 30E0      		ldi r19,hi8(0x42a00000)
 330 00da 40EA      		ldi r20,hlo8(0x42a00000)
 331 00dc 52E4      		ldi r21,hhi8(0x42a00000)
 332 00de 0E94 0000 		call __gtsf2
 333 00e2 1816      		cp __zero_reg__,r24
 334 00e4 04F4      		brge .L66
 335               		.stabn	68,0,199,.LM31-.LFBB6
 336               	.LM31:
 337 00e6 85E1      		ldi r24,lo8(21)
 338 00e8 00C0      		rjmp .L82
 339               	.L66:
 200:main.c        **** 	else if(angle>angle_segment_14){PORTD=0x20;}   //0001//-----//0101// = 15 
 340               		.stabn	68,0,200,.LM32-.LFBB6
 341               	.LM32:
 342 00ea C801      		movw r24,r16
 343 00ec B701      		movw r22,r14
 344 00ee 20E0      		ldi r18,lo8(0x42960000)
 345 00f0 30E0      		ldi r19,hi8(0x42960000)
 346 00f2 46E9      		ldi r20,hlo8(0x42960000)
 347 00f4 52E4      		ldi r21,hhi8(0x42960000)
 348 00f6 0E94 0000 		call __gtsf2
 349 00fa 1816      		cp __zero_reg__,r24
 350 00fc 04F4      		brge .L67
 351               		.stabn	68,0,200,.LM33-.LFBB6
 352               	.LM33:
 353 00fe 80E2      		ldi r24,lo8(32)
 354 0100 00C0      		rjmp .L82
 355               	.L67:
 201:main.c        **** 	else if(angle>angle_segment_13){PORTD=0x25;}   //0010//-----//0000// = 10  
 356               		.stabn	68,0,201,.LM34-.LFBB6
 357               	.LM34:
 358 0102 C801      		movw r24,r16
 359 0104 B701      		movw r22,r14
 360 0106 20E0      		ldi r18,lo8(0x428c0000)
 361 0108 30E0      		ldi r19,hi8(0x428c0000)
 362 010a 4CE8      		ldi r20,hlo8(0x428c0000)
 363 010c 52E4      		ldi r21,hhi8(0x428c0000)
 364 010e 0E94 0000 		call __gtsf2
 365 0112 1816      		cp __zero_reg__,r24
 366 0114 04F4      		brge .L68
 367               		.stabn	68,0,201,.LM35-.LFBB6
 368               	.LM35:
 369 0116 85E2      		ldi r24,lo8(37)
GAS LISTING /tmp/ccIBfZSu.s 			page 11


 370 0118 00C0      		rjmp .L82
 371               	.L68:
 202:main.c        **** 	else if(angle>angle_segment_12){PORTD=0x30;}   //0010//-----//0101// = 25  
 372               		.stabn	68,0,202,.LM36-.LFBB6
 373               	.LM36:
 374 011a C801      		movw r24,r16
 375 011c B701      		movw r22,r14
 376 011e 20E0      		ldi r18,lo8(0x42820000)
 377 0120 30E0      		ldi r19,hi8(0x42820000)
 378 0122 42E8      		ldi r20,hlo8(0x42820000)
 379 0124 52E4      		ldi r21,hhi8(0x42820000)
 380 0126 0E94 0000 		call __gtsf2
 381 012a 1816      		cp __zero_reg__,r24
 382 012c 04F4      		brge .L69
 383               		.stabn	68,0,202,.LM37-.LFBB6
 384               	.LM37:
 385 012e 80E3      		ldi r24,lo8(48)
 386 0130 00C0      		rjmp .L82
 387               	.L69:
 203:main.c        **** 	else if(angle>angle_segment_11){PORTD=0x35;}   //0011//-----//0000// = 30  
 388               		.stabn	68,0,203,.LM38-.LFBB6
 389               	.LM38:
 390 0132 C801      		movw r24,r16
 391 0134 B701      		movw r22,r14
 392 0136 20E0      		ldi r18,lo8(0x42700000)
 393 0138 30E0      		ldi r19,hi8(0x42700000)
 394 013a 40E7      		ldi r20,hlo8(0x42700000)
 395 013c 52E4      		ldi r21,hhi8(0x42700000)
 396 013e 0E94 0000 		call __gtsf2
 397 0142 1816      		cp __zero_reg__,r24
 398 0144 04F4      		brge .L70
 399               		.stabn	68,0,203,.LM39-.LFBB6
 400               	.LM39:
 401 0146 85E3      		ldi r24,lo8(53)
 402 0148 00C0      		rjmp .L82
 403               	.L70:
 204:main.c        **** 	else if(angle>angle_segment_10){PORTD=0x40;}   //0011//-----//0101// = 35 
 404               		.stabn	68,0,204,.LM40-.LFBB6
 405               	.LM40:
 406 014a C801      		movw r24,r16
 407 014c B701      		movw r22,r14
 408 014e 20E0      		ldi r18,lo8(0x425c0000)
 409 0150 30E0      		ldi r19,hi8(0x425c0000)
 410 0152 4CE5      		ldi r20,hlo8(0x425c0000)
 411 0154 52E4      		ldi r21,hhi8(0x425c0000)
 412 0156 0E94 0000 		call __gtsf2
 413 015a 1816      		cp __zero_reg__,r24
 414 015c 04F4      		brge .L71
 415               		.stabn	68,0,204,.LM41-.LFBB6
 416               	.LM41:
 417 015e 80E4      		ldi r24,lo8(64)
 418 0160 00C0      		rjmp .L82
 419               	.L71:
 205:main.c        **** 	else if(angle>angle_segment_9){PORTD=0x45;}    //0100//-----//0000// = 40  
 420               		.stabn	68,0,205,.LM42-.LFBB6
 421               	.LM42:
 422 0162 C801      		movw r24,r16
GAS LISTING /tmp/ccIBfZSu.s 			page 12


 423 0164 B701      		movw r22,r14
 424 0166 20E0      		ldi r18,lo8(0x42480000)
 425 0168 30E0      		ldi r19,hi8(0x42480000)
 426 016a 48E4      		ldi r20,hlo8(0x42480000)
 427 016c 52E4      		ldi r21,hhi8(0x42480000)
 428 016e 0E94 0000 		call __gtsf2
 429 0172 1816      		cp __zero_reg__,r24
 430 0174 04F4      		brge .L72
 431               		.stabn	68,0,205,.LM43-.LFBB6
 432               	.LM43:
 433 0176 85E4      		ldi r24,lo8(69)
 434 0178 00C0      		rjmp .L82
 435               	.L72:
 206:main.c        **** 	else if(angle>angle_segment_8){PORTD=0x50;}    //0100//-----//0101// = 45  
 436               		.stabn	68,0,206,.LM44-.LFBB6
 437               	.LM44:
 438 017a C801      		movw r24,r16
 439 017c B701      		movw r22,r14
 440 017e 20E0      		ldi r18,lo8(0x42340000)
 441 0180 30E0      		ldi r19,hi8(0x42340000)
 442 0182 44E3      		ldi r20,hlo8(0x42340000)
 443 0184 52E4      		ldi r21,hhi8(0x42340000)
 444 0186 0E94 0000 		call __gtsf2
 445 018a 1816      		cp __zero_reg__,r24
 446 018c 04F4      		brge .L73
 447               		.stabn	68,0,206,.LM45-.LFBB6
 448               	.LM45:
 449 018e 80E5      		ldi r24,lo8(80)
 450 0190 00C0      		rjmp .L82
 451               	.L73:
 207:main.c        **** 	else if(angle>angle_segment_7){PORTD=0x55;}    //0101//-----//0000// = 50   
 452               		.stabn	68,0,207,.LM46-.LFBB6
 453               	.LM46:
 454 0192 C801      		movw r24,r16
 455 0194 B701      		movw r22,r14
 456 0196 20E0      		ldi r18,lo8(0x42200000)
 457 0198 30E0      		ldi r19,hi8(0x42200000)
 458 019a 40E2      		ldi r20,hlo8(0x42200000)
 459 019c 52E4      		ldi r21,hhi8(0x42200000)
 460 019e 0E94 0000 		call __gtsf2
 461 01a2 1816      		cp __zero_reg__,r24
 462 01a4 04F4      		brge .L74
 463               		.stabn	68,0,207,.LM47-.LFBB6
 464               	.LM47:
 465 01a6 85E5      		ldi r24,lo8(85)
 466 01a8 00C0      		rjmp .L82
 467               	.L74:
 208:main.c        **** 	else if(angle>angle_segment_6){PORTD=0x60;}    //0101//-----//0101// = 55  
 468               		.stabn	68,0,208,.LM48-.LFBB6
 469               	.LM48:
 470 01aa C801      		movw r24,r16
 471 01ac B701      		movw r22,r14
 472 01ae 20E0      		ldi r18,lo8(0x420c0000)
 473 01b0 30E0      		ldi r19,hi8(0x420c0000)
 474 01b2 4CE0      		ldi r20,hlo8(0x420c0000)
 475 01b4 52E4      		ldi r21,hhi8(0x420c0000)
 476 01b6 0E94 0000 		call __gtsf2
GAS LISTING /tmp/ccIBfZSu.s 			page 13


 477 01ba 1816      		cp __zero_reg__,r24
 478 01bc 04F4      		brge .L75
 479               		.stabn	68,0,208,.LM49-.LFBB6
 480               	.LM49:
 481 01be 80E6      		ldi r24,lo8(96)
 482 01c0 00C0      		rjmp .L82
 483               	.L75:
 209:main.c        **** 	else if(angle>angle_segment_5){PORTD=0x65;}    //0110//-----//0000// = 60   
 484               		.stabn	68,0,209,.LM50-.LFBB6
 485               	.LM50:
 486 01c2 C801      		movw r24,r16
 487 01c4 B701      		movw r22,r14
 488 01c6 20E0      		ldi r18,lo8(0x41f00000)
 489 01c8 30E0      		ldi r19,hi8(0x41f00000)
 490 01ca 40EF      		ldi r20,hlo8(0x41f00000)
 491 01cc 51E4      		ldi r21,hhi8(0x41f00000)
 492 01ce 0E94 0000 		call __gtsf2
 493 01d2 1816      		cp __zero_reg__,r24
 494 01d4 04F4      		brge .L76
 495               		.stabn	68,0,209,.LM51-.LFBB6
 496               	.LM51:
 497 01d6 85E6      		ldi r24,lo8(101)
 498 01d8 00C0      		rjmp .L82
 499               	.L76:
 210:main.c        **** 	else if(angle>angle_segment_4){PORTD=0x70;}    //0110//-----//0101// = 65 
 500               		.stabn	68,0,210,.LM52-.LFBB6
 501               	.LM52:
 502 01da C801      		movw r24,r16
 503 01dc B701      		movw r22,r14
 504 01de 20E0      		ldi r18,lo8(0x41c80000)
 505 01e0 30E0      		ldi r19,hi8(0x41c80000)
 506 01e2 48EC      		ldi r20,hlo8(0x41c80000)
 507 01e4 51E4      		ldi r21,hhi8(0x41c80000)
 508 01e6 0E94 0000 		call __gtsf2
 509 01ea 1816      		cp __zero_reg__,r24
 510 01ec 04F4      		brge .L77
 511               		.stabn	68,0,210,.LM53-.LFBB6
 512               	.LM53:
 513 01ee 80E7      		ldi r24,lo8(112)
 514 01f0 00C0      		rjmp .L82
 515               	.L77:
 211:main.c        **** 	else if(angle>angle_segment_3){PORTD=0x75;}    //0111//-----//0000// = 70 
 516               		.stabn	68,0,211,.LM54-.LFBB6
 517               	.LM54:
 518 01f2 C801      		movw r24,r16
 519 01f4 B701      		movw r22,r14
 520 01f6 20E0      		ldi r18,lo8(0x41a00000)
 521 01f8 30E0      		ldi r19,hi8(0x41a00000)
 522 01fa 40EA      		ldi r20,hlo8(0x41a00000)
 523 01fc 51E4      		ldi r21,hhi8(0x41a00000)
 524 01fe 0E94 0000 		call __gtsf2
 525 0202 1816      		cp __zero_reg__,r24
 526 0204 04F4      		brge .L78
 527               		.stabn	68,0,211,.LM55-.LFBB6
 528               	.LM55:
 529 0206 85E7      		ldi r24,lo8(117)
 530 0208 00C0      		rjmp .L82
GAS LISTING /tmp/ccIBfZSu.s 			page 14


 531               	.L78:
 212:main.c        **** 	else if(angle>angle_segment_2){PORTD=0x80;}    //0111//-----//0101// = 75
 532               		.stabn	68,0,212,.LM56-.LFBB6
 533               	.LM56:
 534 020a C801      		movw r24,r16
 535 020c B701      		movw r22,r14
 536 020e 20E0      		ldi r18,lo8(0x41700000)
 537 0210 30E0      		ldi r19,hi8(0x41700000)
 538 0212 40E7      		ldi r20,hlo8(0x41700000)
 539 0214 51E4      		ldi r21,hhi8(0x41700000)
 540 0216 0E94 0000 		call __gtsf2
 541 021a 1816      		cp __zero_reg__,r24
 542 021c 04F4      		brge .L79
 543               		.stabn	68,0,212,.LM57-.LFBB6
 544               	.LM57:
 545 021e 80E8      		ldi r24,lo8(-128)
 546 0220 00C0      		rjmp .L82
 547               	.L79:
 213:main.c        **** 	else if(angle>angle_segment_1){PORTD=0x85;}    //1000//-----//0000// = 80 
 548               		.stabn	68,0,213,.LM58-.LFBB6
 549               	.LM58:
 550 0222 C801      		movw r24,r16
 551 0224 B701      		movw r22,r14
 552 0226 20E0      		ldi r18,lo8(0x41200000)
 553 0228 30E0      		ldi r19,hi8(0x41200000)
 554 022a 40E2      		ldi r20,hlo8(0x41200000)
 555 022c 51E4      		ldi r21,hhi8(0x41200000)
 556 022e 0E94 0000 		call __gtsf2
 557 0232 1816      		cp __zero_reg__,r24
 558 0234 04F4      		brge .L80
 559               		.stabn	68,0,213,.LM59-.LFBB6
 560               	.LM59:
 561 0236 85E8      		ldi r24,lo8(-123)
 562 0238 00C0      		rjmp .L82
 563               	.L80:
 214:main.c        **** 	else if(angle>angle_segment_0){PORTD=0x90;}    //1000//-----//0101// = 85  
 564               		.stabn	68,0,214,.LM60-.LFBB6
 565               	.LM60:
 566 023a C801      		movw r24,r16
 567 023c B701      		movw r22,r14
 568 023e 20E0      		ldi r18,lo8(0x40a00000)
 569 0240 30E0      		ldi r19,hi8(0x40a00000)
 570 0242 40EA      		ldi r20,hlo8(0x40a00000)
 571 0244 50E4      		ldi r21,hhi8(0x40a00000)
 572 0246 0E94 0000 		call __gtsf2
 573 024a 1816      		cp __zero_reg__,r24
 574 024c 04F4      		brge .L81
 575               		.stabn	68,0,214,.LM61-.LFBB6
 576               	.LM61:
 577 024e 80E9      		ldi r24,lo8(-112)
 578               	.L82:
 579 0250 82BB      		out 50-32,r24
 580 0252 00C0      		rjmp .L8
 581               	.L81:
 215:main.c        **** 	else {PORTD=0x00;}  
 582               		.stabn	68,0,215,.LM62-.LFBB6
 583               	.LM62:
GAS LISTING /tmp/ccIBfZSu.s 			page 15


 584 0254 12BA      		out 50-32,__zero_reg__
 585               	.L8:
 586               	/* epilogue start */
 216:main.c        **** }
 587               		.stabn	68,0,216,.LM63-.LFBB6
 588               	.LM63:
 589 0256 1F91      		pop r17
 590 0258 0F91      		pop r16
 591 025a FF90      		pop r15
 592 025c EF90      		pop r14
 593 025e 0895      		ret
 594               		.size	print_Angle_Binary, .-print_Angle_Binary
 595               	.Lscope6:
 596               		.stabs	"",36,0,0,.Lscope6-.LFBB6
 597               		.stabd	78,0,0
 598               		.stabs	"print_Decimes:F(0,15)",36,0,221,print_Decimes
 599               	.global	print_Decimes
 600               		.type	print_Decimes, @function
 601               	print_Decimes:
 602               		.stabd	46,0,0
 217:main.c        **** //------------------------------------------------------//
 218:main.c        **** 
 219:main.c        **** //-------------------Print Distance---------------------//
 220:main.c        **** 
 221:main.c        **** void print_Decimes(float num_in){
 603               		.stabn	68,0,221,.LM64-.LFBB7
 604               	.LM64:
 605               	.LFBB7:
 606 0260 DF92      		push r13
 607 0262 EF92      		push r14
 608 0264 FF92      		push r15
 609 0266 0F93      		push r16
 610 0268 1F93      		push r17
 611               	/* prologue: function */
 612               	/* frame size = 0 */
 613               	/* stack size = 5 */
 614               	.L__stack_usage = 5
 615 026a 7B01      		movw r14,r22
 616 026c 8C01      		movw r16,r24
 222:main.c        **** 
 223:main.c        **** double num0=0.0;
 224:main.c        **** 
 225:main.c        **** double num=0.0;
 226:main.c        **** 
 227:main.c        **** 	num=num_in;
 228:main.c        **** 
 229:main.c        **** char decimas=0x00;
 230:main.c        **** 
 231:main.c        **** 	if(num>=90){decimas=0x90;num0=num-90;}
 617               		.stabn	68,0,231,.LM65-.LFBB7
 618               	.LM65:
 619 026e 7F2D      		mov r23,r15
 620 0270 912F      		mov r25,r17
 621 0272 20E0      		ldi r18,lo8(0x42b40000)
 622 0274 30E0      		ldi r19,hi8(0x42b40000)
 623 0276 44EB      		ldi r20,hlo8(0x42b40000)
 624 0278 52E4      		ldi r21,hhi8(0x42b40000)
GAS LISTING /tmp/ccIBfZSu.s 			page 16


 625 027a 0E94 0000 		call __gesf2
 626 027e 87FD      		sbrc r24,7
 627 0280 00C0      		rjmp .L143
 628               		.stabn	68,0,231,.LM66-.LFBB7
 629               	.LM66:
 630 0282 6E2D      		mov r22,r14
 631 0284 7F2D      		mov r23,r15
 632 0286 802F      		mov r24,r16
 633 0288 912F      		mov r25,r17
 634 028a 20E0      		ldi r18,lo8(0x42b40000)
 635 028c 30E0      		ldi r19,hi8(0x42b40000)
 636 028e 44EB      		ldi r20,hlo8(0x42b40000)
 637 0290 52E4      		ldi r21,hhi8(0x42b40000)
 638 0292 0E94 0000 		call __subsf3
 639 0296 7B01      		movw r14,r22
 640 0298 8C01      		movw r16,r24
 641 029a E0E9      		ldi r30,lo8(-112)
 642 029c DE2E      		mov r13,r30
 643 029e 00C0      		rjmp .L86
 644               	.L143:
 232:main.c        **** 	else if(num>=80){decimas=0x80;num0=num-80;}
 645               		.stabn	68,0,232,.LM67-.LFBB7
 646               	.LM67:
 647 02a0 6E2D      		mov r22,r14
 648 02a2 7F2D      		mov r23,r15
 649 02a4 802F      		mov r24,r16
 650 02a6 912F      		mov r25,r17
 651 02a8 20E0      		ldi r18,lo8(0x42a00000)
 652 02aa 30E0      		ldi r19,hi8(0x42a00000)
 653 02ac 40EA      		ldi r20,hlo8(0x42a00000)
 654 02ae 52E4      		ldi r21,hhi8(0x42a00000)
 655 02b0 0E94 0000 		call __gesf2
 656 02b4 87FD      		sbrc r24,7
 657 02b6 00C0      		rjmp .L144
 658               		.stabn	68,0,232,.LM68-.LFBB7
 659               	.LM68:
 660 02b8 6E2D      		mov r22,r14
 661 02ba 7F2D      		mov r23,r15
 662 02bc 802F      		mov r24,r16
 663 02be 912F      		mov r25,r17
 664 02c0 20E0      		ldi r18,lo8(0x42a00000)
 665 02c2 30E0      		ldi r19,hi8(0x42a00000)
 666 02c4 40EA      		ldi r20,hlo8(0x42a00000)
 667 02c6 52E4      		ldi r21,hhi8(0x42a00000)
 668 02c8 0E94 0000 		call __subsf3
 669 02cc 7B01      		movw r14,r22
 670 02ce 8C01      		movw r16,r24
 671 02d0 70E8      		ldi r23,lo8(-128)
 672 02d2 D72E      		mov r13,r23
 673 02d4 00C0      		rjmp .L86
 674               	.L144:
 233:main.c        **** 	else if(num>=70){decimas=0x70;num0=num-70;}
 675               		.stabn	68,0,233,.LM69-.LFBB7
 676               	.LM69:
 677 02d6 6E2D      		mov r22,r14
 678 02d8 7F2D      		mov r23,r15
 679 02da 802F      		mov r24,r16
GAS LISTING /tmp/ccIBfZSu.s 			page 17


 680 02dc 912F      		mov r25,r17
 681 02de 20E0      		ldi r18,lo8(0x428c0000)
 682 02e0 30E0      		ldi r19,hi8(0x428c0000)
 683 02e2 4CE8      		ldi r20,hlo8(0x428c0000)
 684 02e4 52E4      		ldi r21,hhi8(0x428c0000)
 685 02e6 0E94 0000 		call __gesf2
 686 02ea 87FD      		sbrc r24,7
 687 02ec 00C0      		rjmp .L145
 688               		.stabn	68,0,233,.LM70-.LFBB7
 689               	.LM70:
 690 02ee 6E2D      		mov r22,r14
 691 02f0 7F2D      		mov r23,r15
 692 02f2 802F      		mov r24,r16
 693 02f4 912F      		mov r25,r17
 694 02f6 20E0      		ldi r18,lo8(0x428c0000)
 695 02f8 30E0      		ldi r19,hi8(0x428c0000)
 696 02fa 4CE8      		ldi r20,hlo8(0x428c0000)
 697 02fc 52E4      		ldi r21,hhi8(0x428c0000)
 698 02fe 0E94 0000 		call __subsf3
 699 0302 7B01      		movw r14,r22
 700 0304 8C01      		movw r16,r24
 701 0306 60E7      		ldi r22,lo8(112)
 702 0308 D62E      		mov r13,r22
 703 030a 00C0      		rjmp .L86
 704               	.L145:
 234:main.c        **** 	else if(num>=60){decimas=0x60;num0=num-60;}
 705               		.stabn	68,0,234,.LM71-.LFBB7
 706               	.LM71:
 707 030c 6E2D      		mov r22,r14
 708 030e 7F2D      		mov r23,r15
 709 0310 802F      		mov r24,r16
 710 0312 912F      		mov r25,r17
 711 0314 20E0      		ldi r18,lo8(0x42700000)
 712 0316 30E0      		ldi r19,hi8(0x42700000)
 713 0318 40E7      		ldi r20,hlo8(0x42700000)
 714 031a 52E4      		ldi r21,hhi8(0x42700000)
 715 031c 0E94 0000 		call __gesf2
 716 0320 87FD      		sbrc r24,7
 717 0322 00C0      		rjmp .L146
 718               		.stabn	68,0,234,.LM72-.LFBB7
 719               	.LM72:
 720 0324 6E2D      		mov r22,r14
 721 0326 7F2D      		mov r23,r15
 722 0328 802F      		mov r24,r16
 723 032a 912F      		mov r25,r17
 724 032c 20E0      		ldi r18,lo8(0x42700000)
 725 032e 30E0      		ldi r19,hi8(0x42700000)
 726 0330 40E7      		ldi r20,hlo8(0x42700000)
 727 0332 52E4      		ldi r21,hhi8(0x42700000)
 728 0334 0E94 0000 		call __subsf3
 729 0338 7B01      		movw r14,r22
 730 033a 8C01      		movw r16,r24
 731 033c 50E6      		ldi r21,lo8(96)
 732 033e D52E      		mov r13,r21
 733 0340 00C0      		rjmp .L86
 734               	.L146:
 235:main.c        **** 	else if(num>=50){decimas=0x50;num0=num-50;}
GAS LISTING /tmp/ccIBfZSu.s 			page 18


 735               		.stabn	68,0,235,.LM73-.LFBB7
 736               	.LM73:
 737 0342 6E2D      		mov r22,r14
 738 0344 7F2D      		mov r23,r15
 739 0346 802F      		mov r24,r16
 740 0348 912F      		mov r25,r17
 741 034a 20E0      		ldi r18,lo8(0x42480000)
 742 034c 30E0      		ldi r19,hi8(0x42480000)
 743 034e 48E4      		ldi r20,hlo8(0x42480000)
 744 0350 52E4      		ldi r21,hhi8(0x42480000)
 745 0352 0E94 0000 		call __gesf2
 746 0356 87FD      		sbrc r24,7
 747 0358 00C0      		rjmp .L147
 748               		.stabn	68,0,235,.LM74-.LFBB7
 749               	.LM74:
 750 035a 6E2D      		mov r22,r14
 751 035c 7F2D      		mov r23,r15
 752 035e 802F      		mov r24,r16
 753 0360 912F      		mov r25,r17
 754 0362 20E0      		ldi r18,lo8(0x42480000)
 755 0364 30E0      		ldi r19,hi8(0x42480000)
 756 0366 48E4      		ldi r20,hlo8(0x42480000)
 757 0368 52E4      		ldi r21,hhi8(0x42480000)
 758 036a 0E94 0000 		call __subsf3
 759 036e 7B01      		movw r14,r22
 760 0370 8C01      		movw r16,r24
 761 0372 40E5      		ldi r20,lo8(80)
 762 0374 D42E      		mov r13,r20
 763 0376 00C0      		rjmp .L86
 764               	.L147:
 236:main.c        **** 	else if(num>=40){decimas=0x40;num0=num-40;}
 765               		.stabn	68,0,236,.LM75-.LFBB7
 766               	.LM75:
 767 0378 6E2D      		mov r22,r14
 768 037a 7F2D      		mov r23,r15
 769 037c 802F      		mov r24,r16
 770 037e 912F      		mov r25,r17
 771 0380 20E0      		ldi r18,lo8(0x42200000)
 772 0382 30E0      		ldi r19,hi8(0x42200000)
 773 0384 40E2      		ldi r20,hlo8(0x42200000)
 774 0386 52E4      		ldi r21,hhi8(0x42200000)
 775 0388 0E94 0000 		call __gesf2
 776 038c 87FD      		sbrc r24,7
 777 038e 00C0      		rjmp .L148
 778               		.stabn	68,0,236,.LM76-.LFBB7
 779               	.LM76:
 780 0390 6E2D      		mov r22,r14
 781 0392 7F2D      		mov r23,r15
 782 0394 802F      		mov r24,r16
 783 0396 912F      		mov r25,r17
 784 0398 20E0      		ldi r18,lo8(0x42200000)
 785 039a 30E0      		ldi r19,hi8(0x42200000)
 786 039c 40E2      		ldi r20,hlo8(0x42200000)
 787 039e 52E4      		ldi r21,hhi8(0x42200000)
 788 03a0 0E94 0000 		call __subsf3
 789 03a4 7B01      		movw r14,r22
 790 03a6 8C01      		movw r16,r24
GAS LISTING /tmp/ccIBfZSu.s 			page 19


 791 03a8 30E4      		ldi r19,lo8(64)
 792 03aa D32E      		mov r13,r19
 793 03ac 00C0      		rjmp .L86
 794               	.L148:
 237:main.c        **** 	else if(num>=30){decimas=0x30;num0=num-30;}
 795               		.stabn	68,0,237,.LM77-.LFBB7
 796               	.LM77:
 797 03ae 6E2D      		mov r22,r14
 798 03b0 7F2D      		mov r23,r15
 799 03b2 802F      		mov r24,r16
 800 03b4 912F      		mov r25,r17
 801 03b6 20E0      		ldi r18,lo8(0x41f00000)
 802 03b8 30E0      		ldi r19,hi8(0x41f00000)
 803 03ba 40EF      		ldi r20,hlo8(0x41f00000)
 804 03bc 51E4      		ldi r21,hhi8(0x41f00000)
 805 03be 0E94 0000 		call __gesf2
 806 03c2 87FD      		sbrc r24,7
 807 03c4 00C0      		rjmp .L149
 808               		.stabn	68,0,237,.LM78-.LFBB7
 809               	.LM78:
 810 03c6 6E2D      		mov r22,r14
 811 03c8 7F2D      		mov r23,r15
 812 03ca 802F      		mov r24,r16
 813 03cc 912F      		mov r25,r17
 814 03ce 20E0      		ldi r18,lo8(0x41f00000)
 815 03d0 30E0      		ldi r19,hi8(0x41f00000)
 816 03d2 40EF      		ldi r20,hlo8(0x41f00000)
 817 03d4 51E4      		ldi r21,hhi8(0x41f00000)
 818 03d6 0E94 0000 		call __subsf3
 819 03da 7B01      		movw r14,r22
 820 03dc 8C01      		movw r16,r24
 821 03de 20E3      		ldi r18,lo8(48)
 822 03e0 D22E      		mov r13,r18
 823 03e2 00C0      		rjmp .L86
 824               	.L149:
 238:main.c        **** 	else if(num>=20){decimas=0x20;num0=num-20;}
 825               		.stabn	68,0,238,.LM79-.LFBB7
 826               	.LM79:
 827 03e4 6E2D      		mov r22,r14
 828 03e6 7F2D      		mov r23,r15
 829 03e8 802F      		mov r24,r16
 830 03ea 912F      		mov r25,r17
 831 03ec 20E0      		ldi r18,lo8(0x41a00000)
 832 03ee 30E0      		ldi r19,hi8(0x41a00000)
 833 03f0 40EA      		ldi r20,hlo8(0x41a00000)
 834 03f2 51E4      		ldi r21,hhi8(0x41a00000)
 835 03f4 0E94 0000 		call __gesf2
 836 03f8 87FD      		sbrc r24,7
 837 03fa 00C0      		rjmp .L150
 838               		.stabn	68,0,238,.LM80-.LFBB7
 839               	.LM80:
 840 03fc 6E2D      		mov r22,r14
 841 03fe 7F2D      		mov r23,r15
 842 0400 802F      		mov r24,r16
 843 0402 912F      		mov r25,r17
 844 0404 20E0      		ldi r18,lo8(0x41a00000)
 845 0406 30E0      		ldi r19,hi8(0x41a00000)
GAS LISTING /tmp/ccIBfZSu.s 			page 20


 846 0408 40EA      		ldi r20,hlo8(0x41a00000)
 847 040a 51E4      		ldi r21,hhi8(0x41a00000)
 848 040c 0E94 0000 		call __subsf3
 849 0410 7B01      		movw r14,r22
 850 0412 8C01      		movw r16,r24
 851 0414 90E2      		ldi r25,lo8(32)
 852 0416 D92E      		mov r13,r25
 853 0418 00C0      		rjmp .L86
 854               	.L150:
 239:main.c        **** 	else if(num>=10){decimas=0x10;num0=num-10;}
 855               		.stabn	68,0,239,.LM81-.LFBB7
 856               	.LM81:
 857 041a 6E2D      		mov r22,r14
 858 041c 7F2D      		mov r23,r15
 859 041e 802F      		mov r24,r16
 860 0420 912F      		mov r25,r17
 861 0422 20E0      		ldi r18,lo8(0x41200000)
 862 0424 30E0      		ldi r19,hi8(0x41200000)
 863 0426 40E2      		ldi r20,hlo8(0x41200000)
 864 0428 51E4      		ldi r21,hhi8(0x41200000)
 865 042a 0E94 0000 		call __gesf2
 866 042e 87FD      		sbrc r24,7
 867 0430 00C0      		rjmp .L151
 868               		.stabn	68,0,239,.LM82-.LFBB7
 869               	.LM82:
 870 0432 6E2D      		mov r22,r14
 871 0434 7F2D      		mov r23,r15
 872 0436 802F      		mov r24,r16
 873 0438 912F      		mov r25,r17
 874 043a 20E0      		ldi r18,lo8(0x41200000)
 875 043c 30E0      		ldi r19,hi8(0x41200000)
 876 043e 40E2      		ldi r20,hlo8(0x41200000)
 877 0440 51E4      		ldi r21,hhi8(0x41200000)
 878 0442 0E94 0000 		call __subsf3
 879 0446 7B01      		movw r14,r22
 880 0448 8C01      		movw r16,r24
 881 044a 80E1      		ldi r24,lo8(16)
 882 044c D82E      		mov r13,r24
 883 044e 00C0      		rjmp .L86
 884               	.L151:
 240:main.c        **** 	else {decimas=0x00; num0=num;}
 885               		.stabn	68,0,240,.LM83-.LFBB7
 886               	.LM83:
 887 0450 DD24      		clr r13
 888               	.L86:
 241:main.c        **** 
 242:main.c        **** 
 243:main.c        **** 	if(num0>=9){PORTD=decimas+0x09;}
 889               		.stabn	68,0,243,.LM84-.LFBB7
 890               	.LM84:
 891 0452 6E2D      		mov r22,r14
 892 0454 7F2D      		mov r23,r15
 893 0456 802F      		mov r24,r16
 894 0458 912F      		mov r25,r17
 895 045a 20E0      		ldi r18,lo8(0x41100000)
 896 045c 30E0      		ldi r19,hi8(0x41100000)
 897 045e 40E1      		ldi r20,hlo8(0x41100000)
GAS LISTING /tmp/ccIBfZSu.s 			page 21


 898 0460 51E4      		ldi r21,hhi8(0x41100000)
 899 0462 0E94 0000 		call __gesf2
 900 0466 87FD      		sbrc r24,7
 901 0468 00C0      		rjmp .L152
 902               		.stabn	68,0,243,.LM85-.LFBB7
 903               	.LM85:
 904 046a 8D2D      		mov r24,r13
 905 046c 875F      		subi r24,lo8(-(9))
 906 046e 00C0      		rjmp .L163
 907               	.L152:
 244:main.c        **** 	else if(num0>=8){PORTD=decimas+0x08;}
 908               		.stabn	68,0,244,.LM86-.LFBB7
 909               	.LM86:
 910 0470 6E2D      		mov r22,r14
 911 0472 7F2D      		mov r23,r15
 912 0474 802F      		mov r24,r16
 913 0476 912F      		mov r25,r17
 914 0478 20E0      		ldi r18,lo8(0x41000000)
 915 047a 30E0      		ldi r19,hi8(0x41000000)
 916 047c 40E0      		ldi r20,hlo8(0x41000000)
 917 047e 51E4      		ldi r21,hhi8(0x41000000)
 918 0480 0E94 0000 		call __gesf2
 919 0484 87FD      		sbrc r24,7
 920 0486 00C0      		rjmp .L153
 921               		.stabn	68,0,244,.LM87-.LFBB7
 922               	.LM87:
 923 0488 8D2D      		mov r24,r13
 924 048a 885F      		subi r24,lo8(-(8))
 925 048c 00C0      		rjmp .L163
 926               	.L153:
 245:main.c        **** 	else if(num0>=7){PORTD=decimas+0x07;}
 927               		.stabn	68,0,245,.LM88-.LFBB7
 928               	.LM88:
 929 048e 6E2D      		mov r22,r14
 930 0490 7F2D      		mov r23,r15
 931 0492 802F      		mov r24,r16
 932 0494 912F      		mov r25,r17
 933 0496 20E0      		ldi r18,lo8(0x40e00000)
 934 0498 30E0      		ldi r19,hi8(0x40e00000)
 935 049a 40EE      		ldi r20,hlo8(0x40e00000)
 936 049c 50E4      		ldi r21,hhi8(0x40e00000)
 937 049e 0E94 0000 		call __gesf2
 938 04a2 87FD      		sbrc r24,7
 939 04a4 00C0      		rjmp .L154
 940               		.stabn	68,0,245,.LM89-.LFBB7
 941               	.LM89:
 942 04a6 8D2D      		mov r24,r13
 943 04a8 895F      		subi r24,lo8(-(7))
 944 04aa 00C0      		rjmp .L163
 945               	.L154:
 246:main.c        **** 	else if(num0>=6){PORTD=decimas+0x06;}
 946               		.stabn	68,0,246,.LM90-.LFBB7
 947               	.LM90:
 948 04ac 6E2D      		mov r22,r14
 949 04ae 7F2D      		mov r23,r15
 950 04b0 802F      		mov r24,r16
 951 04b2 912F      		mov r25,r17
GAS LISTING /tmp/ccIBfZSu.s 			page 22


 952 04b4 20E0      		ldi r18,lo8(0x40c00000)
 953 04b6 30E0      		ldi r19,hi8(0x40c00000)
 954 04b8 40EC      		ldi r20,hlo8(0x40c00000)
 955 04ba 50E4      		ldi r21,hhi8(0x40c00000)
 956 04bc 0E94 0000 		call __gesf2
 957 04c0 87FD      		sbrc r24,7
 958 04c2 00C0      		rjmp .L155
 959               		.stabn	68,0,246,.LM91-.LFBB7
 960               	.LM91:
 961 04c4 8D2D      		mov r24,r13
 962 04c6 8A5F      		subi r24,lo8(-(6))
 963 04c8 00C0      		rjmp .L163
 964               	.L155:
 247:main.c        **** 	else if(num0>=5){PORTD=decimas+0x05;}
 965               		.stabn	68,0,247,.LM92-.LFBB7
 966               	.LM92:
 967 04ca 6E2D      		mov r22,r14
 968 04cc 7F2D      		mov r23,r15
 969 04ce 802F      		mov r24,r16
 970 04d0 912F      		mov r25,r17
 971 04d2 20E0      		ldi r18,lo8(0x40a00000)
 972 04d4 30E0      		ldi r19,hi8(0x40a00000)
 973 04d6 40EA      		ldi r20,hlo8(0x40a00000)
 974 04d8 50E4      		ldi r21,hhi8(0x40a00000)
 975 04da 0E94 0000 		call __gesf2
 976 04de 87FD      		sbrc r24,7
 977 04e0 00C0      		rjmp .L156
 978               		.stabn	68,0,247,.LM93-.LFBB7
 979               	.LM93:
 980 04e2 8D2D      		mov r24,r13
 981 04e4 8B5F      		subi r24,lo8(-(5))
 982 04e6 00C0      		rjmp .L163
 983               	.L156:
 248:main.c        **** 	else if(num0>=4){PORTD=decimas+0x04;}
 984               		.stabn	68,0,248,.LM94-.LFBB7
 985               	.LM94:
 986 04e8 6E2D      		mov r22,r14
 987 04ea 7F2D      		mov r23,r15
 988 04ec 802F      		mov r24,r16
 989 04ee 912F      		mov r25,r17
 990 04f0 20E0      		ldi r18,lo8(0x40800000)
 991 04f2 30E0      		ldi r19,hi8(0x40800000)
 992 04f4 40E8      		ldi r20,hlo8(0x40800000)
 993 04f6 50E4      		ldi r21,hhi8(0x40800000)
 994 04f8 0E94 0000 		call __gesf2
 995 04fc 87FD      		sbrc r24,7
 996 04fe 00C0      		rjmp .L157
 997               		.stabn	68,0,248,.LM95-.LFBB7
 998               	.LM95:
 999 0500 8D2D      		mov r24,r13
 1000 0502 8C5F      		subi r24,lo8(-(4))
 1001 0504 00C0      		rjmp .L163
 1002               	.L157:
 249:main.c        **** 	else if(num0>=3){PORTD=decimas+0x03;}
 1003               		.stabn	68,0,249,.LM96-.LFBB7
 1004               	.LM96:
 1005 0506 6E2D      		mov r22,r14
GAS LISTING /tmp/ccIBfZSu.s 			page 23


 1006 0508 7F2D      		mov r23,r15
 1007 050a 802F      		mov r24,r16
 1008 050c 912F      		mov r25,r17
 1009 050e 20E0      		ldi r18,lo8(0x40400000)
 1010 0510 30E0      		ldi r19,hi8(0x40400000)
 1011 0512 40E4      		ldi r20,hlo8(0x40400000)
 1012 0514 50E4      		ldi r21,hhi8(0x40400000)
 1013 0516 0E94 0000 		call __gesf2
 1014 051a 87FD      		sbrc r24,7
 1015 051c 00C0      		rjmp .L158
 1016               		.stabn	68,0,249,.LM97-.LFBB7
 1017               	.LM97:
 1018 051e 8D2D      		mov r24,r13
 1019 0520 8D5F      		subi r24,lo8(-(3))
 1020 0522 00C0      		rjmp .L163
 1021               	.L158:
 250:main.c        **** 	else if(num0>=2){PORTD=decimas+0x02;}
 1022               		.stabn	68,0,250,.LM98-.LFBB7
 1023               	.LM98:
 1024 0524 6E2D      		mov r22,r14
 1025 0526 7F2D      		mov r23,r15
 1026 0528 802F      		mov r24,r16
 1027 052a 912F      		mov r25,r17
 1028 052c 20E0      		ldi r18,lo8(0x40000000)
 1029 052e 30E0      		ldi r19,hi8(0x40000000)
 1030 0530 40E0      		ldi r20,hlo8(0x40000000)
 1031 0532 50E4      		ldi r21,hhi8(0x40000000)
 1032 0534 0E94 0000 		call __gesf2
 1033 0538 87FD      		sbrc r24,7
 1034 053a 00C0      		rjmp .L159
 1035               		.stabn	68,0,250,.LM99-.LFBB7
 1036               	.LM99:
 1037 053c 8D2D      		mov r24,r13
 1038 053e 8E5F      		subi r24,lo8(-(2))
 1039 0540 00C0      		rjmp .L163
 1040               	.L159:
 251:main.c        **** 	else if(num0>=1){PORTD=decimas+0x01;}
 1041               		.stabn	68,0,251,.LM100-.LFBB7
 1042               	.LM100:
 1043 0542 6E2D      		mov r22,r14
 1044 0544 7F2D      		mov r23,r15
 1045 0546 802F      		mov r24,r16
 1046 0548 912F      		mov r25,r17
 1047 054a 20E0      		ldi r18,lo8(0x3f800000)
 1048 054c 30E0      		ldi r19,hi8(0x3f800000)
 1049 054e 40E8      		ldi r20,hlo8(0x3f800000)
 1050 0550 5FE3      		ldi r21,hhi8(0x3f800000)
 1051 0552 0E94 0000 		call __gesf2
 1052 0556 87FD      		sbrc r24,7
 1053 0558 00C0      		rjmp .L160
 1054               		.stabn	68,0,251,.LM101-.LFBB7
 1055               	.LM101:
 1056 055a D394      		inc r13
 1057 055c 00C0      		rjmp .L162
 1058               	.L160:
 252:main.c        **** 	else if(num0>=0){PORTD=decimas+0x00;}
 1059               		.stabn	68,0,252,.LM102-.LFBB7
GAS LISTING /tmp/ccIBfZSu.s 			page 24


 1060               	.LM102:
 1061 055e 6E2D      		mov r22,r14
 1062 0560 7F2D      		mov r23,r15
 1063 0562 802F      		mov r24,r16
 1064 0564 912F      		mov r25,r17
 1065 0566 20E0      		ldi r18,lo8(0x0)
 1066 0568 30E0      		ldi r19,hi8(0x0)
 1067 056a A901      		movw r20,r18
 1068 056c 0E94 0000 		call __gesf2
 1069 0570 87FD      		sbrc r24,7
 1070 0572 00C0      		rjmp .L161
 1071               	.L162:
 1072               		.stabn	68,0,252,.LM103-.LFBB7
 1073               	.LM103:
 1074 0574 D2BA      		out 50-32,r13
 1075 0576 00C0      		rjmp .L83
 1076               	.L161:
 253:main.c        **** 	else {PORTD=0xAA;}
 1077               		.stabn	68,0,253,.LM104-.LFBB7
 1078               	.LM104:
 1079 0578 8AEA      		ldi r24,lo8(-86)
 1080               	.L163:
 1081 057a 82BB      		out 50-32,r24
 1082               	.L83:
 1083               	/* epilogue start */
 254:main.c        **** 
 255:main.c        **** }
 1084               		.stabn	68,0,255,.LM105-.LFBB7
 1085               	.LM105:
 1086 057c 1F91      		pop r17
 1087 057e 0F91      		pop r16
 1088 0580 FF90      		pop r15
 1089 0582 EF90      		pop r14
 1090 0584 DF90      		pop r13
 1091 0586 0895      		ret
 1092               		.size	print_Decimes, .-print_Decimes
 1093               		.stabs	"decimas:r(0,2)",64,0,229,13
 1094               		.stabn	192,0,0,.LFBB7-.LFBB7
 1095               		.stabn	224,0,0,.Lscope7-.LFBB7
 1096               	.Lscope7:
 1097               		.stabs	"",36,0,0,.Lscope7-.LFBB7
 1098               		.stabd	78,0,0
 1099               		.stabs	"print_Time_Binary:F(0,15)",36,0,281,print_Time_Binary
 1100               		.stabs	"time:P(0,1)",64,0,281,24
 1101               	.global	print_Time_Binary
 1102               		.type	print_Time_Binary, @function
 1103               	print_Time_Binary:
 1104               		.stabd	46,0,0
 256:main.c        **** 
 257:main.c        **** 
 258:main.c        **** /*
 259:main.c        **** void print_Units(double num_in, char decimas){
 260:main.c        **** 
 261:main.c        **** 	int num0;
 262:main.c        **** 
 263:main.c        **** 	num0=num_in;
 264:main.c        **** 
GAS LISTING /tmp/ccIBfZSu.s 			page 25


 265:main.c        **** 	if(num0>=9){PORTD=decimas+0x09;}
 266:main.c        **** 	else if(num0>=8){PORTD=decimas+0x08;}
 267:main.c        **** 	else if(num0>=7){PORTD=decimas+0x07;}
 268:main.c        **** 	else if(num0>=6){PORTD=decimas+0x06;}
 269:main.c        **** 	else if(num0>=5){PORTD=decimas+0x05;}
 270:main.c        **** 	else if(num0>=4){PORTD=decimas+0x04;}
 271:main.c        **** 	else if(num0>=3){PORTD=decimas+0x03;}
 272:main.c        **** 	else if(num0>=2){PORTD=decimas+0x02;}
 273:main.c        **** 	else if(num0>=1){PORTD=decimas+0x01;}
 274:main.c        **** 	else if(num0>=0){PORTD=decimas+0x00;}
 275:main.c        **** 	else {PORTD=decimas+0xAA;}
 276:main.c        **** }
 277:main.c        **** */
 278:main.c        **** //------------------------------------------------------//
 279:main.c        **** //----------------------Print time---------------------//
 280:main.c        **** //------------------------------------------------------//
 281:main.c        **** void print_Time_Binary(int time){
 1105               		.stabn	68,0,281,.LM106-.LFBB8
 1106               	.LM106:
 1107               	.LFBB8:
 1108               	/* prologue: function */
 1109               	/* frame size = 0 */
 1110               	/* stack size = 0 */
 1111               	.L__stack_usage = 0
 282:main.c        **** int time_segment_1=1;
 283:main.c        **** int time_segment_2=2;
 284:main.c        **** int time_segment_3=3;
 285:main.c        **** int time_segment_4=4;
 286:main.c        **** int time_segment_5=5;
 287:main.c        **** int time_segment_6=6;
 288:main.c        **** int time_segment_7=7;
 289:main.c        **** int times=time;
 290:main.c        **** if(times>time_segment_7){	sbi(PORTC,PC7);sbi(PORTC,PC1);sbi(PORTC,PC0);} //PORC=111//
 1112               		.stabn	68,0,290,.LM107-.LFBB8
 1113               	.LM107:
 1114 0588 8830      		cpi r24,8
 1115 058a 9105      		cpc r25,__zero_reg__
 1116 058c 04F0      		brlt .L165
 1117               		.stabn	68,0,290,.LM108-.LFBB8
 1118               	.LM108:
 1119 058e AF9A      		sbi 53-32,7
 1120 0590 00C0      		rjmp .L175
 1121               	.L165:
 291:main.c        **** else if(times>time_segment_6){  sbi(PORTC,PC7);sbi(PORTC,PC1);cbi(PORTC,PC0);} //PORD=110//
 1122               		.stabn	68,0,291,.LM109-.LFBB8
 1123               	.LM109:
 1124 0592 8730      		cpi r24,7
 1125 0594 9105      		cpc r25,__zero_reg__
 1126 0596 01F4      		brne .L167
 1127               		.stabn	68,0,291,.LM110-.LFBB8
 1128               	.LM110:
 1129 0598 AF9A      		sbi 53-32,7
 1130 059a 00C0      		rjmp .L177
 1131               	.L167:
 292:main.c        **** else if(times>time_segment_5){  sbi(PORTC,PC7);cbi(PORTC,PC1);sbi(PORTC,PC0);} //PORD=101//
 1132               		.stabn	68,0,292,.LM111-.LFBB8
 1133               	.LM111:
GAS LISTING /tmp/ccIBfZSu.s 			page 26


 1134 059c 8630      		cpi r24,6
 1135 059e 9105      		cpc r25,__zero_reg__
 1136 05a0 01F4      		brne .L168
 1137               		.stabn	68,0,292,.LM112-.LFBB8
 1138               	.LM112:
 1139 05a2 AF9A      		sbi 53-32,7
 1140 05a4 00C0      		rjmp .L176
 1141               	.L168:
 293:main.c        **** else if(times>time_segment_4){  sbi(PORTC,PC7);cbi(PORTC,PC1);cbi(PORTC,PC0);} //PORD=100//
 1142               		.stabn	68,0,293,.LM113-.LFBB8
 1143               	.LM113:
 1144 05a6 8530      		cpi r24,5
 1145 05a8 9105      		cpc r25,__zero_reg__
 1146 05aa 01F4      		brne .L169
 1147               		.stabn	68,0,293,.LM114-.LFBB8
 1148               	.LM114:
 1149 05ac AF9A      		sbi 53-32,7
 1150 05ae 00C0      		rjmp .L178
 1151               	.L169:
 294:main.c        **** else if(times>time_segment_3){  cbi(PORTC,PC7);sbi(PORTC,PC1);sbi(PORTC,PC0);} //PORD=011//
 1152               		.stabn	68,0,294,.LM115-.LFBB8
 1153               	.LM115:
 1154 05b0 8430      		cpi r24,4
 1155 05b2 9105      		cpc r25,__zero_reg__
 1156 05b4 01F4      		brne .L170
 1157               		.stabn	68,0,294,.LM116-.LFBB8
 1158               	.LM116:
 1159 05b6 AF98      		cbi 53-32,7
 1160               	.L175:
 1161 05b8 A99A      		sbi 53-32,1
 1162 05ba 00C0      		rjmp .L174
 1163               	.L170:
 295:main.c        **** else if(times>time_segment_2){  cbi(PORTC,PC7);sbi(PORTC,PC1);cbi(PORTC,PC0);} //PORD=010//
 1164               		.stabn	68,0,295,.LM117-.LFBB8
 1165               	.LM117:
 1166 05bc 8330      		cpi r24,3
 1167 05be 9105      		cpc r25,__zero_reg__
 1168 05c0 01F4      		brne .L171
 1169               		.stabn	68,0,295,.LM118-.LFBB8
 1170               	.LM118:
 1171 05c2 AF98      		cbi 53-32,7
 1172               	.L177:
 1173 05c4 A99A      		sbi 53-32,1
 1174 05c6 00C0      		rjmp .L173
 1175               	.L171:
 296:main.c        **** else if(times>time_segment_1){  cbi(PORTC,PC7);cbi(PORTC,PC1);sbi(PORTC,PC0);} //PORD=001//
 1176               		.stabn	68,0,296,.LM119-.LFBB8
 1177               	.LM119:
 1178 05c8 8230      		cpi r24,2
 1179 05ca 9105      		cpc r25,__zero_reg__
 1180 05cc 01F4      		brne .L172
 1181               		.stabn	68,0,296,.LM120-.LFBB8
 1182               	.LM120:
 1183 05ce AF98      		cbi 53-32,7
 1184               	.L176:
 1185 05d0 A998      		cbi 53-32,1
 1186               	.L174:
GAS LISTING /tmp/ccIBfZSu.s 			page 27


 1187 05d2 A89A      		sbi 53-32,0
 1188 05d4 0895      		ret
 1189               	.L172:
 297:main.c        **** else {			        cbi(PORTC,PC7);cbi(PORTC,PC1);cbi(PORTC,PC0);} //PORD=000//
 1190               		.stabn	68,0,297,.LM121-.LFBB8
 1191               	.LM121:
 1192 05d6 AF98      		cbi 53-32,7
 1193               	.L178:
 1194 05d8 A998      		cbi 53-32,1
 1195               	.L173:
 1196 05da A898      		cbi 53-32,0
 1197 05dc 0895      		ret
 1198               		.size	print_Time_Binary, .-print_Time_Binary
 1199               	.Lscope8:
 1200               		.stabs	"",36,0,0,.Lscope8-.LFBB8
 1201               		.stabd	78,0,0
 1202               		.stabs	"main:F(0,15)",36,0,44,main
 1203               	.global	main
 1204               		.type	main, @function
 1205               	main:
 1206               		.stabd	46,0,0
  45:main.c        **** {
 1207               		.stabn	68,0,45,.LM122-.LFBB9
 1208               	.LM122:
 1209               	.LFBB9:
 1210 05de 6F92      		push r6
 1211 05e0 7F92      		push r7
 1212 05e2 8F92      		push r8
 1213 05e4 9F92      		push r9
 1214 05e6 AF92      		push r10
 1215 05e8 BF92      		push r11
 1216 05ea CF92      		push r12
 1217 05ec DF92      		push r13
 1218 05ee EF92      		push r14
 1219 05f0 FF92      		push r15
 1220 05f2 0F93      		push r16
 1221 05f4 1F93      		push r17
 1222 05f6 DF93      		push r29
 1223 05f8 CF93      		push r28
 1224 05fa CDB7      		in r28,__SP_L__
 1225 05fc DEB7      		in r29,__SP_H__
 1226 05fe 6497      		sbiw r28,20
 1227 0600 0FB6      		in __tmp_reg__,__SREG__
 1228 0602 F894      		cli
 1229 0604 DEBF      		out __SP_H__,r29
 1230 0606 0FBE      		out __SREG__,__tmp_reg__
 1231 0608 CDBF      		out __SP_L__,r28
 1232               	/* prologue: function */
 1233               	/* frame size = 20 */
 1234               	/* stack size = 34 */
 1235               	.L__stack_usage = 34
  46:main.c        **** 	init_ports(); // Inicializa puertos A=>ADC, B=Inputs ,C=Outputs , D=Outputs
 1236               		.stabn	68,0,46,.LM123-.LFBB9
 1237               	.LM123:
 1238 060a 0E94 0000 		call init_ports
  55:main.c        **** 	double ms_time=0.0;
 1239               		.stabn	68,0,55,.LM124-.LFBB9
GAS LISTING /tmp/ccIBfZSu.s 			page 28


 1240               	.LM124:
 1241 060e EE24      		clr r14
 1242 0610 FF24      		clr r15
 1243 0612 DD24      		clr r13
 1244 0614 CC24      		clr r12
  54:main.c        **** 	int time=0;
 1245               		.stabn	68,0,54,.LM125-.LFBB9
 1246               	.LM125:
 1247 0616 AA24      		clr r10
 1248 0618 BB24      		clr r11
  46:main.c        **** 	init_ports(); // Inicializa puertos A=>ADC, B=Inputs ,C=Outputs , D=Outputs
 1249               		.stabn	68,0,46,.LM126-.LFBB9
 1250               	.LM126:
 1251 061a 3E01      		movw r6,r28
 1252 061c 0894      		sec
 1253 061e 611C      		adc r6,__zero_reg__
 1254 0620 711C      		adc r7,__zero_reg__
 1255               	.L190:
 1256 0622 4301      		movw r8,r6
  60:main.c        **** 	{  for(i=0;i<6;i++){select_ADC_port(i); /*Seleccionar puerto de entrada ADC*/ a[i]=ADCH-81;} // Ca
 1257               		.stabn	68,0,60,.LM127-.LFBB9
 1258               	.LM127:
 1259 0624 00E0      		ldi r16,lo8(0)
 1260 0626 10E0      		ldi r17,hi8(0)
 1261               	.L181:
  60:main.c        **** 	{  for(i=0;i<6;i++){select_ADC_port(i); /*Seleccionar puerto de entrada ADC*/ a[i]=ADCH-81;} // Ca
 1262               		.stabn	68,0,60,.LM128-.LFBB9
 1263               	.LM128:
 1264 0628 C801      		movw r24,r16
 1265 062a 0E94 0000 		call select_ADC_port
 1266 062e 65B1      		in r22,37-32
 1267 0630 70E0      		ldi r23,lo8(0)
 1268 0632 6155      		subi r22,lo8(-(-81))
 1269 0634 7040      		sbci r23,hi8(-(-81))
 1270 0636 8827      		clr r24
 1271 0638 77FD      		sbrc r23,7
 1272 063a 8095      		com r24
 1273 063c 982F      		mov r25,r24
 1274 063e 0E94 0000 		call __floatsisf
 1275 0642 F401      		movw r30,r8
 1276 0644 6193      		st Z+,r22
 1277 0646 7193      		st Z+,r23
 1278 0648 8193      		st Z+,r24
 1279 064a 9193      		st Z+,r25
 1280 064c 4F01      		movw r8,r30
 1281 064e 0F5F      		subi r16,lo8(-(1))
 1282 0650 1F4F      		sbci r17,hi8(-(1))
 1283 0652 0630      		cpi r16,6
 1284 0654 1105      		cpc r17,__zero_reg__
 1285 0656 01F4      		brne .L181
  61:main.c        **** 	a[3]=a[3]+81;
 1286               		.stabn	68,0,61,.LM129-.LFBB9
 1287               	.LM129:
 1288 0658 6D85      		ldd r22,Y+13
 1289 065a 7E85      		ldd r23,Y+14
 1290 065c 8F85      		ldd r24,Y+15
 1291 065e 9889      		ldd r25,Y+16
GAS LISTING /tmp/ccIBfZSu.s 			page 29


 1292 0660 20E0      		ldi r18,lo8(0x42a20000)
 1293 0662 30E0      		ldi r19,hi8(0x42a20000)
 1294 0664 42EA      		ldi r20,hlo8(0x42a20000)
 1295 0666 52E4      		ldi r21,hhi8(0x42a20000)
 1296 0668 0E94 0000 		call __addsf3
 1297 066c 262F      		mov r18,r22
 1298 066e 372F      		mov r19,r23
 1299 0670 482F      		mov r20,r24
 1300 0672 592F      		mov r21,r25
 1301 0674 2D87      		std Y+13,r18
 1302 0676 3E87      		std Y+14,r19
 1303 0678 4F87      		std Y+15,r20
 1304 067a 588B      		std Y+16,r21
  68:main.c        **** 		if(a[3]>132){count=1;}
 1305               		.stabn	68,0,68,.LM130-.LFBB9
 1306               	.LM130:
 1307 067c 20E0      		ldi r18,lo8(0x43040000)
 1308 067e 30E0      		ldi r19,hi8(0x43040000)
 1309 0680 44E0      		ldi r20,hlo8(0x43040000)
 1310 0682 53E4      		ldi r21,hhi8(0x43040000)
 1311 0684 0E94 0000 		call __gtsf2
 1312 0688 1816      		cp __zero_reg__,r24
 1313 068a 04F4      		brge .L189
 1314 068c 00C0      		rjmp .L191
 1315               	.L185:
  78:main.c        **** 				if(ms_time==10){time=time+1;ms_time=0;}else{time=time+0;}
 1316               		.stabn	68,0,78,.LM131-.LFBB9
 1317               	.LM131:
 1318 068e 0894      		sec
 1319 0690 A11C      		adc r10,__zero_reg__
 1320 0692 B11C      		adc r11,__zero_reg__
 1321 0694 EE24      		clr r14
 1322 0696 FF24      		clr r15
 1323 0698 DD24      		clr r13
 1324 069a CC24      		clr r12
 1325               	.L186:
 1326               	.LBB14:
 1327               	.LBB15:
 1328               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h",132,0,0,.Ltext1
 1329               	.Ltext1:
   1:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    All rights reserved.
   5:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
   6:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
   9:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  12:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****      distribution.
  16:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  17:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
GAS LISTING /tmp/ccIBfZSu.s 			page 30


  18:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  21:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  33:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** /* $Id: delay.h.in 2189 2010-10-13 09:39:34Z aboyapati $ */
  34:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  35:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  38:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #endif
  41:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  42:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #include <math.h>
  45:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  46:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** /** \file */
  47:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     \code
  49:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     \endcode
  53:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  54:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     used.
  58:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  59:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  68:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
GAS LISTING /tmp/ccIBfZSu.s 			page 31


  75:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  77:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  81:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** */
  82:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  83:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #endif
  87:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  88:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #endif
  93:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  94:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #endif
  97:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  98:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** /**
  99:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    \ingroup util_delay
 100:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 101:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 102:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 103:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 104:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 105:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 106:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 107:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 108:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 109:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 110:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 111:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 112:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 113:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 114:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 115:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 116:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 117:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    no delay i.e., 0ms.
 118:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 119:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 120:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 121:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 122:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 123:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 124:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    to round down and round to closest integer.
 125:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 126:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 127:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 128:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay
 129:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    although this will be deprecated in future.
 130:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 131:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****  */
GAS LISTING /tmp/ccIBfZSu.s 			page 32


 132:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** void
 133:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** _delay_ms(double __ms)
 134:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** {
 135:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	uint16_t __ticks;
 136:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	double __tmp ; 
 137:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && !defined(__DELAY_BACKWARD_COMPATIBLE__)
 138:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 139:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 140:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 141:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 142:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 143:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 144:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 145:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 146:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 147:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 148:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	#else
 149:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 		//round up by default
 150:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 151:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	#endif
 152:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 153:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 1330               		.stabn	68,0,153,.LM132-.LFBB9
 1331               	.LM132:
 1332 069c 87EA      		 ldi r24,lo8(24999)
 1333 069e 91E6      	    ldi r25,hi8(24999)
 1334 06a0 0197      	    1:sbiw r24,1
 1335 06a2 01F4      	    brne 1b
 1336 06a4 00C0      		rjmp .
 1337 06a6 0000      		nop
 1338               	.LBE15:
 1339               	.LBE14:
 1340               		.stabs	"main.c",132,0,0,.Ltext2
 1341               	.Ltext2:
  80:main.c        **** 				ms_time=ms_time+1;	
 1342               		.stabn	68,0,80,.LM133-.LFBB9
 1343               	.LM133:
 1344 06a8 9601      		movw r18,r12
 1345 06aa 6E2D      		mov r22,r14
 1346 06ac 7F2D      		mov r23,r15
 1347 06ae 832F      		mov r24,r19
 1348 06b0 9C2D      		mov r25,r12
 1349 06b2 20E0      		ldi r18,lo8(0x3f800000)
 1350 06b4 30E0      		ldi r19,hi8(0x3f800000)
 1351 06b6 40E8      		ldi r20,hlo8(0x3f800000)
 1352 06b8 5FE3      		ldi r21,hhi8(0x3f800000)
 1353 06ba 0E94 0000 		call __addsf3
 1354 06be 7B01      		movw r14,r22
 1355 06c0 D82E      		mov r13,r24
 1356 06c2 C92E      		mov r12,r25
  81:main.c        **** 				print_Time_Binary(time);
 1357               		.stabn	68,0,81,.LM134-.LFBB9
 1358               	.LM134:
 1359 06c4 C501      		movw r24,r10
 1360 06c6 0E94 0000 		call print_Time_Binary
 1361               	.L191:
  87:main.c        **** 				print_Decimes(x_total);
GAS LISTING /tmp/ccIBfZSu.s 			page 33


 1362               		.stabn	68,0,87,.LM135-.LFBB9
 1363               	.LM135:
 1364 06ca 60E0      		ldi r22,lo8(0x0)
 1365 06cc 70E0      		ldi r23,hi8(0x0)
 1366 06ce CB01      		movw r24,r22
 1367 06d0 0E94 0000 		call print_Decimes
 1368 06d4 00C0      		rjmp .L190
 1369               	.L189:
  78:main.c        **** 				if(ms_time==10){time=time+1;ms_time=0;}else{time=time+0;}
 1370               		.stabn	68,0,78,.LM136-.LFBB9
 1371               	.LM136:
 1372 06d6 9601      		movw r18,r12
 1373 06d8 6E2D      		mov r22,r14
 1374 06da 7F2D      		mov r23,r15
 1375 06dc 832F      		mov r24,r19
 1376 06de 9C2D      		mov r25,r12
 1377 06e0 20E0      		ldi r18,lo8(0x41200000)
 1378 06e2 30E0      		ldi r19,hi8(0x41200000)
 1379 06e4 40E2      		ldi r20,hlo8(0x41200000)
 1380 06e6 51E4      		ldi r21,hhi8(0x41200000)
 1381 06e8 0E94 0000 		call __eqsf2
 1382 06ec 8823      		tst r24
 1383 06ee 01F0      		breq .L185
 1384 06f0 00C0      		rjmp .L186
 1385               		.size	main, .-main
 1386               		.stabs	"i:r(0,1)",64,0,47,16
 1387               		.stabs	"a:(0,16)=ar(0,17)=r(0,17);0;0177777;;0;4;(0,13)",128,0,53,1
 1388               		.stabs	"time:r(0,1)",64,0,54,10
 1389               		.stabn	192,0,0,.LFBB9-.LFBB9
 1390               		.stabn	224,0,0,.Lscope9-.LFBB9
 1391               	.Lscope9:
 1392               		.stabs	"",36,0,0,.Lscope9-.LFBB9
 1393               		.stabd	78,0,0
 1394               		.stabs	"final_distance:F(0,13)",36,0,307,final_distance
 1395               		.stabs	"angle0xz:P(0,13)",64,0,307,22
 1396               		.stabs	"tf:P(0,13)",64,0,307,18
 1397               	.global	final_distance
 1398               		.type	final_distance, @function
 1399               	final_distance:
 1400               		.stabd	46,0,0
 298:main.c        **** 
 299:main.c        **** 
 300:main.c        **** }
 301:main.c        **** //------------------------------------------------------//
 302:main.c        **** 
 303:main.c        **** //------------------------------------------------------//
 304:main.c        **** //--------------------Final_Distance--------------------//
 305:main.c        **** //------------------------------------------------------//
 306:main.c        **** 
 307:main.c        **** double final_distance(double angle0xz,double tf){
 1401               		.stabn	68,0,307,.LM137-.LFBB10
 1402               	.LM137:
 1403               	.LFBB10:
 1404               	/* prologue: function */
 1405               	/* frame size = 0 */
 1406               	/* stack size = 0 */
 1407               	.L__stack_usage = 0
GAS LISTING /tmp/ccIBfZSu.s 			page 34


 308:main.c        **** 	float theta=45/57.2958;
 309:main.c        **** 	float t=1;
 310:main.c        **** 	float g=9.8;
 311:main.c        **** 	float a=-sin(2*theta)/(t*t); 
 312:main.c        **** 	float b=g;
 313:main.c        **** 	float c=(-1/4)*(g*g)*(t*t)*(sin(2*theta));
 314:main.c        **** 	float r=(1/(2*a))*(-b+sqrt(b*b-4*a*c));
 315:main.c        **** 	float h=10*sqrt(4);
 316:main.c        **** 	return sqrt(c*c);
 317:main.c        **** }
 1408               		.stabn	68,0,317,.LM138-.LFBB10
 1409               	.LM138:
 1410 06f2 60E0      		ldi r22,lo8(0x0)
 1411 06f4 70E0      		ldi r23,hi8(0x0)
 1412 06f6 CB01      		movw r24,r22
 1413               	/* epilogue start */
 1414 06f8 0895      		ret
 1415               		.size	final_distance, .-final_distance
 1416               	.Lscope10:
 1417               		.stabs	"",36,0,0,.Lscope10-.LFBB10
 1418               		.stabd	78,0,0
 1419               		.stabs	"",100,0,0,.Letext0
 1420               	.Letext0:
GAS LISTING /tmp/ccIBfZSu.s 			page 35


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccIBfZSu.s:2      *ABS*:0000003f __SREG__
     /tmp/ccIBfZSu.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccIBfZSu.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccIBfZSu.s:5      *ABS*:00000034 __CCP__
     /tmp/ccIBfZSu.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/ccIBfZSu.s:7      *ABS*:00000001 __zero_reg__
     /tmp/ccIBfZSu.s:74     .text:00000000 init_ports
     /tmp/ccIBfZSu.s:123    .text:00000018 select_ADC_port
     /tmp/ccIBfZSu.s:158    .text:00000024 initial_anglexy
     /tmp/ccIBfZSu.s:190    .text:0000003a initial_anglexz
     /tmp/ccIBfZSu.s:234    .text:00000068 initial_angleyz
     /tmp/ccIBfZSu.s:277    .text:00000096 print_Angle_Binary
     /tmp/ccIBfZSu.s:601    .text:00000260 print_Decimes
     /tmp/ccIBfZSu.s:1103   .text:00000588 print_Time_Binary
     /tmp/ccIBfZSu.s:1205   .text:000005de main
     /tmp/ccIBfZSu.s:1399   .text:000006f2 final_distance

UNDEFINED SYMBOLS
__divsf3
atan
__mulsf3
__gtsf2
__gesf2
__subsf3
__floatsisf
__addsf3
__eqsf2
