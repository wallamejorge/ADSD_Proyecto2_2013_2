GAS LISTING /tmp/ccGhru5g.s 			page 1


   1               		.file	"main.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.stabs	"/home/juanfe/Desktop/Prototipo2_AcelerometroyTiempo/",100,0,2,.Ltext0
   9               		.stabs	"main.c",100,0,2,.Ltext0
  10               		.text
  11               	.Ltext0:
  12               		.stabs	"gcc2_compiled.",60,0,0,0
  13               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,0,0
  14               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,0,0
  15               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,0,0
  16               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,0,0
  17               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,0,0
  18               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,0,
  19               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,0,0
  20               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,0,0
  21               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,0,0
  22               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,0,0
  23               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
  24               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,0,0
  25               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,0,0
  26               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,0,0
  27               		.stabs	"void:t(0,15)=(0,15)",128,0,0,0
  28               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/io.h",130,0,0,0
  29               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/sfr_defs.h",130,0,0,0
  30               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/inttypes.h",130,0,0,0
  31               		.stabs	"/usr/lib/gcc/avr/4.5.3/include/stdint.h",130,0,0,0
  32               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/stdint.h",130,0,0,0
  33               		.stabs	"int8_t:t(5,1)=(0,10)",128,0,121,0
  34               		.stabs	"uint8_t:t(5,2)=(0,11)",128,0,122,0
  35               		.stabs	"int16_t:t(5,3)=(0,1)",128,0,123,0
  36               		.stabs	"uint16_t:t(5,4)=(0,4)",128,0,124,0
  37               		.stabs	"int32_t:t(5,5)=(0,3)",128,0,125,0
  38               		.stabs	"uint32_t:t(5,6)=(0,5)",128,0,126,0
  39               		.stabs	"int64_t:t(5,7)=(0,6)",128,0,128,0
  40               		.stabs	"uint64_t:t(5,8)=(0,7)",128,0,129,0
  41               		.stabs	"intptr_t:t(5,9)=(5,3)",128,0,142,0
  42               		.stabs	"uintptr_t:t(5,10)=(5,4)",128,0,147,0
  43               		.stabs	"int_least8_t:t(5,11)=(5,1)",128,0,159,0
  44               		.stabs	"uint_least8_t:t(5,12)=(5,2)",128,0,164,0
  45               		.stabs	"int_least16_t:t(5,13)=(5,3)",128,0,169,0
  46               		.stabs	"uint_least16_t:t(5,14)=(5,4)",128,0,174,0
  47               		.stabs	"int_least32_t:t(5,15)=(5,5)",128,0,179,0
  48               		.stabs	"uint_least32_t:t(5,16)=(5,6)",128,0,184,0
  49               		.stabs	"int_least64_t:t(5,17)=(5,7)",128,0,192,0
  50               		.stabs	"uint_least64_t:t(5,18)=(5,8)",128,0,199,0
  51               		.stabs	"int_fast8_t:t(5,19)=(5,1)",128,0,213,0
  52               		.stabs	"uint_fast8_t:t(5,20)=(5,2)",128,0,218,0
  53               		.stabs	"int_fast16_t:t(5,21)=(5,3)",128,0,223,0
  54               		.stabs	"uint_fast16_t:t(5,22)=(5,4)",128,0,228,0
  55               		.stabs	"int_fast32_t:t(5,23)=(5,5)",128,0,233,0
  56               		.stabs	"uint_fast32_t:t(5,24)=(5,6)",128,0,238,0
  57               		.stabs	"int_fast64_t:t(5,25)=(5,7)",128,0,246,0
GAS LISTING /tmp/ccGhru5g.s 			page 2


  58               		.stabs	"uint_fast64_t:t(5,26)=(5,8)",128,0,253,0
  59               		.stabs	"intmax_t:t(5,27)=(5,7)",128,0,273,0
  60               		.stabs	"uintmax_t:t(5,28)=(5,8)",128,0,278,0
  61               		.stabn	162,0,0,0
  62               		.stabn	162,0,0,0
  63               		.stabs	"int_farptr_t:t(3,1)=(5,5)",128,0,77,0
  64               		.stabs	"uint_farptr_t:t(3,2)=(5,6)",128,0,81,0
  65               		.stabn	162,0,0,0
  66               		.stabn	162,0,0,0
  67               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/fuse.h",130,0,0,0
  68               		.stabs	"__fuse_t:t(6,1)=(6,2)=s2low:(0,11),0,8;high:(0,11),8,8;;",128,0,252,0
  69               		.stabn	162,0,0,0
  70               		.stabn	162,0,0,0
  71               		.stabs	"init_ports:F(0,15)",36,0,106,init_ports
  72               	.global	init_ports
  73               		.type	init_ports, @function
  74               	init_ports:
  75               		.stabd	46,0,0
   1:main.c        **** //-------------------------------------------------------------------------------------------------
   2:main.c        **** //Prototipo NO.2 Proyecto 2 Cohete Agua. Codigo que lee 3 señales analogas de 0-5v y calcula los a
   3:main.c        **** // es capaz de predecir la distancia maxima
   4:main.c        **** // Autores: Juan Felipe Martinez, Monica Tuta Fajardo, Jorge Luis Mayorga
   5:main.c        **** // Universidad de los Andes
   6:main.c        **** //-------------------------------------------------------------------------------------------------
   7:main.c        **** 
   8:main.c        **** //-------------------------------------------------//
   9:main.c        **** //-----------------LIBRERIAS-----------------------//
  10:main.c        **** //------------------------------------------------//
  11:main.c        **** //#include<mega16.h>
  12:main.c        **** #include<avr/io.h>
  13:main.c        **** #include<math.h>
  14:main.c        **** #include<util/delay.h>
  15:main.c        **** #include<stdbool.h>
  16:main.c        **** //------------------------------------------------//
  17:main.c        **** 
  18:main.c        **** 
  19:main.c        **** //------------------------------------------------//
  20:main.c        **** //---------------DEFINIR FUNCIONES----------------//
  21:main.c        **** //------------------------------------------------//
  22:main.c        **** #define sbi(x,y) x |= _BV(y) //Hace set al yth bit del puerto X
  23:main.c        **** #define cbi(x,y) x &= ~(_BV(y)) //Hace reset al yth bit del puerto X
  24:main.c        **** #define tbi(x,y) x ^= _BV(y) //Cambia el estado logico del yth bit del puerto X
  25:main.c        **** #define is_high(x,y) ((x & _BV(y)) == _BV(y))
  26:main.c        **** #define is_low(x,y) ((x & (_BV(y))) == 0) //check if the input pin is low
  27:main.c        **** double initial_anglexz(double ax, double ay, double az); // Calcula el angulo xz inicial de lanzami
  28:main.c        **** double initial_anglexy(double ax, double ay, double az); // Calcula el angulo xy inicial de lanzami
  29:main.c        **** double initial_angleyz(double ax, double ay, double az); // Calcula el angulo yz inicial de lanzami
  30:main.c        **** double final_distance(double angle0xz,double tf); // Calcula la distancia del cohete en mts usando 
  31:main.c        **** int time_counter(int Reset,int count,int count0); // Contador mientras que este activo count
  32:main.c        **** void init_ports(void); //Inicializa los puertos
  33:main.c        **** void select_ADC_port(int i);// Seleccion cual puerto de ADC leer
  34:main.c        **** void print_Angle_Binary(int NoPortCD,double angle);// Imprime en PORTD el angulo medido en binario
  35:main.c        **** void print_Distance(double r);// Imprime en PORTD el angulo medido en binario
  36:main.c        **** void print_Time_Binary(int time);// Imprime en PORTC el tiempo medido en binario
  37:main.c        **** //------------------------------------------------------//
  38:main.c        **** 
  39:main.c        **** 
GAS LISTING /tmp/ccGhru5g.s 			page 3


  40:main.c        **** //------------------------------------------------------//
  41:main.c        **** //---------------------Main.c---------------------------//
  42:main.c        **** //------------------------------------------------------//
  43:main.c        **** void main(void)
  44:main.c        **** {
  45:main.c        **** 	init_ports(); // Inicializa puertos A=>ADC, B=Inputs ,C=Outputs , D=Outputs
  46:main.c        **** 	int i=0;
  47:main.c        **** 	double angle0xy=0.0;
  48:main.c        **** 	double angle0yz=0.0;
  49:main.c        **** 	double angle0xz=0.0;
  50:main.c        **** 	double x_total=0.0;
  51:main.c        **** 	double a[5];
  52:main.c        **** 	int time=0;
  53:main.c        **** 	int rst;
  54:main.c        **** 	double ms_time=0.0;
  55:main.c        **** 	int count=0;
  56:main.c        **** 	int rstanalogo=0;
  57:main.c        **** 
  58:main.c        **** 	while (1)
  59:main.c        **** 	{  for(i=0;i<6;i++){select_ADC_port(i); /*Seleccionar puerto de entrada ADC*/ a[i]=ADCH-81;} // Ca
  60:main.c        **** 	a[3]=a[3]+81;
  61:main.c        **** 	a[4]=a[4]+81;
  62:main.c        **** 				
  63:main.c        **** 	
  64:main.c        **** 		// Conversión de entrada análoga
  65:main.c        **** 
  66:main.c        **** 		
  67:main.c        **** 		if(a[3]>132){count=1;}
  68:main.c        **** 		else{count=0;}
  69:main.c        **** 
  70:main.c        **** 		if(a[4]>132){rstanalogo=1;}
  71:main.c        **** 		else{rstanalogo=0;}
  72:main.c        **** 
  73:main.c        **** 		// Si reset (análogo) todas la señales a 0, sino los contadores de milisegundos y segundos func
  74:main.c        **** 		
  75:main.c        **** 			
  76:main.c        **** 			if (count==0)	{
  77:main.c        **** 				if(ms_time==10){time=time+1;ms_time=0;}else{time=time+0;}
  78:main.c        **** 				_delay_ms(100);
  79:main.c        **** 				ms_time=ms_time+1;	
  80:main.c        **** 				print_Time_Binary(time);
  81:main.c        **** 				
  82:main.c        **** 				angle0xy=angle0xy; angle0xz=angle0xz; angle0yz=angle0yz; //los ángulos se mantienen con el úl
  83:main.c        **** 				/*print_Angle_Binary(1,angle0xz); // Imprime el angulo en binario en el puerto PORTD */
  84:main.c        **** 				}
  85:main.c        **** 				
  86:main.c        **** 
  87:main.c        **** 			else { ms_time=ms_time;time=time;
  88:main.c        **** 				angle0xy=initial_anglexy(a[0],a[1],a[2]); // Genero angulo entre x y y en grados
  89:main.c        **** 				angle0xz=initial_anglexz(a[0],a[1],a[2]); // Genero angulo entre x y z en grados
  90:main.c        **** 				angle0yz=initial_angleyz(a[0],a[1],a[2]); // Genero angulo entre y y z en grados
  91:main.c        **** 				/*print_Angle_Binary(1,angle0xz); // Imprime el angulo en binario en el puerto PORTD  */
  92:main.c        **** 			     }
  93:main.c        **** 			
  94:main.c        **** 		
  95:main.c        **** 
  96:main.c        **** 		x_total=final_distance(angle0xz,(time+(ms_time/10))); // Calcula la distancia final.
GAS LISTING /tmp/ccGhru5g.s 			page 4


  97:main.c        **** 
  98:main.c        **** 		
  99:main.c        **** 
 100:main.c        **** 	}
 101:main.c        **** }
 102:main.c        **** //------------------------------------------------------//
 103:main.c        **** //------------------------------------------------------//
 104:main.c        **** //-------------------Init_Ports-------------------------//
 105:main.c        **** //------------------------------------------------------//
 106:main.c        **** void init_ports(void){
  76               		.stabn	68,0,106,.LM0-.LFBB1
  77               	.LM0:
  78               	.LFBB1:
  79               	/* prologue: function */
  80               	/* frame size = 0 */
  81               	/* stack size = 0 */
  82               	.L__stack_usage = 0
 107:main.c        **** 
 108:main.c        **** 	DDRA=0x00;		//Defino Puerto A como Inputs
  83               		.stabn	68,0,108,.LM1-.LFBB1
  84               	.LM1:
  85 0000 1ABA      		out 58-32,__zero_reg__
 109:main.c        **** 	PORTA=0x00;     //Habilito los puertos de A
  86               		.stabn	68,0,109,.LM2-.LFBB1
  87               	.LM2:
  88 0002 1BBA      		out 59-32,__zero_reg__
 110:main.c        **** 	DDRB = 0x00;    //Defino Puerto B como Inputs
  89               		.stabn	68,0,110,.LM3-.LFBB1
  90               	.LM3:
  91 0004 17BA      		out 55-32,__zero_reg__
 111:main.c        **** 	PORTB=0x00;     //Habilito los puertos de B
  92               		.stabn	68,0,111,.LM4-.LFBB1
  93               	.LM4:
  94 0006 18BA      		out 56-32,__zero_reg__
 112:main.c        **** 
 113:main.c        **** 	DDRC=0xff;		//Defino Puerto C como Outputs
  95               		.stabn	68,0,113,.LM5-.LFBB1
  96               	.LM5:
  97 0008 8FEF      		ldi r24,lo8(-1)
  98 000a 84BB      		out 52-32,r24
 114:main.c        **** 	PORTC=0x00;     //Habilito los puertos de C
  99               		.stabn	68,0,114,.LM6-.LFBB1
 100               	.LM6:
 101 000c 15BA      		out 53-32,__zero_reg__
 115:main.c        **** 	DDRD = 0xff;    //Defino Puerto D como Outputs
 102               		.stabn	68,0,115,.LM7-.LFBB1
 103               	.LM7:
 104 000e 81BB      		out 49-32,r24
 116:main.c        **** 	PORTD=0x00;     //Habilito los puertos de D
 105               		.stabn	68,0,116,.LM8-.LFBB1
 106               	.LM8:
 107 0010 12BA      		out 50-32,__zero_reg__
 117:main.c        **** 
 118:main.c        **** 	ADCSRA = _BV(ADEN) | _BV(ADPS2) | _BV(ADPS1) | _BV(ADPS0); // Habilito preescaler para tener una b
 108               		.stabn	68,0,118,.LM9-.LFBB1
 109               	.LM9:
 110 0012 87E8      		ldi r24,lo8(-121)
GAS LISTING /tmp/ccGhru5g.s 			page 5


 111 0014 86B9      		out 38-32,r24
 112               	/* epilogue start */
 119:main.c        **** 
 120:main.c        **** }
 113               		.stabn	68,0,120,.LM10-.LFBB1
 114               	.LM10:
 115 0016 0895      		ret
 116               		.size	init_ports, .-init_ports
 117               	.Lscope1:
 118               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 119               		.stabd	78,0,0
 120               		.stabs	"select_ADC_port:F(0,15)",36,0,127,select_ADC_port
 121               	.global	select_ADC_port
 122               		.type	select_ADC_port, @function
 123               	select_ADC_port:
 124               		.stabd	46,0,0
 121:main.c        **** //------------------------------------------------------//
 122:main.c        **** 
 123:main.c        **** 
 124:main.c        **** //------------------------------------------------------//
 125:main.c        **** //----------------Select_ADC_port-----------------------//
 126:main.c        **** //------------------------------------------------------//
 127:main.c        **** void select_ADC_port(int i){
 125               		.stabn	68,0,127,.LM11-.LFBB2
 126               	.LM11:
 127               	.LFBB2:
 128               	/* prologue: function */
 129               	/* frame size = 0 */
 130               	/* stack size = 0 */
 131               	.L__stack_usage = 0
 128:main.c        **** 	ADMUX = _BV(ADLAR) + i; // Selecciona un pin de las entradas analogas ADC[i]
 132               		.stabn	68,0,128,.LM12-.LFBB2
 133               	.LM12:
 134 0018 805E      		subi r24,lo8(-(32))
 135 001a 87B9      		out 39-32,r24
 129:main.c        **** 	ADCSRA |= _BV(ADSC); //Comienza conversion
 136               		.stabn	68,0,129,.LM13-.LFBB2
 137               	.LM13:
 138 001c 369A      		sbi 38-32,6
 139               	.L3:
 130:main.c        **** 	while (ADCSRA & _BV(ADSC) ) {}  // Esperar la conversion
 140               		.stabn	68,0,130,.LM14-.LFBB2
 141               	.LM14:
 142 001e 3699      		sbic 38-32,6
 143 0020 00C0      		rjmp .L3
 144               	/* epilogue start */
 131:main.c        **** 
 132:main.c        **** }
 145               		.stabn	68,0,132,.LM15-.LFBB2
 146               	.LM15:
 147 0022 0895      		ret
 148               		.size	select_ADC_port, .-select_ADC_port
 149               	.Lscope2:
 150               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 151               		.stabd	78,0,0
 152               		.stabs	"initial_anglexy:F(0,13)",36,0,139,initial_anglexy
 153               		.stabs	"ax:P(0,13)",64,0,139,22
GAS LISTING /tmp/ccGhru5g.s 			page 6


 154               		.stabs	"ay:P(0,13)",64,0,139,18
 155               		.stabs	"az:P(0,13)",64,0,139,14
 156               	.global	initial_anglexy
 157               		.type	initial_anglexy, @function
 158               	initial_anglexy:
 159               		.stabd	46,0,0
 133:main.c        **** //------------------------------------------------------//
 134:main.c        **** 
 135:main.c        **** 
 136:main.c        **** //------------------------------------------------------//
 137:main.c        **** //----------------Initial_Angle_XY----------------------//
 138:main.c        **** //------------------------------------------------------//
 139:main.c        **** double initial_anglexy(double ax, double ay, double az){
 160               		.stabn	68,0,139,.LM16-.LFBB3
 161               	.LM16:
 162               	.LFBB3:
 163               	/* prologue: function */
 164               	/* frame size = 0 */
 165               	/* stack size = 0 */
 166               	.L__stack_usage = 0
 140:main.c        **** 	return atan(ax/ay)*(57.2958);
 167               		.stabn	68,0,140,.LM17-.LFBB3
 168               	.LM17:
 169 0024 0E94 0000 		call __divsf3
 170 0028 0E94 0000 		call atan
 171 002c 26EE      		ldi r18,lo8(0x42652ee6)
 172 002e 3EE2      		ldi r19,hi8(0x42652ee6)
 173 0030 45E6      		ldi r20,hlo8(0x42652ee6)
 174 0032 52E4      		ldi r21,hhi8(0x42652ee6)
 175 0034 0E94 0000 		call __mulsf3
 176               	/* epilogue start */
 141:main.c        **** }
 177               		.stabn	68,0,141,.LM18-.LFBB3
 178               	.LM18:
 179 0038 0895      		ret
 180               		.size	initial_anglexy, .-initial_anglexy
 181               	.Lscope3:
 182               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 183               		.stabd	78,0,0
 184               		.stabs	"initial_anglexz:F(0,13)",36,0,148,initial_anglexz
 185               		.stabs	"ax:P(0,13)",64,0,148,18
 186               		.stabs	"ay:P(0,13)",64,0,148,18
 187               		.stabs	"az:P(0,13)",64,0,148,22
 188               	.global	initial_anglexz
 189               		.type	initial_anglexz, @function
 190               	initial_anglexz:
 191               		.stabd	46,0,0
 142:main.c        **** //------------------------------------------------------//
 143:main.c        **** 
 144:main.c        **** 
 145:main.c        **** //------------------------------------------------------//
 146:main.c        **** //----------------Initial_Angle_XZ----------------------//
 147:main.c        **** //------------------------------------------------------//
 148:main.c        **** double initial_anglexz(double ax, double ay, double az){
 192               		.stabn	68,0,148,.LM19-.LFBB4
 193               	.LM19:
 194               	.LFBB4:
GAS LISTING /tmp/ccGhru5g.s 			page 7


 195 003a EF92      		push r14
 196 003c FF92      		push r15
 197 003e 0F93      		push r16
 198 0040 1F93      		push r17
 199               	/* prologue: function */
 200               	/* frame size = 0 */
 201               	/* stack size = 4 */
 202               	.L__stack_usage = 4
 203 0042 9B01      		movw r18,r22
 204 0044 AC01      		movw r20,r24
 205 0046 C801      		movw r24,r16
 206 0048 B701      		movw r22,r14
 149:main.c        **** 	return atan(az/ax)*(57.2958);
 207               		.stabn	68,0,149,.LM20-.LFBB4
 208               	.LM20:
 209 004a 0E94 0000 		call __divsf3
 210 004e 0E94 0000 		call atan
 211 0052 26EE      		ldi r18,lo8(0x42652ee6)
 212 0054 3EE2      		ldi r19,hi8(0x42652ee6)
 213 0056 45E6      		ldi r20,hlo8(0x42652ee6)
 214 0058 52E4      		ldi r21,hhi8(0x42652ee6)
 215 005a 0E94 0000 		call __mulsf3
 216               	/* epilogue start */
 150:main.c        **** }
 217               		.stabn	68,0,150,.LM21-.LFBB4
 218               	.LM21:
 219 005e 1F91      		pop r17
 220 0060 0F91      		pop r16
 221 0062 FF90      		pop r15
 222 0064 EF90      		pop r14
 223 0066 0895      		ret
 224               		.size	initial_anglexz, .-initial_anglexz
 225               	.Lscope4:
 226               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 227               		.stabd	78,0,0
 228               		.stabs	"initial_angleyz:F(0,13)",36,0,157,initial_angleyz
 229               		.stabs	"ax:P(0,13)",64,0,157,22
 230               		.stabs	"ay:P(0,13)",64,0,157,22
 231               		.stabs	"az:P(0,13)",64,0,157,18
 232               	.global	initial_angleyz
 233               		.type	initial_angleyz, @function
 234               	initial_angleyz:
 235               		.stabd	46,0,0
 151:main.c        **** //------------------------------------------------------//
 152:main.c        **** 
 153:main.c        **** 
 154:main.c        **** //------------------------------------------------------//
 155:main.c        **** //----------------Initial_Angle_YZ----------------------//
 156:main.c        **** //------------------------------------------------------//
 157:main.c        **** double initial_angleyz(double ax, double ay, double az){
 236               		.stabn	68,0,157,.LM22-.LFBB5
 237               	.LM22:
 238               	.LFBB5:
 239 0068 EF92      		push r14
 240 006a FF92      		push r15
 241 006c 0F93      		push r16
 242 006e 1F93      		push r17
GAS LISTING /tmp/ccGhru5g.s 			page 8


 243               	/* prologue: function */
 244               	/* frame size = 0 */
 245               	/* stack size = 4 */
 246               	.L__stack_usage = 4
 247 0070 CA01      		movw r24,r20
 248 0072 B901      		movw r22,r18
 249 0074 A801      		movw r20,r16
 250 0076 9701      		movw r18,r14
 158:main.c        **** 	return atan(ay/az)*(57.2958);
 251               		.stabn	68,0,158,.LM23-.LFBB5
 252               	.LM23:
 253 0078 0E94 0000 		call __divsf3
 254 007c 0E94 0000 		call atan
 255 0080 26EE      		ldi r18,lo8(0x42652ee6)
 256 0082 3EE2      		ldi r19,hi8(0x42652ee6)
 257 0084 45E6      		ldi r20,hlo8(0x42652ee6)
 258 0086 52E4      		ldi r21,hhi8(0x42652ee6)
 259 0088 0E94 0000 		call __mulsf3
 260               	/* epilogue start */
 159:main.c        **** }
 261               		.stabn	68,0,159,.LM24-.LFBB5
 262               	.LM24:
 263 008c 1F91      		pop r17
 264 008e 0F91      		pop r16
 265 0090 FF90      		pop r15
 266 0092 EF90      		pop r14
 267 0094 0895      		ret
 268               		.size	initial_angleyz, .-initial_angleyz
 269               	.Lscope5:
 270               		.stabs	"",36,0,0,.Lscope5-.LFBB5
 271               		.stabd	78,0,0
 272               		.stabs	"print_Angle_Binary:F(0,15)",36,0,165,print_Angle_Binary
 273               		.stabs	"NoPortCD:P(0,1)",64,0,165,24
 274               		.stabs	"angle:P(0,13)",64,0,165,14
 275               	.global	print_Angle_Binary
 276               		.type	print_Angle_Binary, @function
 277               	print_Angle_Binary:
 278               		.stabd	46,0,0
 160:main.c        **** //------------------------------------------------------//
 161:main.c        **** 
 162:main.c        **** //------------------------------------------------------//
 163:main.c        **** //----------------------Print Angle---------------------//
 164:main.c        **** //------------------------------------------------------//
 165:main.c        **** void print_Angle_Binary(int NoPortCD,double angle){
 279               		.stabn	68,0,165,.LM25-.LFBB6
 280               	.LM25:
 281               	.LFBB6:
 282 0096 EF92      		push r14
 283 0098 FF92      		push r15
 284 009a 0F93      		push r16
 285 009c 1F93      		push r17
 286               	/* prologue: function */
 287               	/* frame size = 0 */
 288               	/* stack size = 4 */
 289               	.L__stack_usage = 4
 290 009e 7A01      		movw r14,r20
 291 00a0 8B01      		movw r16,r22
GAS LISTING /tmp/ccGhru5g.s 			page 9


 166:main.c        **** 
 167:main.c        **** 	double angle_segment_0=5;
 168:main.c        **** 	double angle_segment_1=10;
 169:main.c        **** 	double angle_segment_2=15;
 170:main.c        **** 	double angle_segment_3=20;
 171:main.c        **** 	double angle_segment_4=25;
 172:main.c        **** 	double angle_segment_5=30;
 173:main.c        **** 	double angle_segment_6=35;
 174:main.c        **** 	double angle_segment_7=40;
 175:main.c        **** 	double angle_segment_8=45;
 176:main.c        **** 	double angle_segment_9=50;
 177:main.c        **** 	double angle_segment_10=55;
 178:main.c        **** 	double angle_segment_11=60;
 179:main.c        **** 	double angle_segment_12=65;
 180:main.c        **** 	double angle_segment_13=70;
 181:main.c        **** 	double angle_segment_14=75;
 182:main.c        **** 	double angle_segment_15=80;
 183:main.c        **** 	double angle_segment_16=85;
 184:main.c        **** 	double angle_segment_17=90;
 185:main.c        **** 
 186:main.c        **** 
 187:main.c        **** 	if(angle>angle_segment_17){PORTD=0x05;}        //0000//-----//0000// = 00
 292               		.stabn	68,0,187,.LM26-.LFBB6
 293               	.LM26:
 294 00a2 CB01      		movw r24,r22
 295 00a4 BA01      		movw r22,r20
 296 00a6 20E0      		ldi r18,lo8(0x42b40000)
 297 00a8 30E0      		ldi r19,hi8(0x42b40000)
 298 00aa 44EB      		ldi r20,hlo8(0x42b40000)
 299 00ac 52E4      		ldi r21,hhi8(0x42b40000)
 300 00ae 0E94 0000 		call __gtsf2
 301 00b2 1816      		cp __zero_reg__,r24
 302 00b4 04F4      		brge .L64
 303               		.stabn	68,0,187,.LM27-.LFBB6
 304               	.LM27:
 305 00b6 85E0      		ldi r24,lo8(5)
 306 00b8 00C0      		rjmp .L82
 307               	.L64:
 188:main.c        **** 	else if(angle>angle_segment_16){PORTD=0x10;}   //0000//-----//0101// = 05
 308               		.stabn	68,0,188,.LM28-.LFBB6
 309               	.LM28:
 310 00ba C801      		movw r24,r16
 311 00bc B701      		movw r22,r14
 312 00be 20E0      		ldi r18,lo8(0x42aa0000)
 313 00c0 30E0      		ldi r19,hi8(0x42aa0000)
 314 00c2 4AEA      		ldi r20,hlo8(0x42aa0000)
 315 00c4 52E4      		ldi r21,hhi8(0x42aa0000)
 316 00c6 0E94 0000 		call __gtsf2
 317 00ca 1816      		cp __zero_reg__,r24
 318 00cc 04F4      		brge .L65
 319               		.stabn	68,0,188,.LM29-.LFBB6
 320               	.LM29:
 321 00ce 80E1      		ldi r24,lo8(16)
 322 00d0 00C0      		rjmp .L82
 323               	.L65:
 189:main.c        **** 	else if(angle>angle_segment_15){PORTD=0x15;}   //0001//-----//0000// = 10  
 324               		.stabn	68,0,189,.LM30-.LFBB6
GAS LISTING /tmp/ccGhru5g.s 			page 10


 325               	.LM30:
 326 00d2 C801      		movw r24,r16
 327 00d4 B701      		movw r22,r14
 328 00d6 20E0      		ldi r18,lo8(0x42a00000)
 329 00d8 30E0      		ldi r19,hi8(0x42a00000)
 330 00da 40EA      		ldi r20,hlo8(0x42a00000)
 331 00dc 52E4      		ldi r21,hhi8(0x42a00000)
 332 00de 0E94 0000 		call __gtsf2
 333 00e2 1816      		cp __zero_reg__,r24
 334 00e4 04F4      		brge .L66
 335               		.stabn	68,0,189,.LM31-.LFBB6
 336               	.LM31:
 337 00e6 85E1      		ldi r24,lo8(21)
 338 00e8 00C0      		rjmp .L82
 339               	.L66:
 190:main.c        **** 	else if(angle>angle_segment_14){PORTD=0x20;}   //0001//-----//0101// = 15 
 340               		.stabn	68,0,190,.LM32-.LFBB6
 341               	.LM32:
 342 00ea C801      		movw r24,r16
 343 00ec B701      		movw r22,r14
 344 00ee 20E0      		ldi r18,lo8(0x42960000)
 345 00f0 30E0      		ldi r19,hi8(0x42960000)
 346 00f2 46E9      		ldi r20,hlo8(0x42960000)
 347 00f4 52E4      		ldi r21,hhi8(0x42960000)
 348 00f6 0E94 0000 		call __gtsf2
 349 00fa 1816      		cp __zero_reg__,r24
 350 00fc 04F4      		brge .L67
 351               		.stabn	68,0,190,.LM33-.LFBB6
 352               	.LM33:
 353 00fe 80E2      		ldi r24,lo8(32)
 354 0100 00C0      		rjmp .L82
 355               	.L67:
 191:main.c        **** 	else if(angle>angle_segment_13){PORTD=0x25;}   //0010//-----//0000// = 10  
 356               		.stabn	68,0,191,.LM34-.LFBB6
 357               	.LM34:
 358 0102 C801      		movw r24,r16
 359 0104 B701      		movw r22,r14
 360 0106 20E0      		ldi r18,lo8(0x428c0000)
 361 0108 30E0      		ldi r19,hi8(0x428c0000)
 362 010a 4CE8      		ldi r20,hlo8(0x428c0000)
 363 010c 52E4      		ldi r21,hhi8(0x428c0000)
 364 010e 0E94 0000 		call __gtsf2
 365 0112 1816      		cp __zero_reg__,r24
 366 0114 04F4      		brge .L68
 367               		.stabn	68,0,191,.LM35-.LFBB6
 368               	.LM35:
 369 0116 85E2      		ldi r24,lo8(37)
 370 0118 00C0      		rjmp .L82
 371               	.L68:
 192:main.c        **** 	else if(angle>angle_segment_12){PORTD=0x30;}   //0010//-----//0101// = 25  
 372               		.stabn	68,0,192,.LM36-.LFBB6
 373               	.LM36:
 374 011a C801      		movw r24,r16
 375 011c B701      		movw r22,r14
 376 011e 20E0      		ldi r18,lo8(0x42820000)
 377 0120 30E0      		ldi r19,hi8(0x42820000)
 378 0122 42E8      		ldi r20,hlo8(0x42820000)
GAS LISTING /tmp/ccGhru5g.s 			page 11


 379 0124 52E4      		ldi r21,hhi8(0x42820000)
 380 0126 0E94 0000 		call __gtsf2
 381 012a 1816      		cp __zero_reg__,r24
 382 012c 04F4      		brge .L69
 383               		.stabn	68,0,192,.LM37-.LFBB6
 384               	.LM37:
 385 012e 80E3      		ldi r24,lo8(48)
 386 0130 00C0      		rjmp .L82
 387               	.L69:
 193:main.c        **** 	else if(angle>angle_segment_11){PORTD=0x35;}   //0011//-----//0000// = 30  
 388               		.stabn	68,0,193,.LM38-.LFBB6
 389               	.LM38:
 390 0132 C801      		movw r24,r16
 391 0134 B701      		movw r22,r14
 392 0136 20E0      		ldi r18,lo8(0x42700000)
 393 0138 30E0      		ldi r19,hi8(0x42700000)
 394 013a 40E7      		ldi r20,hlo8(0x42700000)
 395 013c 52E4      		ldi r21,hhi8(0x42700000)
 396 013e 0E94 0000 		call __gtsf2
 397 0142 1816      		cp __zero_reg__,r24
 398 0144 04F4      		brge .L70
 399               		.stabn	68,0,193,.LM39-.LFBB6
 400               	.LM39:
 401 0146 85E3      		ldi r24,lo8(53)
 402 0148 00C0      		rjmp .L82
 403               	.L70:
 194:main.c        **** 	else if(angle>angle_segment_10){PORTD=0x40;}   //0011//-----//0101// = 35 
 404               		.stabn	68,0,194,.LM40-.LFBB6
 405               	.LM40:
 406 014a C801      		movw r24,r16
 407 014c B701      		movw r22,r14
 408 014e 20E0      		ldi r18,lo8(0x425c0000)
 409 0150 30E0      		ldi r19,hi8(0x425c0000)
 410 0152 4CE5      		ldi r20,hlo8(0x425c0000)
 411 0154 52E4      		ldi r21,hhi8(0x425c0000)
 412 0156 0E94 0000 		call __gtsf2
 413 015a 1816      		cp __zero_reg__,r24
 414 015c 04F4      		brge .L71
 415               		.stabn	68,0,194,.LM41-.LFBB6
 416               	.LM41:
 417 015e 80E4      		ldi r24,lo8(64)
 418 0160 00C0      		rjmp .L82
 419               	.L71:
 195:main.c        **** 	else if(angle>angle_segment_9){PORTD=0x45;}    //0100//-----//0000// = 40  
 420               		.stabn	68,0,195,.LM42-.LFBB6
 421               	.LM42:
 422 0162 C801      		movw r24,r16
 423 0164 B701      		movw r22,r14
 424 0166 20E0      		ldi r18,lo8(0x42480000)
 425 0168 30E0      		ldi r19,hi8(0x42480000)
 426 016a 48E4      		ldi r20,hlo8(0x42480000)
 427 016c 52E4      		ldi r21,hhi8(0x42480000)
 428 016e 0E94 0000 		call __gtsf2
 429 0172 1816      		cp __zero_reg__,r24
 430 0174 04F4      		brge .L72
 431               		.stabn	68,0,195,.LM43-.LFBB6
 432               	.LM43:
GAS LISTING /tmp/ccGhru5g.s 			page 12


 433 0176 85E4      		ldi r24,lo8(69)
 434 0178 00C0      		rjmp .L82
 435               	.L72:
 196:main.c        **** 	else if(angle>angle_segment_8){PORTD=0x50;}    //0100//-----//0101// = 45  
 436               		.stabn	68,0,196,.LM44-.LFBB6
 437               	.LM44:
 438 017a C801      		movw r24,r16
 439 017c B701      		movw r22,r14
 440 017e 20E0      		ldi r18,lo8(0x42340000)
 441 0180 30E0      		ldi r19,hi8(0x42340000)
 442 0182 44E3      		ldi r20,hlo8(0x42340000)
 443 0184 52E4      		ldi r21,hhi8(0x42340000)
 444 0186 0E94 0000 		call __gtsf2
 445 018a 1816      		cp __zero_reg__,r24
 446 018c 04F4      		brge .L73
 447               		.stabn	68,0,196,.LM45-.LFBB6
 448               	.LM45:
 449 018e 80E5      		ldi r24,lo8(80)
 450 0190 00C0      		rjmp .L82
 451               	.L73:
 197:main.c        **** 	else if(angle>angle_segment_7){PORTD=0x55;}    //0101//-----//0000// = 50   
 452               		.stabn	68,0,197,.LM46-.LFBB6
 453               	.LM46:
 454 0192 C801      		movw r24,r16
 455 0194 B701      		movw r22,r14
 456 0196 20E0      		ldi r18,lo8(0x42200000)
 457 0198 30E0      		ldi r19,hi8(0x42200000)
 458 019a 40E2      		ldi r20,hlo8(0x42200000)
 459 019c 52E4      		ldi r21,hhi8(0x42200000)
 460 019e 0E94 0000 		call __gtsf2
 461 01a2 1816      		cp __zero_reg__,r24
 462 01a4 04F4      		brge .L74
 463               		.stabn	68,0,197,.LM47-.LFBB6
 464               	.LM47:
 465 01a6 85E5      		ldi r24,lo8(85)
 466 01a8 00C0      		rjmp .L82
 467               	.L74:
 198:main.c        **** 	else if(angle>angle_segment_6){PORTD=0x60;}    //0101//-----//0101// = 55  
 468               		.stabn	68,0,198,.LM48-.LFBB6
 469               	.LM48:
 470 01aa C801      		movw r24,r16
 471 01ac B701      		movw r22,r14
 472 01ae 20E0      		ldi r18,lo8(0x420c0000)
 473 01b0 30E0      		ldi r19,hi8(0x420c0000)
 474 01b2 4CE0      		ldi r20,hlo8(0x420c0000)
 475 01b4 52E4      		ldi r21,hhi8(0x420c0000)
 476 01b6 0E94 0000 		call __gtsf2
 477 01ba 1816      		cp __zero_reg__,r24
 478 01bc 04F4      		brge .L75
 479               		.stabn	68,0,198,.LM49-.LFBB6
 480               	.LM49:
 481 01be 80E6      		ldi r24,lo8(96)
 482 01c0 00C0      		rjmp .L82
 483               	.L75:
 199:main.c        **** 	else if(angle>angle_segment_5){PORTD=0x65;}    //0110//-----//0000// = 60   
 484               		.stabn	68,0,199,.LM50-.LFBB6
 485               	.LM50:
GAS LISTING /tmp/ccGhru5g.s 			page 13


 486 01c2 C801      		movw r24,r16
 487 01c4 B701      		movw r22,r14
 488 01c6 20E0      		ldi r18,lo8(0x41f00000)
 489 01c8 30E0      		ldi r19,hi8(0x41f00000)
 490 01ca 40EF      		ldi r20,hlo8(0x41f00000)
 491 01cc 51E4      		ldi r21,hhi8(0x41f00000)
 492 01ce 0E94 0000 		call __gtsf2
 493 01d2 1816      		cp __zero_reg__,r24
 494 01d4 04F4      		brge .L76
 495               		.stabn	68,0,199,.LM51-.LFBB6
 496               	.LM51:
 497 01d6 85E6      		ldi r24,lo8(101)
 498 01d8 00C0      		rjmp .L82
 499               	.L76:
 200:main.c        **** 	else if(angle>angle_segment_4){PORTD=0x70;}    //0110//-----//0101// = 65 
 500               		.stabn	68,0,200,.LM52-.LFBB6
 501               	.LM52:
 502 01da C801      		movw r24,r16
 503 01dc B701      		movw r22,r14
 504 01de 20E0      		ldi r18,lo8(0x41c80000)
 505 01e0 30E0      		ldi r19,hi8(0x41c80000)
 506 01e2 48EC      		ldi r20,hlo8(0x41c80000)
 507 01e4 51E4      		ldi r21,hhi8(0x41c80000)
 508 01e6 0E94 0000 		call __gtsf2
 509 01ea 1816      		cp __zero_reg__,r24
 510 01ec 04F4      		brge .L77
 511               		.stabn	68,0,200,.LM53-.LFBB6
 512               	.LM53:
 513 01ee 80E7      		ldi r24,lo8(112)
 514 01f0 00C0      		rjmp .L82
 515               	.L77:
 201:main.c        **** 	else if(angle>angle_segment_3){PORTD=0x75;}    //0111//-----//0000// = 70 
 516               		.stabn	68,0,201,.LM54-.LFBB6
 517               	.LM54:
 518 01f2 C801      		movw r24,r16
 519 01f4 B701      		movw r22,r14
 520 01f6 20E0      		ldi r18,lo8(0x41a00000)
 521 01f8 30E0      		ldi r19,hi8(0x41a00000)
 522 01fa 40EA      		ldi r20,hlo8(0x41a00000)
 523 01fc 51E4      		ldi r21,hhi8(0x41a00000)
 524 01fe 0E94 0000 		call __gtsf2
 525 0202 1816      		cp __zero_reg__,r24
 526 0204 04F4      		brge .L78
 527               		.stabn	68,0,201,.LM55-.LFBB6
 528               	.LM55:
 529 0206 85E7      		ldi r24,lo8(117)
 530 0208 00C0      		rjmp .L82
 531               	.L78:
 202:main.c        **** 	else if(angle>angle_segment_2){PORTD=0x80;}    //0111//-----//0101// = 75
 532               		.stabn	68,0,202,.LM56-.LFBB6
 533               	.LM56:
 534 020a C801      		movw r24,r16
 535 020c B701      		movw r22,r14
 536 020e 20E0      		ldi r18,lo8(0x41700000)
 537 0210 30E0      		ldi r19,hi8(0x41700000)
 538 0212 40E7      		ldi r20,hlo8(0x41700000)
 539 0214 51E4      		ldi r21,hhi8(0x41700000)
GAS LISTING /tmp/ccGhru5g.s 			page 14


 540 0216 0E94 0000 		call __gtsf2
 541 021a 1816      		cp __zero_reg__,r24
 542 021c 04F4      		brge .L79
 543               		.stabn	68,0,202,.LM57-.LFBB6
 544               	.LM57:
 545 021e 80E8      		ldi r24,lo8(-128)
 546 0220 00C0      		rjmp .L82
 547               	.L79:
 203:main.c        **** 	else if(angle>angle_segment_1){PORTD=0x85;}    //1000//-----//0000// = 80 
 548               		.stabn	68,0,203,.LM58-.LFBB6
 549               	.LM58:
 550 0222 C801      		movw r24,r16
 551 0224 B701      		movw r22,r14
 552 0226 20E0      		ldi r18,lo8(0x41200000)
 553 0228 30E0      		ldi r19,hi8(0x41200000)
 554 022a 40E2      		ldi r20,hlo8(0x41200000)
 555 022c 51E4      		ldi r21,hhi8(0x41200000)
 556 022e 0E94 0000 		call __gtsf2
 557 0232 1816      		cp __zero_reg__,r24
 558 0234 04F4      		brge .L80
 559               		.stabn	68,0,203,.LM59-.LFBB6
 560               	.LM59:
 561 0236 85E8      		ldi r24,lo8(-123)
 562 0238 00C0      		rjmp .L82
 563               	.L80:
 204:main.c        **** 	else if(angle>angle_segment_0){PORTD=0x90;}    //1000//-----//0101// = 85  
 564               		.stabn	68,0,204,.LM60-.LFBB6
 565               	.LM60:
 566 023a C801      		movw r24,r16
 567 023c B701      		movw r22,r14
 568 023e 20E0      		ldi r18,lo8(0x40a00000)
 569 0240 30E0      		ldi r19,hi8(0x40a00000)
 570 0242 40EA      		ldi r20,hlo8(0x40a00000)
 571 0244 50E4      		ldi r21,hhi8(0x40a00000)
 572 0246 0E94 0000 		call __gtsf2
 573 024a 1816      		cp __zero_reg__,r24
 574 024c 04F4      		brge .L81
 575               		.stabn	68,0,204,.LM61-.LFBB6
 576               	.LM61:
 577 024e 80E9      		ldi r24,lo8(-112)
 578               	.L82:
 579 0250 82BB      		out 50-32,r24
 580 0252 00C0      		rjmp .L8
 581               	.L81:
 205:main.c        **** 	else {PORTD=0x00;}  
 582               		.stabn	68,0,205,.LM62-.LFBB6
 583               	.LM62:
 584 0254 12BA      		out 50-32,__zero_reg__
 585               	.L8:
 586               	/* epilogue start */
 206:main.c        **** }
 587               		.stabn	68,0,206,.LM63-.LFBB6
 588               	.LM63:
 589 0256 1F91      		pop r17
 590 0258 0F91      		pop r16
 591 025a FF90      		pop r15
 592 025c EF90      		pop r14
GAS LISTING /tmp/ccGhru5g.s 			page 15


 593 025e 0895      		ret
 594               		.size	print_Angle_Binary, .-print_Angle_Binary
 595               	.Lscope6:
 596               		.stabs	"",36,0,0,.Lscope6-.LFBB6
 597               		.stabd	78,0,0
 598               		.stabs	"print_Distance:F(0,15)",36,0,210,print_Distance
 599               		.stabs	"r:P(0,13)",64,0,210,14
 600               	.global	print_Distance
 601               		.type	print_Distance, @function
 602               	print_Distance:
 603               		.stabd	46,0,0
 207:main.c        **** //------------------------------------------------------//
 208:main.c        **** 
 209:main.c        **** //-------------------Print Distance---------------------//
 210:main.c        **** void print_Distance(double r){
 604               		.stabn	68,0,210,.LM64-.LFBB7
 605               	.LM64:
 606               	.LFBB7:
 607 0260 EF92      		push r14
 608 0262 FF92      		push r15
 609 0264 0F93      		push r16
 610 0266 1F93      		push r17
 611               	/* prologue: function */
 612               	/* frame size = 0 */
 613               	/* stack size = 4 */
 614               	.L__stack_usage = 4
 615 0268 7B01      		movw r14,r22
 616 026a 8C01      		movw r16,r24
 211:main.c        **** 
 212:main.c        **** 	double r_segment_0=5;
 213:main.c        **** 	double r_segment_1=10;
 214:main.c        **** 	double r_segment_2=15;
 215:main.c        **** 	double r_segment_3=20;
 216:main.c        **** 	double r_segment_4=25;
 217:main.c        **** 	double r_segment_5=30;
 218:main.c        **** 	double r_segment_6=35;
 219:main.c        **** 	double r_segment_7=40;
 220:main.c        **** 	double r_segment_8=45;
 221:main.c        **** 	double r_segment_9=50;
 222:main.c        **** 	double r_segment_10=55;
 223:main.c        **** 	double r_segment_11=60;
 224:main.c        **** 	double r_segment_12=65;
 225:main.c        **** 	double r_segment_13=70;
 226:main.c        **** 	double r_segment_14=75;
 227:main.c        **** 	double r_segment_15=80;
 228:main.c        **** 	double r_segment_16=85;
 229:main.c        **** 	double r_segment_17=90;
 230:main.c        **** 
 231:main.c        **** 
 232:main.c        **** 	if(r>r_segment_17){PORTD=0x00;}        //0000//-----//0000// = 00
 617               		.stabn	68,0,232,.LM65-.LFBB7
 618               	.LM65:
 619 026c 20E0      		ldi r18,lo8(0x42b40000)
 620 026e 30E0      		ldi r19,hi8(0x42b40000)
 621 0270 44EB      		ldi r20,hlo8(0x42b40000)
 622 0272 52E4      		ldi r21,hhi8(0x42b40000)
 623 0274 0E94 0000 		call __gtsf2
GAS LISTING /tmp/ccGhru5g.s 			page 16


 624 0278 1816      		cp __zero_reg__,r24
 625 027a 04F4      		brge .+2
 626 027c 00C0      		rjmp .L156
 627               	.L139:
 233:main.c        **** 	else if(r>r_segment_16){PORTD=0x05;}   //0000//-----//0101// = 05
 628               		.stabn	68,0,233,.LM66-.LFBB7
 629               	.LM66:
 630 027e C801      		movw r24,r16
 631 0280 B701      		movw r22,r14
 632 0282 20E0      		ldi r18,lo8(0x42aa0000)
 633 0284 30E0      		ldi r19,hi8(0x42aa0000)
 634 0286 4AEA      		ldi r20,hlo8(0x42aa0000)
 635 0288 52E4      		ldi r21,hhi8(0x42aa0000)
 636 028a 0E94 0000 		call __gtsf2
 637 028e 1816      		cp __zero_reg__,r24
 638 0290 04F4      		brge .L140
 639               		.stabn	68,0,233,.LM67-.LFBB7
 640               	.LM67:
 641 0292 85E0      		ldi r24,lo8(5)
 642 0294 00C0      		rjmp .L157
 643               	.L140:
 234:main.c        **** 	else if(r>r_segment_15){PORTD=0x10;}   //0001//-----//0000// = 10  
 644               		.stabn	68,0,234,.LM68-.LFBB7
 645               	.LM68:
 646 0296 C801      		movw r24,r16
 647 0298 B701      		movw r22,r14
 648 029a 20E0      		ldi r18,lo8(0x42a00000)
 649 029c 30E0      		ldi r19,hi8(0x42a00000)
 650 029e 40EA      		ldi r20,hlo8(0x42a00000)
 651 02a0 52E4      		ldi r21,hhi8(0x42a00000)
 652 02a2 0E94 0000 		call __gtsf2
 653 02a6 1816      		cp __zero_reg__,r24
 654 02a8 04F4      		brge .L141
 655               		.stabn	68,0,234,.LM69-.LFBB7
 656               	.LM69:
 657 02aa 80E1      		ldi r24,lo8(16)
 658 02ac 00C0      		rjmp .L157
 659               	.L141:
 235:main.c        **** 	else if(r>r_segment_14){PORTD=0x15;}   //0001//-----//0101// = 15 
 660               		.stabn	68,0,235,.LM70-.LFBB7
 661               	.LM70:
 662 02ae C801      		movw r24,r16
 663 02b0 B701      		movw r22,r14
 664 02b2 20E0      		ldi r18,lo8(0x42960000)
 665 02b4 30E0      		ldi r19,hi8(0x42960000)
 666 02b6 46E9      		ldi r20,hlo8(0x42960000)
 667 02b8 52E4      		ldi r21,hhi8(0x42960000)
 668 02ba 0E94 0000 		call __gtsf2
 669 02be 1816      		cp __zero_reg__,r24
 670 02c0 04F4      		brge .L142
 671               		.stabn	68,0,235,.LM71-.LFBB7
 672               	.LM71:
 673 02c2 85E1      		ldi r24,lo8(21)
 674 02c4 00C0      		rjmp .L157
 675               	.L142:
 236:main.c        **** 	else if(r>r_segment_13){PORTD=0x20;}   //0010//-----//0000// = 10  
 676               		.stabn	68,0,236,.LM72-.LFBB7
GAS LISTING /tmp/ccGhru5g.s 			page 17


 677               	.LM72:
 678 02c6 C801      		movw r24,r16
 679 02c8 B701      		movw r22,r14
 680 02ca 20E0      		ldi r18,lo8(0x428c0000)
 681 02cc 30E0      		ldi r19,hi8(0x428c0000)
 682 02ce 4CE8      		ldi r20,hlo8(0x428c0000)
 683 02d0 52E4      		ldi r21,hhi8(0x428c0000)
 684 02d2 0E94 0000 		call __gtsf2
 685 02d6 1816      		cp __zero_reg__,r24
 686 02d8 04F4      		brge .L143
 687               		.stabn	68,0,236,.LM73-.LFBB7
 688               	.LM73:
 689 02da 80E2      		ldi r24,lo8(32)
 690 02dc 00C0      		rjmp .L157
 691               	.L143:
 237:main.c        **** 	else if(r>r_segment_12){PORTD=0x25;}   //0010//-----//0101// = 25  
 692               		.stabn	68,0,237,.LM74-.LFBB7
 693               	.LM74:
 694 02de C801      		movw r24,r16
 695 02e0 B701      		movw r22,r14
 696 02e2 20E0      		ldi r18,lo8(0x42820000)
 697 02e4 30E0      		ldi r19,hi8(0x42820000)
 698 02e6 42E8      		ldi r20,hlo8(0x42820000)
 699 02e8 52E4      		ldi r21,hhi8(0x42820000)
 700 02ea 0E94 0000 		call __gtsf2
 701 02ee 1816      		cp __zero_reg__,r24
 702 02f0 04F4      		brge .L144
 703               		.stabn	68,0,237,.LM75-.LFBB7
 704               	.LM75:
 705 02f2 85E2      		ldi r24,lo8(37)
 706 02f4 00C0      		rjmp .L157
 707               	.L144:
 238:main.c        **** 	else if(r>r_segment_11){PORTD=0x30;}   //0011//-----//0000// = 30  
 708               		.stabn	68,0,238,.LM76-.LFBB7
 709               	.LM76:
 710 02f6 C801      		movw r24,r16
 711 02f8 B701      		movw r22,r14
 712 02fa 20E0      		ldi r18,lo8(0x42700000)
 713 02fc 30E0      		ldi r19,hi8(0x42700000)
 714 02fe 40E7      		ldi r20,hlo8(0x42700000)
 715 0300 52E4      		ldi r21,hhi8(0x42700000)
 716 0302 0E94 0000 		call __gtsf2
 717 0306 1816      		cp __zero_reg__,r24
 718 0308 04F4      		brge .L145
 719               		.stabn	68,0,238,.LM77-.LFBB7
 720               	.LM77:
 721 030a 80E3      		ldi r24,lo8(48)
 722 030c 00C0      		rjmp .L157
 723               	.L145:
 239:main.c        **** 	else if(r>r_segment_10){PORTD=0x35;}   //0011//-----//0101// = 35 
 724               		.stabn	68,0,239,.LM78-.LFBB7
 725               	.LM78:
 726 030e C801      		movw r24,r16
 727 0310 B701      		movw r22,r14
 728 0312 20E0      		ldi r18,lo8(0x425c0000)
 729 0314 30E0      		ldi r19,hi8(0x425c0000)
 730 0316 4CE5      		ldi r20,hlo8(0x425c0000)
GAS LISTING /tmp/ccGhru5g.s 			page 18


 731 0318 52E4      		ldi r21,hhi8(0x425c0000)
 732 031a 0E94 0000 		call __gtsf2
 733 031e 1816      		cp __zero_reg__,r24
 734 0320 04F4      		brge .L146
 735               		.stabn	68,0,239,.LM79-.LFBB7
 736               	.LM79:
 737 0322 85E3      		ldi r24,lo8(53)
 738 0324 00C0      		rjmp .L157
 739               	.L146:
 240:main.c        **** 	else if(r>r_segment_9){PORTD=0x45;}    //0100//-----//0000// = 40  
 740               		.stabn	68,0,240,.LM80-.LFBB7
 741               	.LM80:
 742 0326 C801      		movw r24,r16
 743 0328 B701      		movw r22,r14
 744 032a 20E0      		ldi r18,lo8(0x42480000)
 745 032c 30E0      		ldi r19,hi8(0x42480000)
 746 032e 48E4      		ldi r20,hlo8(0x42480000)
 747 0330 52E4      		ldi r21,hhi8(0x42480000)
 748 0332 0E94 0000 		call __gtsf2
 749 0336 1816      		cp __zero_reg__,r24
 750 0338 04F4      		brge .L147
 751               		.stabn	68,0,240,.LM81-.LFBB7
 752               	.LM81:
 753 033a 85E4      		ldi r24,lo8(69)
 754 033c 00C0      		rjmp .L157
 755               	.L147:
 241:main.c        **** 	else if(r>r_segment_8){PORTD=0x50;}    //0100//-----//0101// = 45  
 756               		.stabn	68,0,241,.LM82-.LFBB7
 757               	.LM82:
 758 033e C801      		movw r24,r16
 759 0340 B701      		movw r22,r14
 760 0342 20E0      		ldi r18,lo8(0x42340000)
 761 0344 30E0      		ldi r19,hi8(0x42340000)
 762 0346 44E3      		ldi r20,hlo8(0x42340000)
 763 0348 52E4      		ldi r21,hhi8(0x42340000)
 764 034a 0E94 0000 		call __gtsf2
 765 034e 1816      		cp __zero_reg__,r24
 766 0350 04F4      		brge .L148
 767               		.stabn	68,0,241,.LM83-.LFBB7
 768               	.LM83:
 769 0352 80E5      		ldi r24,lo8(80)
 770 0354 00C0      		rjmp .L157
 771               	.L148:
 242:main.c        **** 	else if(r>r_segment_7){PORTD=0x55;}    //0101//-----//0000// = 50   
 772               		.stabn	68,0,242,.LM84-.LFBB7
 773               	.LM84:
 774 0356 C801      		movw r24,r16
 775 0358 B701      		movw r22,r14
 776 035a 20E0      		ldi r18,lo8(0x42200000)
 777 035c 30E0      		ldi r19,hi8(0x42200000)
 778 035e 40E2      		ldi r20,hlo8(0x42200000)
 779 0360 52E4      		ldi r21,hhi8(0x42200000)
 780 0362 0E94 0000 		call __gtsf2
 781 0366 1816      		cp __zero_reg__,r24
 782 0368 04F4      		brge .L149
 783               		.stabn	68,0,242,.LM85-.LFBB7
 784               	.LM85:
GAS LISTING /tmp/ccGhru5g.s 			page 19


 785 036a 85E5      		ldi r24,lo8(85)
 786 036c 00C0      		rjmp .L157
 787               	.L149:
 243:main.c        **** 	else if(r>r_segment_6){PORTD=0x60;}    //0101//-----//0101// = 55  
 788               		.stabn	68,0,243,.LM86-.LFBB7
 789               	.LM86:
 790 036e C801      		movw r24,r16
 791 0370 B701      		movw r22,r14
 792 0372 20E0      		ldi r18,lo8(0x420c0000)
 793 0374 30E0      		ldi r19,hi8(0x420c0000)
 794 0376 4CE0      		ldi r20,hlo8(0x420c0000)
 795 0378 52E4      		ldi r21,hhi8(0x420c0000)
 796 037a 0E94 0000 		call __gtsf2
 797 037e 1816      		cp __zero_reg__,r24
 798 0380 04F4      		brge .L150
 799               		.stabn	68,0,243,.LM87-.LFBB7
 800               	.LM87:
 801 0382 80E6      		ldi r24,lo8(96)
 802 0384 00C0      		rjmp .L157
 803               	.L150:
 244:main.c        **** 	else if(r>r_segment_5){PORTD=0x65;}    //0110//-----//0000// = 60   
 804               		.stabn	68,0,244,.LM88-.LFBB7
 805               	.LM88:
 806 0386 C801      		movw r24,r16
 807 0388 B701      		movw r22,r14
 808 038a 20E0      		ldi r18,lo8(0x41f00000)
 809 038c 30E0      		ldi r19,hi8(0x41f00000)
 810 038e 40EF      		ldi r20,hlo8(0x41f00000)
 811 0390 51E4      		ldi r21,hhi8(0x41f00000)
 812 0392 0E94 0000 		call __gtsf2
 813 0396 1816      		cp __zero_reg__,r24
 814 0398 04F4      		brge .L151
 815               		.stabn	68,0,244,.LM89-.LFBB7
 816               	.LM89:
 817 039a 85E6      		ldi r24,lo8(101)
 818 039c 00C0      		rjmp .L157
 819               	.L151:
 245:main.c        **** 	else if(r>r_segment_4){PORTD=0x70;}    //0110//-----//0101// = 65 
 820               		.stabn	68,0,245,.LM90-.LFBB7
 821               	.LM90:
 822 039e C801      		movw r24,r16
 823 03a0 B701      		movw r22,r14
 824 03a2 20E0      		ldi r18,lo8(0x41c80000)
 825 03a4 30E0      		ldi r19,hi8(0x41c80000)
 826 03a6 48EC      		ldi r20,hlo8(0x41c80000)
 827 03a8 51E4      		ldi r21,hhi8(0x41c80000)
 828 03aa 0E94 0000 		call __gtsf2
 829 03ae 1816      		cp __zero_reg__,r24
 830 03b0 04F4      		brge .L152
 831               		.stabn	68,0,245,.LM91-.LFBB7
 832               	.LM91:
 833 03b2 80E7      		ldi r24,lo8(112)
 834 03b4 00C0      		rjmp .L157
 835               	.L152:
 246:main.c        **** 	else if(r>r_segment_3){PORTD=0x75;}    //0111//-----//0000// = 70 
 836               		.stabn	68,0,246,.LM92-.LFBB7
 837               	.LM92:
GAS LISTING /tmp/ccGhru5g.s 			page 20


 838 03b6 C801      		movw r24,r16
 839 03b8 B701      		movw r22,r14
 840 03ba 20E0      		ldi r18,lo8(0x41a00000)
 841 03bc 30E0      		ldi r19,hi8(0x41a00000)
 842 03be 40EA      		ldi r20,hlo8(0x41a00000)
 843 03c0 51E4      		ldi r21,hhi8(0x41a00000)
 844 03c2 0E94 0000 		call __gtsf2
 845 03c6 1816      		cp __zero_reg__,r24
 846 03c8 04F4      		brge .L153
 847               		.stabn	68,0,246,.LM93-.LFBB7
 848               	.LM93:
 849 03ca 85E7      		ldi r24,lo8(117)
 850 03cc 00C0      		rjmp .L157
 851               	.L153:
 247:main.c        **** 	else if(r>r_segment_2){PORTD=0x80;}    //0111//-----//0101// = 75
 852               		.stabn	68,0,247,.LM94-.LFBB7
 853               	.LM94:
 854 03ce C801      		movw r24,r16
 855 03d0 B701      		movw r22,r14
 856 03d2 20E0      		ldi r18,lo8(0x41700000)
 857 03d4 30E0      		ldi r19,hi8(0x41700000)
 858 03d6 40E7      		ldi r20,hlo8(0x41700000)
 859 03d8 51E4      		ldi r21,hhi8(0x41700000)
 860 03da 0E94 0000 		call __gtsf2
 861 03de 1816      		cp __zero_reg__,r24
 862 03e0 04F4      		brge .L154
 863               		.stabn	68,0,247,.LM95-.LFBB7
 864               	.LM95:
 865 03e2 80E8      		ldi r24,lo8(-128)
 866 03e4 00C0      		rjmp .L157
 867               	.L154:
 248:main.c        **** 	else if(r>r_segment_1){PORTD=0x85;}    //1000//-----//0000// = 80 
 868               		.stabn	68,0,248,.LM96-.LFBB7
 869               	.LM96:
 870 03e6 C801      		movw r24,r16
 871 03e8 B701      		movw r22,r14
 872 03ea 20E0      		ldi r18,lo8(0x41200000)
 873 03ec 30E0      		ldi r19,hi8(0x41200000)
 874 03ee 40E2      		ldi r20,hlo8(0x41200000)
 875 03f0 51E4      		ldi r21,hhi8(0x41200000)
 876 03f2 0E94 0000 		call __gtsf2
 877 03f6 1816      		cp __zero_reg__,r24
 878 03f8 04F4      		brge .L155
 879               		.stabn	68,0,248,.LM97-.LFBB7
 880               	.LM97:
 881 03fa 85E8      		ldi r24,lo8(-123)
 882 03fc 00C0      		rjmp .L157
 883               	.L155:
 249:main.c        **** 	else if(r>r_segment_0){PORTD=0x90;}    //1000//-----//0101// = 85  
 884               		.stabn	68,0,249,.LM98-.LFBB7
 885               	.LM98:
 886 03fe C801      		movw r24,r16
 887 0400 B701      		movw r22,r14
 888 0402 20E0      		ldi r18,lo8(0x40a00000)
 889 0404 30E0      		ldi r19,hi8(0x40a00000)
 890 0406 40EA      		ldi r20,hlo8(0x40a00000)
 891 0408 50E4      		ldi r21,hhi8(0x40a00000)
GAS LISTING /tmp/ccGhru5g.s 			page 21


 892 040a 0E94 0000 		call __gtsf2
 893 040e 1816      		cp __zero_reg__,r24
 894 0410 04F4      		brge .L156
 895               		.stabn	68,0,249,.LM99-.LFBB7
 896               	.LM99:
 897 0412 80E9      		ldi r24,lo8(-112)
 898               	.L157:
 899 0414 82BB      		out 50-32,r24
 900 0416 00C0      		rjmp .L83
 901               	.L156:
 250:main.c        **** 	else {PORTD=0x00;}  
 902               		.stabn	68,0,250,.LM100-.LFBB7
 903               	.LM100:
 904 0418 12BA      		out 50-32,__zero_reg__
 905               	.L83:
 906               	/* epilogue start */
 251:main.c        **** }
 907               		.stabn	68,0,251,.LM101-.LFBB7
 908               	.LM101:
 909 041a 1F91      		pop r17
 910 041c 0F91      		pop r16
 911 041e FF90      		pop r15
 912 0420 EF90      		pop r14
 913 0422 0895      		ret
 914               		.size	print_Distance, .-print_Distance
 915               	.Lscope7:
 916               		.stabs	"",36,0,0,.Lscope7-.LFBB7
 917               		.stabd	78,0,0
 918               		.stabs	"print_Time_Binary:F(0,15)",36,0,257,print_Time_Binary
 919               		.stabs	"time:P(0,1)",64,0,257,24
 920               	.global	print_Time_Binary
 921               		.type	print_Time_Binary, @function
 922               	print_Time_Binary:
 923               		.stabd	46,0,0
 252:main.c        **** 
 253:main.c        **** 
 254:main.c        **** //------------------------------------------------------//
 255:main.c        **** //----------------------Print time---------------------//
 256:main.c        **** //------------------------------------------------------//
 257:main.c        **** void print_Time_Binary(int time){
 924               		.stabn	68,0,257,.LM102-.LFBB8
 925               	.LM102:
 926               	.LFBB8:
 927               	/* prologue: function */
 928               	/* frame size = 0 */
 929               	/* stack size = 0 */
 930               	.L__stack_usage = 0
 258:main.c        **** int time_segment_1=1;
 259:main.c        **** int time_segment_2=2;
 260:main.c        **** int time_segment_3=3;
 261:main.c        **** int time_segment_4=4;
 262:main.c        **** int time_segment_5=5;
 263:main.c        **** int time_segment_6=6;
 264:main.c        **** int time_segment_7=7;
 265:main.c        **** int times=time;
 266:main.c        **** if(times>time_segment_7){	sbi(PORTC,PC7);sbi(PORTC,PC1);sbi(PORTC,PC0);} //PORC=111//
 931               		.stabn	68,0,266,.LM103-.LFBB8
GAS LISTING /tmp/ccGhru5g.s 			page 22


 932               	.LM103:
 933 0424 8830      		cpi r24,8
 934 0426 9105      		cpc r25,__zero_reg__
 935 0428 04F0      		brlt .L159
 936               		.stabn	68,0,266,.LM104-.LFBB8
 937               	.LM104:
 938 042a AF9A      		sbi 53-32,7
 939 042c 00C0      		rjmp .L169
 940               	.L159:
 267:main.c        **** else if(times>time_segment_6){  sbi(PORTC,PC7);sbi(PORTC,PC1);cbi(PORTC,PC0);} //PORD=110//
 941               		.stabn	68,0,267,.LM105-.LFBB8
 942               	.LM105:
 943 042e 8730      		cpi r24,7
 944 0430 9105      		cpc r25,__zero_reg__
 945 0432 01F4      		brne .L161
 946               		.stabn	68,0,267,.LM106-.LFBB8
 947               	.LM106:
 948 0434 AF9A      		sbi 53-32,7
 949 0436 00C0      		rjmp .L171
 950               	.L161:
 268:main.c        **** else if(times>time_segment_5){  sbi(PORTC,PC7);cbi(PORTC,PC1);sbi(PORTC,PC0);} //PORD=101//
 951               		.stabn	68,0,268,.LM107-.LFBB8
 952               	.LM107:
 953 0438 8630      		cpi r24,6
 954 043a 9105      		cpc r25,__zero_reg__
 955 043c 01F4      		brne .L162
 956               		.stabn	68,0,268,.LM108-.LFBB8
 957               	.LM108:
 958 043e AF9A      		sbi 53-32,7
 959 0440 00C0      		rjmp .L170
 960               	.L162:
 269:main.c        **** else if(times>time_segment_4){  sbi(PORTC,PC7);cbi(PORTC,PC1);cbi(PORTC,PC0);} //PORD=100//
 961               		.stabn	68,0,269,.LM109-.LFBB8
 962               	.LM109:
 963 0442 8530      		cpi r24,5
 964 0444 9105      		cpc r25,__zero_reg__
 965 0446 01F4      		brne .L163
 966               		.stabn	68,0,269,.LM110-.LFBB8
 967               	.LM110:
 968 0448 AF9A      		sbi 53-32,7
 969 044a 00C0      		rjmp .L172
 970               	.L163:
 270:main.c        **** else if(times>time_segment_3){  cbi(PORTC,PC7);sbi(PORTC,PC1);sbi(PORTC,PC0);} //PORD=011//
 971               		.stabn	68,0,270,.LM111-.LFBB8
 972               	.LM111:
 973 044c 8430      		cpi r24,4
 974 044e 9105      		cpc r25,__zero_reg__
 975 0450 01F4      		brne .L164
 976               		.stabn	68,0,270,.LM112-.LFBB8
 977               	.LM112:
 978 0452 AF98      		cbi 53-32,7
 979               	.L169:
 980 0454 A99A      		sbi 53-32,1
 981 0456 00C0      		rjmp .L168
 982               	.L164:
 271:main.c        **** else if(times>time_segment_2){  cbi(PORTC,PC7);sbi(PORTC,PC1);cbi(PORTC,PC0);} //PORD=010//
 983               		.stabn	68,0,271,.LM113-.LFBB8
GAS LISTING /tmp/ccGhru5g.s 			page 23


 984               	.LM113:
 985 0458 8330      		cpi r24,3
 986 045a 9105      		cpc r25,__zero_reg__
 987 045c 01F4      		brne .L165
 988               		.stabn	68,0,271,.LM114-.LFBB8
 989               	.LM114:
 990 045e AF98      		cbi 53-32,7
 991               	.L171:
 992 0460 A99A      		sbi 53-32,1
 993 0462 00C0      		rjmp .L167
 994               	.L165:
 272:main.c        **** else if(times>time_segment_1){  cbi(PORTC,PC7);cbi(PORTC,PC1);sbi(PORTC,PC0);} //PORD=001//
 995               		.stabn	68,0,272,.LM115-.LFBB8
 996               	.LM115:
 997 0464 8230      		cpi r24,2
 998 0466 9105      		cpc r25,__zero_reg__
 999 0468 01F4      		brne .L166
 1000               		.stabn	68,0,272,.LM116-.LFBB8
 1001               	.LM116:
 1002 046a AF98      		cbi 53-32,7
 1003               	.L170:
 1004 046c A998      		cbi 53-32,1
 1005               	.L168:
 1006 046e A89A      		sbi 53-32,0
 1007 0470 0895      		ret
 1008               	.L166:
 273:main.c        **** else {			        cbi(PORTC,PC7);cbi(PORTC,PC1);cbi(PORTC,PC0);} //PORD=000//
 1009               		.stabn	68,0,273,.LM117-.LFBB8
 1010               	.LM117:
 1011 0472 AF98      		cbi 53-32,7
 1012               	.L172:
 1013 0474 A998      		cbi 53-32,1
 1014               	.L167:
 1015 0476 A898      		cbi 53-32,0
 1016 0478 0895      		ret
 1017               		.size	print_Time_Binary, .-print_Time_Binary
 1018               	.Lscope8:
 1019               		.stabs	"",36,0,0,.Lscope8-.LFBB8
 1020               		.stabd	78,0,0
 1021               		.stabs	"main:F(0,15)",36,0,43,main
 1022               	.global	main
 1023               		.type	main, @function
 1024               	main:
 1025               		.stabd	46,0,0
  44:main.c        **** {
 1026               		.stabn	68,0,44,.LM118-.LFBB9
 1027               	.LM118:
 1028               	.LFBB9:
 1029 047a 6F92      		push r6
 1030 047c 7F92      		push r7
 1031 047e 8F92      		push r8
 1032 0480 9F92      		push r9
 1033 0482 AF92      		push r10
 1034 0484 BF92      		push r11
 1035 0486 CF92      		push r12
 1036 0488 DF92      		push r13
 1037 048a EF92      		push r14
GAS LISTING /tmp/ccGhru5g.s 			page 24


 1038 048c FF92      		push r15
 1039 048e 0F93      		push r16
 1040 0490 1F93      		push r17
 1041 0492 DF93      		push r29
 1042 0494 CF93      		push r28
 1043 0496 CDB7      		in r28,__SP_L__
 1044 0498 DEB7      		in r29,__SP_H__
 1045 049a 6497      		sbiw r28,20
 1046 049c 0FB6      		in __tmp_reg__,__SREG__
 1047 049e F894      		cli
 1048 04a0 DEBF      		out __SP_H__,r29
 1049 04a2 0FBE      		out __SREG__,__tmp_reg__
 1050 04a4 CDBF      		out __SP_L__,r28
 1051               	/* prologue: function */
 1052               	/* frame size = 20 */
 1053               	/* stack size = 34 */
 1054               	.L__stack_usage = 34
  45:main.c        **** 	init_ports(); // Inicializa puertos A=>ADC, B=Inputs ,C=Outputs , D=Outputs
 1055               		.stabn	68,0,45,.LM119-.LFBB9
 1056               	.LM119:
 1057 04a6 0E94 0000 		call init_ports
  54:main.c        **** 	double ms_time=0.0;
 1058               		.stabn	68,0,54,.LM120-.LFBB9
 1059               	.LM120:
 1060 04aa EE24      		clr r14
 1061 04ac FF24      		clr r15
 1062 04ae DD24      		clr r13
 1063 04b0 CC24      		clr r12
  52:main.c        **** 	int time=0;
 1064               		.stabn	68,0,52,.LM121-.LFBB9
 1065               	.LM121:
 1066 04b2 AA24      		clr r10
 1067 04b4 BB24      		clr r11
  45:main.c        **** 	init_ports(); // Inicializa puertos A=>ADC, B=Inputs ,C=Outputs , D=Outputs
 1068               		.stabn	68,0,45,.LM122-.LFBB9
 1069               	.LM122:
 1070 04b6 3E01      		movw r6,r28
 1071 04b8 0894      		sec
 1072 04ba 611C      		adc r6,__zero_reg__
 1073 04bc 711C      		adc r7,__zero_reg__
 1074               	.L183:
 1075 04be 4301      		movw r8,r6
  59:main.c        **** 	{  for(i=0;i<6;i++){select_ADC_port(i); /*Seleccionar puerto de entrada ADC*/ a[i]=ADCH-81;} // Ca
 1076               		.stabn	68,0,59,.LM123-.LFBB9
 1077               	.LM123:
 1078 04c0 00E0      		ldi r16,lo8(0)
 1079 04c2 10E0      		ldi r17,hi8(0)
 1080               	.L174:
  59:main.c        **** 	{  for(i=0;i<6;i++){select_ADC_port(i); /*Seleccionar puerto de entrada ADC*/ a[i]=ADCH-81;} // Ca
 1081               		.stabn	68,0,59,.LM124-.LFBB9
 1082               	.LM124:
 1083 04c4 C801      		movw r24,r16
 1084 04c6 0E94 0000 		call select_ADC_port
 1085 04ca 65B1      		in r22,37-32
 1086 04cc 70E0      		ldi r23,lo8(0)
 1087 04ce 6155      		subi r22,lo8(-(-81))
 1088 04d0 7040      		sbci r23,hi8(-(-81))
GAS LISTING /tmp/ccGhru5g.s 			page 25


 1089 04d2 8827      		clr r24
 1090 04d4 77FD      		sbrc r23,7
 1091 04d6 8095      		com r24
 1092 04d8 982F      		mov r25,r24
 1093 04da 0E94 0000 		call __floatsisf
 1094 04de F401      		movw r30,r8
 1095 04e0 6193      		st Z+,r22
 1096 04e2 7193      		st Z+,r23
 1097 04e4 8193      		st Z+,r24
 1098 04e6 9193      		st Z+,r25
 1099 04e8 4F01      		movw r8,r30
 1100 04ea 0F5F      		subi r16,lo8(-(1))
 1101 04ec 1F4F      		sbci r17,hi8(-(1))
 1102 04ee 0630      		cpi r16,6
 1103 04f0 1105      		cpc r17,__zero_reg__
 1104 04f2 01F4      		brne .L174
  60:main.c        **** 	a[3]=a[3]+81;
 1105               		.stabn	68,0,60,.LM125-.LFBB9
 1106               	.LM125:
 1107 04f4 6D85      		ldd r22,Y+13
 1108 04f6 7E85      		ldd r23,Y+14
 1109 04f8 8F85      		ldd r24,Y+15
 1110 04fa 9889      		ldd r25,Y+16
 1111 04fc 20E0      		ldi r18,lo8(0x42a20000)
 1112 04fe 30E0      		ldi r19,hi8(0x42a20000)
 1113 0500 42EA      		ldi r20,hlo8(0x42a20000)
 1114 0502 52E4      		ldi r21,hhi8(0x42a20000)
 1115 0504 0E94 0000 		call __addsf3
 1116 0508 262F      		mov r18,r22
 1117 050a 372F      		mov r19,r23
 1118 050c 482F      		mov r20,r24
 1119 050e 592F      		mov r21,r25
 1120 0510 2D87      		std Y+13,r18
 1121 0512 3E87      		std Y+14,r19
 1122 0514 4F87      		std Y+15,r20
 1123 0516 588B      		std Y+16,r21
  67:main.c        **** 		if(a[3]>132){count=1;}
 1124               		.stabn	68,0,67,.LM126-.LFBB9
 1125               	.LM126:
 1126 0518 20E0      		ldi r18,lo8(0x43040000)
 1127 051a 30E0      		ldi r19,hi8(0x43040000)
 1128 051c 44E0      		ldi r20,hlo8(0x43040000)
 1129 051e 53E4      		ldi r21,hhi8(0x43040000)
 1130 0520 0E94 0000 		call __gtsf2
 1131 0524 1816      		cp __zero_reg__,r24
 1132 0526 04F0      		brlt .L183
  77:main.c        **** 				if(ms_time==10){time=time+1;ms_time=0;}else{time=time+0;}
 1133               		.stabn	68,0,77,.LM127-.LFBB9
 1134               	.LM127:
 1135 0528 9601      		movw r18,r12
 1136 052a 6E2D      		mov r22,r14
 1137 052c 7F2D      		mov r23,r15
 1138 052e 832F      		mov r24,r19
 1139 0530 9C2D      		mov r25,r12
 1140 0532 20E0      		ldi r18,lo8(0x41200000)
 1141 0534 30E0      		ldi r19,hi8(0x41200000)
 1142 0536 40E2      		ldi r20,hlo8(0x41200000)
GAS LISTING /tmp/ccGhru5g.s 			page 26


 1143 0538 51E4      		ldi r21,hhi8(0x41200000)
 1144 053a 0E94 0000 		call __eqsf2
 1145 053e 8823      		tst r24
 1146 0540 01F4      		brne .L176
  77:main.c        **** 				if(ms_time==10){time=time+1;ms_time=0;}else{time=time+0;}
 1147               		.stabn	68,0,77,.LM128-.LFBB9
 1148               	.LM128:
 1149 0542 0894      		sec
 1150 0544 A11C      		adc r10,__zero_reg__
 1151 0546 B11C      		adc r11,__zero_reg__
 1152 0548 EE24      		clr r14
 1153 054a FF24      		clr r15
 1154 054c DD24      		clr r13
 1155 054e CC24      		clr r12
 1156               	.L176:
 1157               	.LBB12:
 1158               	.LBB13:
 1159               		.stabs	"/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h",132,0,0,.Ltext1
 1160               	.Ltext1:
   1:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    All rights reserved.
   5:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
   6:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
   9:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  12:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****      distribution.
  16:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  17:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  21:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  33:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** /* $Id: delay.h.in 2189 2010-10-13 09:39:34Z aboyapati $ */
  34:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  35:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  38:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
GAS LISTING /tmp/ccGhru5g.s 			page 27


  39:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #endif
  41:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  42:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #include <math.h>
  45:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  46:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** /** \file */
  47:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     \code
  49:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     \endcode
  53:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  54:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     used.
  58:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  59:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  68:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  77:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  81:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** */
  82:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  83:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #endif
  87:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  88:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #endif
  93:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  94:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
GAS LISTING /tmp/ccGhru5g.s 			page 28


  96:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #endif
  97:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
  98:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** /**
  99:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    \ingroup util_delay
 100:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 101:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 102:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 103:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 104:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 105:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 106:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 107:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 108:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 109:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 110:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 111:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 112:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 113:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 114:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 115:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 116:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 117:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    no delay i.e., 0ms.
 118:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 119:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 120:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 121:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 122:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 123:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 124:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    to round down and round to closest integer.
 125:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 126:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 127:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 128:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay
 129:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****    although this will be deprecated in future.
 130:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 131:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h ****  */
 132:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** void
 133:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** _delay_ms(double __ms)
 134:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** {
 135:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	uint16_t __ticks;
 136:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	double __tmp ; 
 137:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && !defined(__DELAY_BACKWARD_COMPATIBLE__)
 138:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 139:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 140:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 141:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 142:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 143:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 144:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 145:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 146:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 147:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
 148:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	#else
 149:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 		//round up by default
 150:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 151:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	#endif
 152:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 
GAS LISTING /tmp/ccGhru5g.s 			page 29


 153:/usr/lib/gcc/avr/4.5.3/../../../avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 1161               		.stabn	68,0,153,.LM129-.LFBB9
 1162               	.LM129:
 1163 0550 87EA      		 ldi r24,lo8(24999)
 1164 0552 91E6      	    ldi r25,hi8(24999)
 1165 0554 0197      	    1:sbiw r24,1
 1166 0556 01F4      	    brne 1b
 1167 0558 00C0      		rjmp .
 1168 055a 0000      		nop
 1169               	.LBE13:
 1170               	.LBE12:
 1171               		.stabs	"main.c",132,0,0,.Ltext2
 1172               	.Ltext2:
  79:main.c        **** 				ms_time=ms_time+1;	
 1173               		.stabn	68,0,79,.LM130-.LFBB9
 1174               	.LM130:
 1175 055c 9601      		movw r18,r12
 1176 055e 6E2D      		mov r22,r14
 1177 0560 7F2D      		mov r23,r15
 1178 0562 832F      		mov r24,r19
 1179 0564 9C2D      		mov r25,r12
 1180 0566 20E0      		ldi r18,lo8(0x3f800000)
 1181 0568 30E0      		ldi r19,hi8(0x3f800000)
 1182 056a 40E8      		ldi r20,hlo8(0x3f800000)
 1183 056c 5FE3      		ldi r21,hhi8(0x3f800000)
 1184 056e 0E94 0000 		call __addsf3
 1185 0572 7B01      		movw r14,r22
 1186 0574 D82E      		mov r13,r24
 1187 0576 C92E      		mov r12,r25
  80:main.c        **** 				print_Time_Binary(time);
 1188               		.stabn	68,0,80,.LM131-.LFBB9
 1189               	.LM131:
 1190 0578 C501      		movw r24,r10
 1191 057a 0E94 0000 		call print_Time_Binary
 1192 057e 00C0      		rjmp .L183
 1193               		.size	main, .-main
 1194               		.stabs	"i:r(0,1)",64,0,46,16
 1195               		.stabs	"a:(0,16)=ar(0,17)=r(0,17);0;0177777;;0;4;(0,13)",128,0,51,1
 1196               		.stabs	"time:r(0,1)",64,0,52,10
 1197               		.stabn	192,0,0,.LFBB9-.LFBB9
 1198               		.stabn	224,0,0,.Lscope9-.LFBB9
 1199               	.Lscope9:
 1200               		.stabs	"",36,0,0,.Lscope9-.LFBB9
 1201               		.stabd	78,0,0
 1202               		.stabs	"final_distance:F(0,13)",36,0,283,final_distance
 1203               		.stabs	"angle0xz:P(0,13)",64,0,283,22
 1204               		.stabs	"tf:P(0,13)",64,0,283,18
 1205               	.global	final_distance
 1206               		.type	final_distance, @function
 1207               	final_distance:
 1208               		.stabd	46,0,0
 274:main.c        **** 
 275:main.c        **** 
 276:main.c        **** }
 277:main.c        **** //------------------------------------------------------//
 278:main.c        **** 
 279:main.c        **** //------------------------------------------------------//
GAS LISTING /tmp/ccGhru5g.s 			page 30


 280:main.c        **** //--------------------Final_Distance--------------------//
 281:main.c        **** //------------------------------------------------------//
 282:main.c        **** 
 283:main.c        **** double final_distance(double angle0xz,double tf){
 1209               		.stabn	68,0,283,.LM132-.LFBB10
 1210               	.LM132:
 1211               	.LFBB10:
 1212               	/* prologue: function */
 1213               	/* frame size = 0 */
 1214               	/* stack size = 0 */
 1215               	.L__stack_usage = 0
 284:main.c        **** 	float theta=10/57.2958;
 285:main.c        **** 	float t=0.7;
 286:main.c        **** 	float g=9.8;
 287:main.c        **** 	float a=-sin(2*theta)/(t*t); 
 288:main.c        **** 	float b=g;
 289:main.c        **** 	float c=(-1/4)*g*g*t*t*sin(2*theta);
 290:main.c        **** 	float r=(1/(2*a))*(-b+sqrt(b*b-4*a*c));
 291:main.c        **** 	return r;
 292:main.c        **** }
 1216               		.stabn	68,0,292,.LM133-.LFBB10
 1217               	.LM133:
 1218 0580 60E0      		ldi r22,lo8(0x80000000)
 1219 0582 70E0      		ldi r23,hi8(0x80000000)
 1220 0584 80E0      		ldi r24,hlo8(0x80000000)
 1221 0586 90E8      		ldi r25,hhi8(0x80000000)
 1222               	/* epilogue start */
 1223 0588 0895      		ret
 1224               		.size	final_distance, .-final_distance
 1225               	.Lscope10:
 1226               		.stabs	"",36,0,0,.Lscope10-.LFBB10
 1227               		.stabd	78,0,0
 1228               		.stabs	"",100,0,0,.Letext0
 1229               	.Letext0:
GAS LISTING /tmp/ccGhru5g.s 			page 31


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccGhru5g.s:2      *ABS*:0000003f __SREG__
     /tmp/ccGhru5g.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccGhru5g.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccGhru5g.s:5      *ABS*:00000034 __CCP__
     /tmp/ccGhru5g.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/ccGhru5g.s:7      *ABS*:00000001 __zero_reg__
     /tmp/ccGhru5g.s:74     .text:00000000 init_ports
     /tmp/ccGhru5g.s:123    .text:00000018 select_ADC_port
     /tmp/ccGhru5g.s:158    .text:00000024 initial_anglexy
     /tmp/ccGhru5g.s:190    .text:0000003a initial_anglexz
     /tmp/ccGhru5g.s:234    .text:00000068 initial_angleyz
     /tmp/ccGhru5g.s:277    .text:00000096 print_Angle_Binary
     /tmp/ccGhru5g.s:602    .text:00000260 print_Distance
     /tmp/ccGhru5g.s:922    .text:00000424 print_Time_Binary
     /tmp/ccGhru5g.s:1024   .text:0000047a main
     /tmp/ccGhru5g.s:1207   .text:00000580 final_distance

UNDEFINED SYMBOLS
__divsf3
atan
__mulsf3
__gtsf2
__floatsisf
__addsf3
__eqsf2
